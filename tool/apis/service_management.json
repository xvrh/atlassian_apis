{
  "components": {
    "schemas": {
      "AdditionalCommentDTO": {
        "additionalProperties": false,
        "properties": {
          "body": {
            "description": "Content of the comment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApprovalDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "The REST API URL of the approval."
          },
          "approvers": {
            "description": "Detailed list of the users who must provide a response to the approval.",
            "items": {
              "$ref": "#/components/schemas/ApproverDTO"
            },
            "type": "array"
          },
          "canAnswerApproval": {
            "description": "Indicates whether the user making the request is one of the approvers and can respond to the approval (true) or not (false).",
            "type": "boolean"
          },
          "completedDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date the approval was completed."
          },
          "createdDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date the approval was created."
          },
          "finalDecision": {
            "description": "Outcome of the approval, based on the approvals provided by all approvers.",
            "enum": [
              "approved",
              "declined",
              "pending"
            ],
            "type": "string"
          },
          "id": {
            "description": "ID of the approval.",
            "type": "string"
          },
          "name": {
            "description": "Description of the approval being sought or provided.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApprovalDecisionRequestDTO": {
        "additionalProperties": false,
        "properties": {
          "decision": {
            "description": "Response to the approval request.",
            "enum": [
              "approve",
              "decline"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApproverDTO": {
        "additionalProperties": false,
        "properties": {
          "approver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDTO"
              }
            ],
            "description": "Details of the User who is providing approval."
          },
          "approverDecision": {
            "description": "Decision made by the approver.",
            "enum": [
              "approved",
              "declined",
              "pending"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArticleDTO": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ContentDTO"
          },
          "excerpt": {
            "description": "Excerpt of the article which matches the given query string.",
            "type": "string"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceDTO"
              }
            ],
            "description": "Source of the article."
          },
          "title": {
            "description": "Title of the article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetsWorkspaceDTO": {
        "additionalProperties": false,
        "description": "Details of an Assets workspace ID.",
        "properties": {
          "workspaceId": {
            "description": "The workspace ID used as the identifier to access the Assets REST API.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachmentCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "additionalComment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalCommentDTO"
              }
            ],
            "description": "Additional content of the comment"
          },
          "public": {
            "description": "Controls whether the comment and its attachments are visible to customers",
            "type": "boolean"
          },
          "temporaryAttachmentIds": {
            "description": "List of IDs for the temporary attachments to be added to the customer request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AttachmentCreateResultDTO": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOAttachmentDTO"
              }
            ],
            "description": "List of the attachments added."
          },
          "comment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommentDTO"
              }
            ],
            "description": "Details of the comment included with the attachments."
          }
        },
        "type": "object"
      },
      "AttachmentDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentLinkDTO"
              }
            ],
            "description": "Various URLs for the attachment."
          },
          "author": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDTO"
              }
            ],
            "description": "Details of the user who attached the file."
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date the attachment was added."
          },
          "filename": {
            "description": "Filename of the item attached.",
            "type": "string"
          },
          "mimeType": {
            "description": "MIME type of the attachment.",
            "type": "string"
          },
          "size": {
            "description": "Size of the attachment in bytes.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AttachmentLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "description": "URL for the attachment.",
            "format": "uri",
            "type": "string"
          },
          "jiraRest": {
            "description": "REST API URL for the attachment",
            "format": "uri",
            "type": "string"
          },
          "self": {
            "format": "uri",
            "type": "string"
          },
          "thumbnail": {
            "description": "URL for the attachment's thumbnail image.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AvatarUrlsBean": {
        "additionalProperties": false,
        "properties": {
          "16x16": {
            "description": "The URL of the item's 16x16 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "24x24": {
            "description": "The URL of the item's 24x24 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "32x32": {
            "description": "The URL of the item's 32x32 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "48x48": {
            "description": "The URL of the item's 48x48 pixel avatar.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CSATFeedbackFullDTO": {
        "additionalProperties": false,
        "properties": {
          "comment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalCommentDTO"
              }
            ],
            "description": "(Optional) The comment provided with this feedback."
          },
          "rating": {
            "description": "A numeric representation of the rating, this must be an integer value between 1 and 5.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Indicates the type of feedback, supported values: `csat`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeDetails": {
        "additionalProperties": false,
        "description": "A change item.",
        "properties": {
          "field": {
            "description": "The name of the field changed.",
            "readOnly": true,
            "type": "string"
          },
          "fieldId": {
            "description": "The ID of the field changed.",
            "readOnly": true,
            "type": "string"
          },
          "fieldtype": {
            "description": "The type of the field changed.",
            "readOnly": true,
            "type": "string"
          },
          "from": {
            "description": "The details of the original value.",
            "readOnly": true,
            "type": "string"
          },
          "fromString": {
            "description": "The details of the original value as a string.",
            "readOnly": true,
            "type": "string"
          },
          "to": {
            "description": "The details of the new value.",
            "readOnly": true,
            "type": "string"
          },
          "toString": {
            "description": "The details of the new value as a string.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Changelog": {
        "additionalProperties": false,
        "description": "A log of changes made to issue fields. Changelogs related to workflow associations are currently being deprecated.",
        "properties": {
          "author": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDetails"
              }
            ],
            "description": "The user who made the change.",
            "readOnly": true
          },
          "created": {
            "description": "The date on which the change took place.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "historyMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HistoryMetadata"
              }
            ],
            "description": "The history metadata associated with the changed.",
            "readOnly": true
          },
          "id": {
            "description": "The ID of the changelog.",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "description": "The list of items changed.",
            "items": {
              "$ref": "#/components/schemas/ChangeDetails"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CommentCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "body": {
            "description": "Content of the comment.",
            "type": "string"
          },
          "public": {
            "description": "Indicates whether the comment is public (true) or private/internal (false).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CommentDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "description": "List of items that can be expanded in the response by specifying the expand query parameter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL link to the comment."
          },
          "attachments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOAttachmentDTO"
              }
            ],
            "description": "List of the attachments included in the comment."
          },
          "author": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDTO"
              }
            ],
            "description": "Details of the customer who authored the comment."
          },
          "body": {
            "description": "Content of the comment.",
            "type": "string"
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date the comment was created."
          },
          "id": {
            "description": "ID of the comment.",
            "type": "string"
          },
          "public": {
            "description": "Indicates whether the comment is public (true) or private/internal (false).",
            "type": "boolean"
          },
          "renderedBody": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RenderedValueDTO"
              }
            ],
            "description": "The rendered body of the comment."
          }
        },
        "type": "object"
      },
      "ContentDTO": {
        "additionalProperties": false,
        "properties": {
          "iframeSrc": {
            "description": "Url containing the body of the article (without title), suitable for rendering in an iframe",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "description": "Customer's name for display in the UI.",
            "type": "string"
          },
          "email": {
            "description": "Customer's email address.",
            "type": "string"
          },
          "fullName": {
            "description": "Deprecated, please use 'displayName'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerRequestActionDTO": {
        "additionalProperties": false,
        "properties": {
          "allowed": {
            "description": "Indicates whether the user can undertake the action (true) or not (false).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CustomerRequestActionsDTO": {
        "additionalProperties": false,
        "properties": {
          "addAttachment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestActionDTO"
              }
            ],
            "description": "Action of adding attachments to a request."
          },
          "addComment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestActionDTO"
              }
            ],
            "description": "Action of adding comments to a request."
          },
          "addParticipant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestActionDTO"
              }
            ],
            "description": "Action of adding participants to a request."
          },
          "removeParticipant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestActionDTO"
              }
            ],
            "description": "Action of removing participants from a request."
          }
        },
        "type": "object"
      },
      "CustomerRequestCreateMetaDTO": {
        "additionalProperties": false,
        "properties": {
          "canAddRequestParticipants": {
            "description": "Flag indicating if participants can be added to a request (true) or not.",
            "type": "boolean"
          },
          "canRaiseOnBehalfOf": {
            "description": "Flag indicating if a request can be raised on behalf of another user (true) or not.",
            "type": "boolean"
          },
          "requestTypeFields": {
            "description": "List of the fields included in this request.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeFieldDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomerRequestDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "description": "List of items that can be expanded in the response by specifying the expand query parameter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestLinkDTO"
              }
            ],
            "description": "List of links associated with the request."
          },
          "actions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestActionsDTO"
              }
            ],
            "description": "List of actions that the user can take on the request."
          },
          "attachments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOAttachmentDTO"
              }
            ],
            "description": "List of attachments included with the request."
          },
          "comments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOCommentDTO"
              }
            ],
            "description": "List of comments included with the request."
          },
          "createdDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date on which the request was created."
          },
          "currentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestStatusDTO"
              }
            ],
            "description": "Status of the request."
          },
          "issueId": {
            "description": "ID of the request, as the peer issue ID.",
            "type": "string"
          },
          "issueKey": {
            "description": "Key of the request, as the peer issue key.",
            "type": "string"
          },
          "participants": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOUserDTO"
              }
            ],
            "description": "Expandable details of the customers participating in the request."
          },
          "reporter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDTO"
              }
            ],
            "description": "Details of the customer reporting the request."
          },
          "requestFieldValues": {
            "description": "JSON map of Jira field IDs and their values representing the content of the request. This list does not include hidden fields.",
            "items": {
              "$ref": "#/components/schemas/CustomerRequestFieldValueDTO"
            },
            "type": "array"
          },
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestTypeDTO"
              }
            ],
            "description": "Expandable details of the request type."
          },
          "requestTypeId": {
            "description": "ID of the request type for the request.",
            "type": "string"
          },
          "serviceDesk": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceDeskDTO"
              }
            ],
            "description": "Expandable details of the service desk."
          },
          "serviceDeskId": {
            "description": "ID of the service desk the request belongs to.",
            "type": "string"
          },
          "sla": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOSlaInformationDTO"
              }
            ],
            "description": "Expandable details of the SLAs relating to the request."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedDTOCustomerRequestStatusDTO"
              }
            ],
            "description": "Expandable details of the request's status history."
          }
        },
        "type": "object"
      },
      "CustomerRequestFieldValueDTO": {
        "additionalProperties": false,
        "properties": {
          "fieldId": {
            "description": "ID of the field.",
            "type": "string"
          },
          "label": {
            "description": "Text label for the field.",
            "type": "string"
          },
          "renderedValue": {
            "description": "Value of the field rendered in the UI.",
            "type": "object"
          },
          "value": {
            "description": "Value of the field."
          }
        },
        "type": "object"
      },
      "CustomerRequestLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "agent": {
            "description": "Jira agent view URL for the request.",
            "format": "uri",
            "type": "string"
          },
          "jiraRest": {
            "description": "REST API URL for the request.",
            "format": "uri",
            "type": "string"
          },
          "self": {
            "format": "uri",
            "type": "string"
          },
          "web": {
            "description": "Web URL for the request.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerRequestStatusDTO": {
        "additionalProperties": false,
        "properties": {
          "status": {
            "description": "Name of the status condition.",
            "type": "string"
          },
          "statusCategory": {
            "description": "Status category the status belongs to.",
            "enum": [
              "UNDEFINED",
              "NEW",
              "INDETERMINATE",
              "DONE"
            ],
            "type": "string"
          },
          "statusDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date on which the status was attained."
          }
        },
        "type": "object"
      },
      "CustomerTransitionDTO": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "ID of the transition.",
            "type": "string"
          },
          "name": {
            "description": "Name of the transition.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerTransitionExecutionDTO": {
        "additionalProperties": false,
        "properties": {
          "additionalComment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalCommentDTO"
              }
            ],
            "description": "Comment explaining the reason for the transition."
          },
          "id": {
            "description": "ID of the transition to be performed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateDTO": {
        "additionalProperties": false,
        "properties": {
          "epochMillis": {
            "description": "Date as the number of milliseconds that have elapsed since 00:00:00 Coordinated Universal Time (UTC), 1 January 1970.",
            "format": "int64",
            "type": "integer"
          },
          "friendly": {
            "description": "Date in a user-friendly text format.",
            "type": "string"
          },
          "iso8601": {
            "description": "Date in ISO8601 format.",
            "type": "string"
          },
          "jira": {
            "description": "Date in the format used in the Jira REST APIs, which is ISO8601 format but extended with milliseconds. For example, 2016-09-28T23:08:32.097+1000.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DurationDTO": {
        "additionalProperties": false,
        "properties": {
          "friendly": {
            "description": "Duration in a user-friendly text format.",
            "type": "string"
          },
          "millis": {
            "description": "Duration in milliseconds.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EntityProperty": {
        "additionalProperties": false,
        "description": "An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
        "properties": {
          "key": {
            "description": "The key of the property. Required on create and update.",
            "type": "string"
          },
          "value": {
            "description": "The value of the property. Required on create and update."
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "additionalProperties": false,
        "properties": {
          "errorMessage": {
            "type": "string"
          },
          "i18nErrorMessage": {
            "$ref": "#/components/schemas/I18nErrorMessage"
          }
        },
        "type": "object"
      },
      "Expandable": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FieldMetadata": {
        "additionalProperties": false,
        "description": "The metadata describing an issue field.",
        "properties": {
          "allowedValues": {
            "description": "The list of values allowed in the field.",
            "items": {
              "readOnly": true
            },
            "readOnly": true,
            "type": "array"
          },
          "autoCompleteUrl": {
            "description": "The URL that can be used to automatically complete the field.",
            "readOnly": true,
            "type": "string"
          },
          "configuration": {
            "additionalProperties": {
              "readOnly": true
            },
            "description": "The configuration properties.",
            "readOnly": true,
            "type": "object"
          },
          "defaultValue": {
            "description": "The default value of the field.",
            "readOnly": true
          },
          "hasDefaultValue": {
            "description": "Whether the field has a default value.",
            "readOnly": true,
            "type": "boolean"
          },
          "key": {
            "description": "The key of the field.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the field.",
            "readOnly": true,
            "type": "string"
          },
          "operations": {
            "description": "The list of operations that can be performed on the field.",
            "items": {
              "readOnly": true,
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "required": {
            "description": "Whether the field is required.",
            "readOnly": true,
            "type": "boolean"
          },
          "schema": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonTypeBean"
              }
            ],
            "description": "The data type of the field.",
            "readOnly": true
          }
        },
        "required": [
          "key",
          "name",
          "operations",
          "required",
          "schema"
        ],
        "type": "object",
        "xml": {
          "name": "availableField"
        }
      },
      "Form": {
        "additionalProperties": true,
        "properties": {
          "answers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FormAnswer"
            },
            "description": "JSON mapping of form field answers containing form field IDs and corresponding values.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "FormAnswer": {
        "additionalProperties": false,
        "properties": {
          "adf": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonNode"
              }
            ],
            "description": "Answer in Atlassian Document Format (ADF)"
          },
          "choices": {
            "description": "IDs of selected choices",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "date": {
            "description": "Answer in date format (yyyy-MM-dd)",
            "type": "string"
          },
          "files": {
            "description": "The IDs of files to be attached to the form that are obtained by calling the ‘attach temporary file’ endpoint on the corresponding service desk.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "text": {
            "description": "Answer in free text format",
            "type": "string"
          },
          "time": {
            "description": "Answer in timestamp format (HH:mm)",
            "type": "string"
          },
          "users": {
            "description": "IDs of selected users",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HistoryMetadata": {
        "additionalProperties": true,
        "description": "Details of issue history metadata.",
        "properties": {
          "activityDescription": {
            "description": "The activity described in the history record.",
            "type": "string"
          },
          "activityDescriptionKey": {
            "description": "The key of the activity described in the history record.",
            "type": "string"
          },
          "actor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HistoryMetadataParticipant"
              }
            ],
            "description": "Details of the user whose action created the history record."
          },
          "cause": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HistoryMetadataParticipant"
              }
            ],
            "description": "Details of the cause that triggered the creation the history record."
          },
          "description": {
            "description": "The description of the history record.",
            "type": "string"
          },
          "descriptionKey": {
            "description": "The description key of the history record.",
            "type": "string"
          },
          "emailDescription": {
            "description": "The description of the email address associated the history record.",
            "type": "string"
          },
          "emailDescriptionKey": {
            "description": "The description key of the email address associated the history record.",
            "type": "string"
          },
          "extraData": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional arbitrary information about the history record.",
            "type": "object"
          },
          "generator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HistoryMetadataParticipant"
              }
            ],
            "description": "Details of the system that generated the history record."
          },
          "type": {
            "description": "The type of the history record.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HistoryMetadataParticipant": {
        "additionalProperties": true,
        "description": "Details of user or system associated with a issue history metadata item.",
        "properties": {
          "avatarUrl": {
            "description": "The URL to an avatar for the user or system associated with a history record.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the user or system associated with a history record.",
            "type": "string"
          },
          "displayNameKey": {
            "description": "The key of the display name of the user or system associated with a history record.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the user or system associated with a history record.",
            "type": "string"
          },
          "type": {
            "description": "The type of the user or system associated with a history record.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the user or system associated with a history record.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "I18nErrorMessage": {
        "additionalProperties": false,
        "properties": {
          "i18nKey": {
            "type": "string"
          },
          "parameters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IncludedFields": {
        "additionalProperties": false,
        "properties": {
          "actuallyIncluded": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "excluded": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "included": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "InputStreamSource": {
        "additionalProperties": false,
        "properties": {
          "inputStream": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "InsightWorkspaceDTO": {
        "additionalProperties": false,
        "description": "Details of an insight workspace ID.",
        "properties": {
          "workspaceId": {
            "description": "The workspace ID used as the identifier to access the Insight REST API.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IssueBean": {
        "additionalProperties": false,
        "description": "Details about an issue.",
        "properties": {
          "changelog": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageOfChangelogs"
              }
            ],
            "description": "Details of changelogs associated with the issue.",
            "readOnly": true
          },
          "editmeta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IssueUpdateMetadata"
              }
            ],
            "description": "The metadata for the fields on the issue that can be amended.",
            "readOnly": true
          },
          "expand": {
            "description": "Expand options that include additional issue details in the response.",
            "readOnly": true,
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fields": {
            "additionalProperties": {},
            "type": "object"
          },
          "fieldsToInclude": {
            "$ref": "#/components/schemas/IncludedFields"
          },
          "id": {
            "description": "The ID of the issue.",
            "readOnly": true,
            "type": "string"
          },
          "key": {
            "description": "The key of the issue.",
            "readOnly": true,
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "readOnly": true,
              "type": "string"
            },
            "description": "The ID and name of each field present on the issue.",
            "readOnly": true,
            "type": "object"
          },
          "operations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Operations"
              }
            ],
            "description": "The operations that can be performed on the issue.",
            "readOnly": true
          },
          "properties": {
            "additionalProperties": {
              "readOnly": true
            },
            "description": "Details of the issue properties identified in the request.",
            "readOnly": true,
            "type": "object"
          },
          "renderedFields": {
            "additionalProperties": {
              "readOnly": true
            },
            "description": "The rendered value of each field present on the issue.",
            "readOnly": true,
            "type": "object"
          },
          "schema": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonTypeBean"
            },
            "description": "The schema describing each field present on the issue.",
            "readOnly": true,
            "type": "object"
          },
          "self": {
            "description": "The URL of the issue details.",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "transitions": {
            "description": "The transitions that can be performed on the issue.",
            "items": {
              "$ref": "#/components/schemas/IssueTransition"
            },
            "readOnly": true,
            "type": "array"
          },
          "versionedRepresentations": {
            "additionalProperties": {
              "additionalProperties": {
                "readOnly": true
              },
              "readOnly": true,
              "type": "object"
            },
            "description": "The versions of each field on the issue.",
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object",
        "xml": {
          "name": "issue"
        }
      },
      "IssueTransition": {
        "additionalProperties": true,
        "description": "Details of an issue transition.",
        "properties": {
          "expand": {
            "description": "Expand options that include additional transition details in the response.",
            "readOnly": true,
            "type": "string"
          },
          "fields": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FieldMetadata"
            },
            "description": "Details of the fields associated with the issue transition screen. Use this information to populate `fields` and `update` in a transition request.",
            "readOnly": true,
            "type": "object"
          },
          "hasScreen": {
            "description": "Whether there is a screen associated with the issue transition.",
            "readOnly": true,
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the issue transition. Required when specifying a transition to undertake.",
            "type": "string"
          },
          "isAvailable": {
            "description": "Whether the transition is available to be performed.",
            "readOnly": true,
            "type": "boolean"
          },
          "isConditional": {
            "description": "Whether the issue has to meet criteria before the issue transition is applied.",
            "readOnly": true,
            "type": "boolean"
          },
          "isGlobal": {
            "description": "Whether the issue transition is global, that is, the transition is applied to issues regardless of their status.",
            "readOnly": true,
            "type": "boolean"
          },
          "isInitial": {
            "description": "Whether this is the initial issue transition for the workflow.",
            "readOnly": true,
            "type": "boolean"
          },
          "looped": {
            "type": "boolean"
          },
          "name": {
            "description": "The name of the issue transition.",
            "readOnly": true,
            "type": "string"
          },
          "to": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusDetails"
              }
            ],
            "description": "Details of the issue status after the transition.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "IssueUpdateMetadata": {
        "description": "A list of editable field details.",
        "properties": {
          "fields": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FieldMetadata"
            },
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "JsonNode": {
        "additionalProperties": false,
        "properties": {
          "array": {
            "type": "boolean"
          },
          "bigDecimal": {
            "type": "boolean"
          },
          "bigInteger": {
            "type": "boolean"
          },
          "bigIntegerValue": {
            "type": "integer"
          },
          "binary": {
            "type": "boolean"
          },
          "binaryValue": {
            "items": {
              "format": "byte",
              "type": "string"
            },
            "type": "array"
          },
          "boolean": {
            "type": "boolean"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "containerNode": {
            "type": "boolean"
          },
          "decimalValue": {
            "type": "number"
          },
          "double": {
            "type": "boolean"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "elements": {
            "type": "object"
          },
          "fieldNames": {
            "type": "object"
          },
          "fields": {
            "type": "object"
          },
          "floatingPointNumber": {
            "type": "boolean"
          },
          "int": {
            "type": "boolean"
          },
          "intValue": {
            "format": "int32",
            "type": "integer"
          },
          "integralNumber": {
            "type": "boolean"
          },
          "long": {
            "type": "boolean"
          },
          "longValue": {
            "format": "int64",
            "type": "integer"
          },
          "missingNode": {
            "type": "boolean"
          },
          "null": {
            "type": "boolean"
          },
          "number": {
            "type": "boolean"
          },
          "numberType": {
            "enum": [
              "INT",
              "LONG",
              "BIG_INTEGER",
              "FLOAT",
              "DOUBLE",
              "BIG_DECIMAL"
            ],
            "type": "string"
          },
          "numberValue": {
            "type": "number"
          },
          "object": {
            "type": "boolean"
          },
          "pojo": {
            "type": "boolean"
          },
          "textValue": {
            "type": "string"
          },
          "textual": {
            "type": "boolean"
          },
          "valueAsBoolean": {
            "type": "boolean"
          },
          "valueAsDouble": {
            "format": "double",
            "type": "number"
          },
          "valueAsInt": {
            "format": "int32",
            "type": "integer"
          },
          "valueAsLong": {
            "format": "int64",
            "type": "integer"
          },
          "valueAsText": {
            "type": "string"
          },
          "valueNode": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "JsonTypeBean": {
        "additionalProperties": false,
        "description": "The schema of a field.",
        "properties": {
          "configuration": {
            "additionalProperties": {
              "readOnly": true
            },
            "description": "If the field is a custom field, the configuration of the field.",
            "readOnly": true,
            "type": "object"
          },
          "custom": {
            "description": "If the field is a custom field, the URI of the field.",
            "readOnly": true,
            "type": "string"
          },
          "customId": {
            "description": "If the field is a custom field, the custom ID of the field.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "items": {
            "description": "When the data type is an array, the name of the field items within the array.",
            "readOnly": true,
            "type": "string"
          },
          "system": {
            "description": "If the field is a system field, the name of the field.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The data type of the field.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "LinkGroup": {
        "additionalProperties": false,
        "description": "Details a link group, which defines issue operations.",
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/LinkGroup"
            },
            "type": "array"
          },
          "header": {
            "$ref": "#/components/schemas/SimpleLink"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/SimpleLink"
            },
            "type": "array"
          },
          "styleClass": {
            "type": "string"
          },
          "weight": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Linkable": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/SelfLinkDTO"
          }
        },
        "type": "object"
      },
      "LinkableAttachmentLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/AttachmentLinkDTO"
          }
        },
        "type": "object"
      },
      "LinkableCustomerRequestLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/CustomerRequestLinkDTO"
          }
        },
        "type": "object"
      },
      "LinkableUserLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/UserLinkDTO"
          }
        },
        "type": "object"
      },
      "MultipartFile": {
        "additionalProperties": false,
        "properties": {
          "bytes": {
            "items": {
              "format": "byte",
              "type": "string"
            },
            "type": "array"
          },
          "contentType": {
            "type": "string"
          },
          "empty": {
            "type": "boolean"
          },
          "inputStream": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "originalFilename": {
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/Resource"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Operations": {
        "additionalProperties": true,
        "description": "Details of the operations that can be performed on the issue.",
        "properties": {
          "linkGroups": {
            "description": "Details of the link groups defining issue operations.",
            "items": {
              "$ref": "#/components/schemas/LinkGroup"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OrganizationCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Name of the organization. Must contain 1-200 characters.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "OrganizationDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL to the organization."
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date the organization was created. This field may not be present in some older organizations."
          },
          "id": {
            "description": "A unique system generated ID for the organization.",
            "type": "string"
          },
          "name": {
            "description": "Name of the organization.",
            "type": "string"
          },
          "uuid": {
            "description": "A unique system generated ID for the organization. This is identity from the group directory id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrganizationServiceDeskUpdateDTO": {
        "additionalProperties": true,
        "properties": {
          "organizationId": {
            "description": "List of organizations, specified by 'ID' field values, to add to or remove from the service desk.",
            "format": "int32",
            "type": "integer"
          },
          "serviceDeskId": {
            "description": "Service desk Id for which, organization needs to be updated",
            "type": "string"
          }
        },
        "required": [
          "organizationId"
        ],
        "type": "object"
      },
      "PageOfChangelogs": {
        "additionalProperties": false,
        "description": "A page of changelogs.",
        "properties": {
          "histories": {
            "description": "The list of changelogs.",
            "items": {
              "$ref": "#/components/schemas/Changelog"
            },
            "readOnly": true,
            "type": "array"
          },
          "maxResults": {
            "description": "The maximum number of results that could be on the page.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "startAt": {
            "description": "The index of the first item returned on the page.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "total": {
            "description": "The number of results on the page.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PagedDTOApprovalDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/ApprovalDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOArticleDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/ArticleDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOAssetsWorkspaceDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/AssetsWorkspaceDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOAttachmentDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/AttachmentDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOCommentDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/CommentDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOCustomerRequestDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/CustomerRequestDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOCustomerRequestStatusDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/CustomerRequestStatusDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOCustomerTransitionDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/CustomerTransitionDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOInsightWorkspaceDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/InsightWorkspaceDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOIssueBean": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/IssueBean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOOrganizationDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/OrganizationDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOQueueDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/QueueDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTORequestTypeDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTORequestTypeGroupDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeGroupDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOServiceDeskDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/ServiceDeskDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOSlaInformationDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/SlaInformationDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedDTOUserDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PagedLinkDTO"
              }
            ],
            "description": "List of the links relating to the page."
          },
          "isLastPage": {
            "description": "Indicates if this is the last page of records (true) or not (false).",
            "type": "boolean"
          },
          "limit": {
            "description": "Number of items to be returned per page, up to the maximum set for these objects in the current implementation.",
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Number of items returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Index of the first item returned in the page.",
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "description": "Details of the items included in the page.",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PagedLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "base": {
            "description": "Base URL for the REST API calls.",
            "format": "uri",
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "next": {
            "description": "REST API URL for the next page, if there is one.",
            "format": "uri",
            "type": "string"
          },
          "prev": {
            "description": "REST API URL for the previous page, if there is one.",
            "format": "uri",
            "type": "string"
          },
          "self": {
            "description": "REST API URL for the current page.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectDetails": {
        "additionalProperties": false,
        "description": "Details about a project.",
        "properties": {
          "avatarUrls": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvatarUrlsBean"
              }
            ],
            "description": "The URLs of the project's avatars.",
            "readOnly": true
          },
          "id": {
            "description": "The ID of the project.",
            "type": "string"
          },
          "key": {
            "description": "The key of the project.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the project.",
            "readOnly": true,
            "type": "string"
          },
          "projectCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatedProjectCategory"
              }
            ],
            "description": "The category the project belongs to.",
            "readOnly": true
          },
          "projectTypeKey": {
            "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
            "enum": [
              "software",
              "service_desk",
              "business"
            ],
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the project details.",
            "readOnly": true,
            "type": "string"
          },
          "simplified": {
            "description": "Whether or not the project is simplified.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PropertyKey": {
        "additionalProperties": false,
        "description": "Property key details.",
        "properties": {
          "key": {
            "description": "The key of the property.",
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the property.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PropertyKeys": {
        "additionalProperties": false,
        "description": "List of property keys.",
        "properties": {
          "keys": {
            "description": "Property key details.",
            "items": {
              "$ref": "#/components/schemas/PropertyKey"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueueDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL to the queue."
          },
          "fields": {
            "description": "Fields returned for each request in the queue.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "ID for the queue.",
            "type": "string"
          },
          "issueCount": {
            "description": "The count of customer requests in the queue.",
            "format": "int64",
            "type": "integer"
          },
          "jql": {
            "description": "JQL query that filters reqeusts for the queue.",
            "type": "string"
          },
          "name": {
            "description": "Short name for the queue.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RenderedValueDTO": {
        "additionalProperties": false,
        "properties": {
          "html": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "channel": {
            "description": "(Experimental) Shows extra information for the request channel.",
            "type": "string"
          },
          "form": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form"
              }
            ],
            "description": "Provides answers to the form associated with a request type that is attached to the request on creation. Jira fields should be omitted from `requestFieldValues` if they are linked to form answers. Form answers in ADF format should have `isAdfRequest` set to true. Form answers are not currently validated."
          },
          "isAdfRequest": {
            "description": "(Experimental) Whether to accept rich text fields in Atlassian Document Format (ADF).",
            "type": "boolean"
          },
          "raiseOnBehalfOf": {
            "description": "The `accountId` of the customer that the request is being raised on behalf of.",
            "type": "string"
          },
          "requestFieldValues": {
            "additionalProperties": {},
            "description": "JSON map of Jira field IDs and their values representing the content of the request.",
            "type": "object"
          },
          "requestParticipants": {
            "description": "List of customers to participate in the request, as a list of `accountId` values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "requestTypeId": {
            "description": "ID of the request type for the request.",
            "type": "string"
          },
          "serviceDeskId": {
            "description": "ID of the service desk in which to create the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestNotificationSubscriptionDTO": {
        "additionalProperties": false,
        "properties": {
          "subscribed": {
            "description": "Indicates whether the user is subscribed (true) or not (false) to the request's notifications.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RequestParticipantUpdateDTO": {
        "additionalProperties": false,
        "properties": {
          "accountIds": {
            "description": "List of users, specified by account IDs, to add to or remove as participants in the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "usernames": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountIds` instead.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RequestTypeCreateDTO": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "description": "Description of the request type on the service desk.",
            "type": "string"
          },
          "helpText": {
            "description": "Help text for the request type on the service desk.",
            "type": "string"
          },
          "issueTypeId": {
            "description": "ID of the request type to add to the service desk.",
            "type": "string"
          },
          "name": {
            "description": "Name of the request type on the service desk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestTypeDTO": {
        "additionalProperties": false,
        "properties": {
          "_expands": {
            "description": "List of items that can be expanded in the response by specifying the expand query parameter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL for the request type."
          },
          "canCreateRequest": {
            "description": "Whether the user has permission to create a request with this request type.",
            "type": "boolean"
          },
          "description": {
            "description": "Description of the request type.",
            "type": "string"
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerRequestCreateMetaDTO"
              }
            ],
            "description": "Fields and additional metadata for creating a request that uses the request type"
          },
          "groupIds": {
            "description": "List of the request type groups the request type belongs to.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "helpText": {
            "description": "Help text for the request type.",
            "type": "string"
          },
          "icon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestTypeIconDTO"
              }
            ],
            "description": "Links to the request type's icons."
          },
          "id": {
            "description": "ID for the request type.",
            "type": "string"
          },
          "issueTypeId": {
            "description": "ID of the issue type the request type is based upon.",
            "type": "string"
          },
          "name": {
            "description": "Short name for the request type.",
            "type": "string"
          },
          "portalId": {
            "description": "ID of the customer portal associated with the service desk project.",
            "type": "string"
          },
          "practice": {
            "description": "The request type's practice",
            "type": "string"
          },
          "restrictionStatus": {
            "description": "Whether request type is restricted or not.",
            "enum": [
              "OPEN",
              "RESTRICTED"
            ],
            "type": "string"
          },
          "serviceDeskId": {
            "description": "ID of the service desk the request type belongs to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestTypeFieldDTO": {
        "additionalProperties": false,
        "properties": {
          "defaultValues": {
            "description": "List of default values for the field.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeFieldValueDTO"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the field.",
            "type": "string"
          },
          "fieldId": {
            "description": "ID of the field.",
            "type": "string"
          },
          "jiraSchema": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonTypeBean"
              }
            ],
            "description": "Jira specific implementation details for the field in the UI."
          },
          "name": {
            "description": "Name of the field.",
            "type": "string"
          },
          "presetValues": {
            "description": "List of preset values for the field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "required": {
            "description": "Indicates if the field is required (true) or not (false).",
            "type": "boolean"
          },
          "validValues": {
            "description": "List of valid values for the field.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeFieldValueDTO"
            },
            "type": "array"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RequestTypeFieldValueDTO": {
        "additionalProperties": false,
        "properties": {
          "children": {
            "description": "List of child fields.",
            "items": {
              "$ref": "#/components/schemas/RequestTypeFieldValueDTO"
            },
            "type": "array"
          },
          "label": {
            "description": "Label for the field.",
            "type": "string"
          },
          "value": {
            "description": "Value of the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestTypeGroupDTO": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "ID of the request type group",
            "type": "string"
          },
          "name": {
            "description": "Name of the request type group.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestTypeIconDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestTypeIconLinkDTO"
              }
            ],
            "description": "Map of the URLs for the request type icons."
          },
          "id": {
            "description": "ID of the request type icon.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestTypeIconLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "iconUrls": {
            "additionalProperties": {
              "format": "uri",
              "type": "string"
            },
            "description": "URLs for the request type icons.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Resource": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "file": {
            "format": "binary",
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "inputStream": {
            "type": "object"
          },
          "open": {
            "type": "boolean"
          },
          "readable": {
            "type": "boolean"
          },
          "uri": {
            "format": "uri",
            "type": "string"
          },
          "url": {
            "format": "url",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Scope": {
        "additionalProperties": true,
        "description": "The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
        "properties": {
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectDetails"
              }
            ],
            "description": "The project the item has scope in.",
            "readOnly": true
          },
          "type": {
            "description": "The type of scope.",
            "enum": [
              "PROJECT",
              "TEMPLATE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SelfLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "self": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceDeskCustomerDTO": {
        "additionalProperties": false,
        "properties": {
          "accountIds": {
            "description": "List of users, specified by account IDs, to add to or remove from a service desk.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "usernames": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountIds` instead.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "ServiceDeskDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL to the service desk."
          },
          "id": {
            "description": "ID of the service desk.",
            "type": "string"
          },
          "projectId": {
            "description": "ID of the peer project for the service desk.",
            "type": "string"
          },
          "projectKey": {
            "description": "Key of the peer project of the service desk.",
            "type": "string"
          },
          "projectName": {
            "description": "Name of the project and service desk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SimpleLink": {
        "additionalProperties": false,
        "description": "Details about the operations available in this version.",
        "properties": {
          "href": {
            "type": "string"
          },
          "iconClass": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "styleClass": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "weight": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "link"
        }
      },
      "SlaInformationCompletedCycleDTO": {
        "additionalProperties": false,
        "properties": {
          "breachTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Time and date at which the SLA cycle breached in case of completed breached cycle or would have breached in case of non-breached completed cycle."
          },
          "breached": {
            "description": "Indicates if the SLA (duration) was exceeded (true) or not (false).",
            "type": "boolean"
          },
          "elapsedTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration in which the service was completed."
          },
          "goalDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration within which the service should have been completed."
          },
          "remainingTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration remaining after the service was completed."
          },
          "startTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Time and date at which the SLA cycle started."
          },
          "stopTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Time and date at which the SLA cycle completed."
          }
        },
        "type": "object"
      },
      "SlaInformationDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL for the SLA."
          },
          "completedCycles": {
            "description": "List of completed cycles for the SLA.",
            "items": {
              "$ref": "#/components/schemas/SlaInformationCompletedCycleDTO"
            },
            "type": "array"
          },
          "id": {
            "description": "ID of the Service Level Agreement (SLA).",
            "type": "string"
          },
          "name": {
            "description": "Description of the SLA.",
            "type": "string"
          },
          "ongoingCycle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SlaInformationOngoingCycleDTO"
              }
            ],
            "description": "Details of the active cycle for the SLA."
          },
          "slaDisplayFormat": {
            "description": "Format in which SLA is to be displayed in the UI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SlaInformationOngoingCycleDTO": {
        "additionalProperties": false,
        "properties": {
          "breachTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Time and date at which the SLA cycle would have breached its limit."
          },
          "breached": {
            "description": "Indicates whether the SLA has been breached (true) or not (false).",
            "type": "boolean"
          },
          "elapsedTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration of the service."
          },
          "goalDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration within which the service should be completed."
          },
          "paused": {
            "description": "Indicates whether the SLA is paused (true) or not (false).",
            "type": "boolean"
          },
          "remainingTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationDTO"
              }
            ],
            "description": "Duration remaining in which to complete the service."
          },
          "startTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Time and date at which the SLA cycle started."
          },
          "withinCalendarHours": {
            "description": "Indicates whether the SLA it timed during calendared working hours only (true) or not (false).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SoftwareInfoDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelfLinkDTO"
              }
            ],
            "description": "REST API URL of the instance."
          },
          "buildChangeSet": {
            "description": "Reference of the change set included in the build.",
            "type": "string"
          },
          "buildDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateDTO"
              }
            ],
            "description": "Date of the current build."
          },
          "isLicensedForUse": {
            "description": "Indicates whether the instance is licensed (true) or not (false).",
            "type": "boolean"
          },
          "platformVersion": {
            "description": "Jira Platform version upon which Service Desk is based.",
            "type": "string"
          },
          "version": {
            "description": "Jira Service Management version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SourceDTO": {
        "additionalProperties": true,
        "properties": {
          "type": {
            "description": "Type of the knowledge base source",
            "enum": [
              "confluence"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusCategory": {
        "additionalProperties": true,
        "description": "A status category.",
        "properties": {
          "colorName": {
            "description": "The name of the color used to represent the status category.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the status category.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "The key of the status category.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the status category.",
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the status category.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusDetails": {
        "additionalProperties": true,
        "description": "A status.",
        "properties": {
          "description": {
            "description": "The description of the status.",
            "readOnly": true,
            "type": "string"
          },
          "iconUrl": {
            "description": "The URL of the icon used to represent the status.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the status.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the status.",
            "readOnly": true,
            "type": "string"
          },
          "scope": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Scope"
              }
            ],
            "description": "The scope of the field.",
            "readOnly": true
          },
          "self": {
            "description": "The URL of the status.",
            "readOnly": true,
            "type": "string"
          },
          "statusCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusCategory"
              }
            ],
            "description": "The category assigned to the status.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "UpdatedProjectCategory": {
        "additionalProperties": false,
        "description": "A project category.",
        "properties": {
          "description": {
            "description": "The name of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The description of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the project category.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserDTO": {
        "additionalProperties": false,
        "properties": {
          "_links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserLinkDTO"
              }
            ],
            "description": "URLs for the customer record and related items."
          },
          "accountId": {
            "description": "The accountId of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "type": "string"
          },
          "active": {
            "description": "Indicates if the customer is active (true) or inactive (false)",
            "type": "boolean"
          },
          "displayName": {
            "description": "Customer's name for display in a UI. Depending on the customer’s privacy settings, this may return an alternative value.",
            "type": "string"
          },
          "emailAddress": {
            "description": "Customer's email address. Depending on the customer’s privacy settings, this may be returned as null.",
            "type": "string"
          },
          "key": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "type": "string"
          },
          "name": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "type": "string"
          },
          "timeZone": {
            "description": "Customer time zone. Depending on the customer’s privacy settings, this may be returned as null.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserDetails": {
        "additionalProperties": false,
        "description": "User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:\n\n *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).\n *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.\n *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.",
        "properties": {
          "accountId": {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "maxLength": 128,
            "type": "string"
          },
          "accountType": {
            "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
            "readOnly": true,
            "type": "string"
          },
          "active": {
            "description": "Whether the user is active.",
            "readOnly": true,
            "type": "boolean"
          },
          "avatarUrls": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvatarUrlsBean"
              }
            ],
            "description": "The avatars of the user.",
            "readOnly": true
          },
          "displayName": {
            "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.",
            "readOnly": true,
            "type": "string"
          },
          "emailAddress": {
            "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null.",
            "readOnly": true,
            "type": "string"
          },
          "key": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the user.",
            "readOnly": true,
            "type": "string"
          },
          "timeZone": {
            "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserLinkDTO": {
        "additionalProperties": false,
        "properties": {
          "avatarUrls": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Links to the various sizes of the customer's avatar. Note that this property is deprecated, and will be removed in future versions.",
            "type": "object"
          },
          "jiraRest": {
            "description": "REST API URL for the customer.",
            "format": "uri",
            "type": "string"
          },
          "self": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsersOrganizationUpdateDTO": {
        "additionalProperties": true,
        "properties": {
          "accountIds": {
            "description": "List of customers, specific by account IDs, to add to or remove from the organization.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "organizationId": {
            "description": "The organizationId in which users need to be added",
            "format": "int32",
            "type": "integer"
          },
          "usernames": {
            "description": "This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. Use `accountIds` instead.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "description": "OAuth2 scopes for Jira",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.atlassian.com/authorize",
            "scopes": {
              "delete:organization.property:jira-service-management": "Allows the app to delete organisation entity properties",
              "delete:organization.user:jira-service-management": "Allows the app to remove members from organisations",
              "delete:organization:jira-service-management": "Allows the app to delete organisations",
              "delete:request.feedback:jira-service-management": "Allows the app to remove feedback data from requests",
              "delete:request.notification:jira-service-management": "Allows the app to remove the subscription status of the user from requests",
              "delete:request.participant:jira-service-management": "Allows the app to remove participants (user) data from requests",
              "delete:requesttype.property:jira-service-management": "Allows the app to delete request type entity properties",
              "delete:servicedesk.customer:jira-service-management": "Allows the app the delete customers from service desks",
              "delete:servicedesk.organization:jira-service-management": "Allows the app the delete organisations from service desks",
              "delete:servicedesk.property:jira-service-management": "Allows the app to delete service desk entity properties",
              "manage:jira-configuration": "Configure Jira settings that require the Jira administrators permission, for example, create projects and custom fields, view workflows, manage issue link types.",
              "manage:jira-project": "Create and edit project settings and create new project-level objects, for example, versions, components.",
              "manage:jira-webhook": "Manage Jira webhooks. Enables an OAuth app to register and unregister dynamic webhooks in Jira. It also provides for fetching of registered webhooks.",
              "manage:servicedesk-customer": "Manage Jira Service Management customers and organizations | Create, manage and delete customers and organizations.<br>Add and remove customers and organizations from service desks.",
              "read:customer:jira-service-management": "Allows the app to read customer accounts information",
              "read:jira-user": "View user information in Jira that you have access to, including usernames, email addresses, and avatars.",
              "read:jira-work": "Read project and issue data. Search for issues and objects associated with issues (such as attachments and worklogs).",
              "read:knowledgebase:jira-service-management": "Allows the app to search and list KB articles",
              "read:organization.property:jira-service-management": "Allows the app to read organisation entity properties",
              "read:organization.user:jira-service-management": "Allows the app to read organisation membership information",
              "read:organization:jira-service-management": "Allows the app to read organisation information",
              "read:queue:jira-service-management": "Allows the app to list queues",
              "read:request.action:jira-service-management": "Allows the app to read which actions can be performed on requests",
              "read:request.approval:jira-service-management": "Allows the app to read approval data from requests",
              "read:request.attachment:jira-service-management": "Allows the app to read attachment data from requests",
              "read:request.comment:jira-service-management": "Allows the app to read comment data from requests",
              "read:request.feedback:jira-service-management": "Allows the app to read feedback data from requests",
              "read:request.notification:jira-service-management": "Allows the app to read the subscription status of the user for requests",
              "read:request.participant:jira-service-management": "Allows the app to read participant (user) data from requests",
              "read:request.sla:jira-service-management": "Allows the app to read SLA data from requests",
              "read:request.status:jira-service-management": "Allows the app to read status/transition data from requests",
              "read:request:jira-service-management": "Allows the app to list & search requests",
              "read:requesttype.property:jira-service-management": "Allows the app to read request type desk entity properties",
              "read:requesttype:jira-service-management": "Allows the app to list & search request types",
              "read:servicedesk-request": "Read customer request data, including approvals, attachments, comments, request participants, and status/transitions.<br>Read service desk and request types, including searching for request types and reading request type fields, properties and groups.",
              "read:servicedesk.customer:jira-service-management": "Allows the app the list customers of service desks",
              "read:servicedesk.organization:jira-service-management": "Allows the app to list organisations to service desks",
              "read:servicedesk.property:jira-service-management": "Allows the app to read service desk entity properties",
              "read:servicedesk:jira-service-management": "Allows the app to list & search service desks",
              "write:customer:jira-service-management": "Allows the app to create customer accounts (user)",
              "write:jira-work": "Create and edit issues in Jira, post comments, create worklogs, and delete issues.",
              "write:organization.property:jira-service-management": "Allows the app to write organisation entity properties",
              "write:organization.user:jira-service-management": "Allows the app to add members to organisations",
              "write:organization:jira-service-management": "Allows the app to create organisations",
              "write:request.approval:jira-service-management": "Allows the app to act on approvals of requests (e.g approve, deny, …)",
              "write:request.attachment:jira-service-management": "Allows the app to add attachments to requests",
              "write:request.comment:jira-service-management": "Allows the app to add comments to requests",
              "write:request.feedback:jira-service-management": "Allows the app to write feedback data on requests",
              "write:request.notification:jira-service-management": "Allows the app to change the subscription status of the user for requests",
              "write:request.participant:jira-service-management": "Allows the app to add participants (user) data from requests",
              "write:request.status:jira-service-management": "Allows the app to execute transitions on requests",
              "write:request:jira-service-management": "Allows the app to create requests",
              "write:requesttype.property:jira-service-management": "Allows the app to write request type entity properties",
              "write:requesttype:jira-service-management": "Allows the app to create or modify request types",
              "write:servicedesk-request": "Create and manage Jira Service Management requests | Create and edit customer requests, including add comments and attachments, approve, share (add request participants), subscribe, and transition.",
              "write:servicedesk.customer:jira-service-management": "Allows the app the add customers to service desks",
              "write:servicedesk.organization:jira-service-management": "Allows the app the add organisations to service desks",
              "write:servicedesk.property:jira-service-management": "Allows the app to write service desk entity properties",
              "write:servicedesk:jira-service-management": "Allows the app the add organisations, customers and request types to service desks"
            },
            "tokenUrl": "https://auth.atlassian.com/oauth/token"
          }
        },
        "type": "oauth2"
      },
      "basicAuth": {
        "description": "You can access this resource via basic auth.",
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "Public REST API for Jira Service Management",
    "termsOfService": "https://www.atlassian.com/legal/customer-agreement",
    "title": "Service Management Public REST API",
    "version": "1001.0.0-SNAPSHOT-b81c2ea7f66647f56f19e3106fce206b585c1f87"
  },
  "openapi": "3.0.1",
  "paths": {
    "/rest/servicedeskapi/assets/workspace": {
      "get": {
        "deprecated": false,
        "description": "Returns a list of Assets workspace IDs. Include a workspace ID in the path to access the [Assets REST APIs](https://developer.atlassian.com/cloud/assets/rest).\n\n**[Permissions](#permissions) required**: Any",
        "operationId": "getAssetsWorkspaces",
        "parameters": [
          {
            "description": "The starting index of the returned workspace IDs. Base index: 0 See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of workspace IDs to return per page. Default: 50 See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":true,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/rest/servicedeskapi/assets/workspace?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/rest/servicedeskapi/assets/workspace?start=0&limit=1\"},\"values\":[{\"workspaceId\":\"1060ba0e-178b-4e0e-g0h1-jedb02cccb5f\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOAssetsWorkspaceDTO"
                }
              }
            },
            "description": "Returned if the request is successful."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the authentication credentials are incorrect or missing."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have the necessary permission."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get assets workspaces",
        "tags": [
          "Assets"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/customer": {
      "post": {
        "deprecated": false,
        "description": "This method adds a customer to the Jira Service Management instance by passing a JSON file including an email address and display name. The display name does not need to be unique. The record's identifiers, `name` and `key`, are automatically generated from the request details.\n\n**[Permissions](#permissions) required**: Jira Administrator Global permission",
        "operationId": "createCustomer",
        "parameters": [
          {
            "description": "Optional boolean flag to return 409 Conflict status code for duplicate customer creation request",
            "in": "query",
            "name": "strictConflictStatusCode",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "displayName": "Fred F. User",
                "email": "fred@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}",
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            },
            "description": "Returns the customer details."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is invalid, either because the email address is incorrectly formed or already exists in the database if `strictConflictStatusCode=false` or if `strictConflictStatusCode` parameter is not provided"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is invalid because the email address already exists in the database and `strictConflictStatusCode=true`"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Create customer",
        "tags": [
          "Customer"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:customer:jira-service-management",
              "write:customer:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/rest/servicedeskapi/info": {
      "get": {
        "deprecated": false,
        "description": "This method retrieves information about the Jira Service Management instance such as software version, builds, and related links.\n\n**[Permissions](#permissions) required**: None, the user does not need to be logged in.",
        "operationId": "getInfo",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/info\"},\"buildChangeSet\":\"c6679417c550918e7c94a9eaaada133f15dc8ff0\",\"buildDate\":{\"epochMillis\":1442259240000,\"friendly\":\"Monday 02:34 AM\",\"iso8601\":\"2015-09-15T02:34:00+0700\",\"jira\":\"2015-09-15T02:34:00.000+0700\"},\"isLicensedForUse\":true,\"platformVersion\":\"7.0.1\",\"version\":\"3.0.1\"}",
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInfoDTO"
                }
              }
            },
            "description": "Returns the runtime information for the Jira Service Management instance."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": []
          },
          {}
        ],
        "summary": "Get info",
        "tags": [
          "Info"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/insight/workspace": {
      "get": {
        "deprecated": false,
        "description": "This endpoint is deprecated, please use /assets/workspace/.",
        "operationId": "getInsightWorkspaces",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOInsightWorkspaceDTO"
                }
              }
            },
            "description": "200 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get insight workspaces",
        "tags": [
          "Assets"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/knowledgebase/article": {
      "get": {
        "deprecated": false,
        "description": "Returns articles which match the given query string across all service desks.\n\n**[Permissions](#permissions) required**: Permission to access the [customer portal](https://confluence.atlassian.com/servicedeskcloud/configuring-the-customer-portal-732528918.html).",
        "operationId": "getArticles",
        "parameters": [
          {
            "description": "The string used to filter the articles (required).",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to true matching query term in the title and excerpt will be highlighted using the `@@@hl@@@term@@@endhl@@@` syntax. Default: false.",
            "in": "query",
            "name": "highlight",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article?start=0&limit=2\"},\"values\":[{\"title\":\"Stolen computer\",\"excerpt\":\"assuming your computer was stolen\",\"source\":{\"type\":\"confluence\",\"pageId\":\"8786177\",\"spaceKey\":\"IT\"},\"content\":{\"iframeSrc\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article/view/8786177\"}},{\"title\":\"Upgrading computer\",\"excerpt\":\"each computer older then 3 years can be upgraded\",\"source\":{\"type\":\"confluence\",\"pageId\":\"8785228\",\"spaceKey\":\"IT\"},\"content\":{\"iframeSrc\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article/view/8785228\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOArticleDTO"
                }
              }
            },
            "description": "Returns the articles, on the specified page of the results."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is invalid. For example: missing query parameter."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get articles",
        "tags": [
          "Knowledgebase"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:knowledgebase:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/organization": {
      "get": {
        "deprecated": false,
        "description": "This method returns a list of organizations in the Jira Service Management instance. Use this method when you want to present a list of organizations or want to locate an organization by name.\n\n**[Permissions](#permissions) required**: Any. However, to fetch organizations based on `accountId` the user must have a Service Desk agent license.\n\n**Response limitations**: If the user is a customer, only those organizations of which the customer is a member are listed.",
        "operationId": "getOrganizations",
        "parameters": [
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of organizations to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "name": "accountId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization?start=0&limit=1\"},\"values\":[{\"id\":\"1\",\"name\":\"Charlie Cakes Franchises\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOOrganizationDTO"
                }
              }
            },
            "description": "Returns paginated list of organizations."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have the necessary permission."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get organizations",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method creates an organization by passing the name of the organization.\n\n**[Permissions](#permissions) required**: Service desk administrator or agent. Note: Permission to create organizations can be switched to users with the Jira administrator permission, using the **[Organization management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)** feature.",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "Charlie Cakes Franchises"
              },
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"1\",\"name\":\"Charlie Cakes Franchises\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDTO"
                }
              }
            },
            "description": "Returns the created organization or the existing organization if name already exists."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Create organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization:jira-service-management",
              "write:organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/rest/servicedeskapi/organization/{organizationId}": {
      "delete": {
        "deprecated": false,
        "description": "This method deletes an organization. Note that the organization is deleted regardless of other associations it may have. For example, associations with service desks.\n\n**[Permissions](#permissions) required**: Jira administrator.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "description": "The ID of the organization.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the organization was deleted."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Delete organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization:jira-service-management",
              "delete:organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns details of an organization. Use this method to get organization details whenever your application component is passed an organization ID but needs to display other organization details.\n\nTo get organization detail field values which are visible in Jira Service Management, see the [Customer Service Management REST API](https://developer.atlassian.com/cloud/customer-service-management/rest/v1/api-group-organization/#api-group-organization).\n\n**[Permissions](#permissions) required**: Any\n\n**Response limitations**: Customers can only retrieve organization of which they are members.",
        "operationId": "getOrganization",
        "parameters": [
          {
            "description": "The ID of the organization.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"1\",\"name\":\"Charlie Cakes Franchises\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDTO"
                }
              }
            },
            "description": "Returns the requested organization."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/organization/{organizationId}/property": {
      "get": {
        "deprecated": false,
        "description": "Returns the keys of all organization properties. Organization properties are a type of entity property which are available to the API only, and not shown in Jira Service Management. [Learn more](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nTo get organization detail field values which are visible in Jira Service Management, see the [Customer Service Management REST API](https://developer.atlassian.com/cloud/customer-service-management/rest/v1/api-group-organization/#api-group-organization).\n\n**[Permissions](#permissions) required**: Any\n\n**Response limitations**: Customers can only access properties of organizations of which they are members.",
        "operationId": "getPropertiesKeys",
        "parameters": [
          {
            "description": "The ID of the organization from which keys will be returned.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"entityPropertyKeyBeans\":[{\"key\":\"organization.attributes\",\"self\":\"/rest/servicedeskapi/organization/1/property/propertyKey\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PropertyKeys"
                }
              }
            },
            "description": "Returned if the organization was found."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get properties keys",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/organization/{organizationId}/property/{propertyKey}": {
      "delete": {
        "deprecated": false,
        "description": "Removes an organization property. Organization properties are a type of entity property which are available to the API only, and not shown in Jira Service Management. [Learn more](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nFor operations relating to organization detail field values which are visible in Jira Service Management, see the [Customer Service Management REST API](https://developer.atlassian.com/cloud/customer-service-management/rest/v1/api-group-organization/#api-group-organization).\n\n**[Permissions](#permissions) required**: Service Desk Administrator or Agent.\n\nNote: Permission to manage organizations can be switched to users with the Jira administrator permission, using the **[Organization management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)** feature.",
        "operationId": "deleteProperty",
        "parameters": [
          {
            "description": "The ID of the organization from which the property will be removed.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The key of the property to remove.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the organization property was removed."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization or property do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Delete property",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.property:jira-service-management",
              "delete:organization.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "deprecated": false,
        "description": "Returns the value of an organization property. Use this method to obtain the JSON content for an organization's property. Organization properties are a type of entity property which are available to the API only, and not shown in Jira Service Management. [Learn more](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nTo get organization detail field values which are visible in Jira Service Management, see the [Customer Service Management REST API](https://developer.atlassian.com/cloud/customer-service-management/rest/v1/api-group-organization/#api-group-organization).\n\n**[Permissions](#permissions) required**: Any\n\n**Response limitations**: Customers can only access properties of organizations of which they are members.",
        "operationId": "getProperty",
        "parameters": [
          {
            "description": "The ID of the organization from which the property will be returned.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The key of the property to return.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"key\":\"organization.attributes\",\"value\":{\"mail\":\"charlie@example.com\",\"phone\":\"0800-1233456789\"}}",
                "schema": {
                  "$ref": "#/components/schemas/EntityProperty"
                }
              }
            },
            "description": "Returns the organization's property."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization or property do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get property",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "deprecated": false,
        "description": "Sets the value of an organization property. Use this resource to store custom data against an organization. Organization properties are a type of entity property which are available to the API only, and not shown in Jira Service Management. [Learn more](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nTo store organization detail field values which are visible in Jira Service Management, see the [Customer Service Management REST API](https://developer.atlassian.com/cloud/customer-service-management/rest/v1/api-group-organization/#api-group-organization).\n\n**[Permissions](#permissions) required**: Service Desk Administrator or Agent.\n\nNote: Permission to manage organizations can be switched to users with the Jira administrator permission, using the **[Organization management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)** feature.",
        "operationId": "setProperty",
        "parameters": [
          {
            "description": "The ID of the organization on which the property will be set.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The key of the organization's property. The maximum length of the key is 255 bytes.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mail": "charlie@example.com",
                "phone": "0800-1233456789"
              },
              "schema": {}
            }
          },
          "description": "The value of the property. The value has to be a valid, non-empty [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of the property value is 32768 bytes.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned if the organization property was updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned if the organization property was created."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Set property",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.property:jira-service-management",
              "write:organization.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/organization/{organizationId}/user": {
      "delete": {
        "deprecated": false,
        "description": "This method removes users from an organization.\n\n**[Permissions](#permissions) required**: Service desk administrator or agent. Note: Permission to delete users from an organization can be switched to users with the Jira administrator permission, using the **[Organization management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)** feature.",
        "operationId": "removeUsersFromOrganization",
        "parameters": [
          {
            "description": "The ID of the organization.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd"
                ],
                "usernames": []
              },
              "schema": {
                "$ref": "#/components/schemas/UsersOrganizationUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The request completed successfully. No additional content will be sent in the response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if one or more user names are invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Remove users from organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.user:jira-service-management",
              "delete:organization.user:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns all the users associated with an organization. Use this method where you want to provide a list of users for an organization or determine if a user is associated with an organization.\n\n**[Permissions](#permissions) required**: Service desk administrator or agent.",
        "operationId": "getUsersInOrganization",
        "parameters": [
          {
            "description": "The ID of the organization.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of users to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1/user?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1/user?start=0&limit=1\"},\"values\":[{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd\",\"emailAddress\":\"bob@example.com\",\"displayName\":\"Bob D. Builder\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOUserDTO"
                }
              }
            },
            "description": "Returns a paged list of users associated with the organization, ordered by their accountId."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get users in organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.user:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method adds users to an organization.\n\n**[Permissions](#permissions) required**: Service desk administrator or agent. Note: Permission to add users to an organization can be switched to users with the Jira administrator permission, using the **[Organization management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)** feature.",
        "operationId": "addUsersToOrganization",
        "parameters": [
          {
            "description": "The ID of the organization.",
            "in": "path",
            "name": "organizationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd"
                ],
                "usernames": []
              },
              "schema": {
                "$ref": "#/components/schemas/UsersOrganizationUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if all the users were valid and added to the organization, no response payload is provided."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if one or more usernames are unknown."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the organization does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Add users to organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:organization.user:jira-service-management",
              "write:organization.user:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "ADMIN"
      }
    },
    "/rest/servicedeskapi/request": {
      "get": {
        "deprecated": false,
        "description": "This method returns all customer requests for the user executing the query.\n\nThe returned customer requests are ordered chronologically by the latest activity on each request. For example, the latest status transition or comment.\n\n**[Permissions](#permissions) required**: Permission to access the specified service desk.\n\n**Response limitations**: For customers, the list returned will include request they created (or were created on their behalf) or are participating in only.",
        "operationId": "getCustomerRequests",
        "parameters": [
          {
            "description": "Filters customer requests where the request summary matches the `searchTerm`. [Wildcards](https://confluence.atlassian.com/display/JIRACORECLOUD/Search+syntax+for+text+fields) can be used in the `searchTerm` parameter.",
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters customer requests using the following values:\n\n *  `OWNED_REQUESTS` returns customer requests where the user is the creator.\n *  `PARTICIPATED_REQUESTS` returns customer requests where the user is a participant.\n *  `ORGANIZATION` returns customer requests for an organization of which the user is a member when used in conjunction with `organizationId`.\n *  `ALL_ORGANIZATIONS` returns customer requests that belong to all organizations of which the user is a member.\n *  `APPROVER` returns customer requests where the user is an approver. Can be used in conjunction with `approvalStatus` to filter pending or complete approvals.\n *  `ALL_REQUESTS` returns all customer requests. **Deprecated and will be removed, as the returned requests may change if more values are added in the future. Instead, explicitly list the desired filtering strategies.**\n\nMultiple values of the query parameter are supported. For example, `requestOwnership=OWNED_REQUESTS&requestOwnership=PARTICIPATED_REQUESTS` will only return customer requests where the user is the creator or a participant. If not specified, filtering defaults to `OWNED_REQUESTS`, `PARTICIPATED_REQUESTS`, and `ALL_ORGANIZATIONS`.",
            "in": "query",
            "name": "requestOwnership",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters customer requests where the request is closed, open, or either of the two where:\n\n *  `CLOSED_REQUESTS` returns customer requests that are closed.\n *  `OPEN_REQUESTS` returns customer requests that are open.\n *  `ALL_REQUESTS` returns all customer requests.",
            "in": "query",
            "name": "requestStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results to customer requests based on their approval status:\n\n *  `MY_PENDING_APPROVAL` returns customer requests pending the user's approval.\n *  `MY_HISTORY_APPROVAL` returns customer requests where the user was an approver.\n\n**Note**: Valid only when used with requestOwnership=APPROVER.",
            "in": "query",
            "name": "approvalStatus",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters customer requests that belong to a specific organization (note that the user must be a member of that organization). **Note**: Valid only when used with requestOwnership=ORGANIZATION.",
            "in": "query",
            "name": "organizationId",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filters customer requests by service desk.",
            "in": "query",
            "name": "serviceDeskId",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filters customer requests by request type. Note that the `serviceDeskId` must be specified for the service desk in which the request type belongs.",
            "in": "query",
            "name": "requestTypeId",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "A multi-value parameter indicating which properties of the customer request to expand, where:\n\n *  `serviceDesk` returns additional details for each service desk.\n *  `requestType` returns additional details for each request type.\n *  `participant` returns the participant details, if any, for each customer request.\n *  `sla` returns the SLA information on each customer request.\n *  `status` returns the status transitions, in chronological order, for each customer request.\n *  `attachment` returns the attachments for the customer request.\n *  `action` returns the actions that the user can or cannot perform on this customer request.\n *  `comment` returns the comments, if any, for each customer request.\n *  `comment.attachment` returns the attachment details, if any, for each comment.\n *  `comment.renderedBody` (Experimental) returns the rendered body in HTML format (in addition to the raw body) for each comment.",
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request?start=0&limit=3\"},\"values\":[{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"issueId\":\"107001\",\"issueKey\":\"HELPDESK-1\",\"requestTypeId\":\"25\",\"serviceDeskId\":\"10\",\"createdDate\":{\"epochMillis\":1444290120000,\"friendly\":\"Monday 14:42 PM\",\"iso8601\":\"2015-10-08T14:42:00+0700\",\"jira\":\"2015-10-08T14:42:00.000+0700\"},\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"requestFieldValues\":[{\"fieldId\":\"summary\",\"label\":\"What do you need?\",\"value\":\"Request JSD help via REST\"},{\"fieldId\":\"description\",\"label\":\"Why do you need this?\",\"renderedValue\":{\"html\":\"<p>I need a new <b>mouse</b> for my Mac</p>\"},\"value\":\"I need a new *mouse* for my Mac\"}],\"currentStatus\":{\"status\":\"Waiting for Support\",\"statusCategory\":\"NEW\",\"statusDate\":{\"epochMillis\":1444287660000,\"friendly\":\"Today 14:01 PM\",\"iso8601\":\"2015-10-08T14:01:00+0700\",\"jira\":\"2015-10-08T14:01:00.000+0700\"}},\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/issue/107001\",\"web\":\"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-1\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/107001\",\"agent\":\"https://your-domain.atlassian.net/browse/HELPDESK-1\"}},{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"issueId\":\"107002\",\"issueKey\":\"HELPDESK-2\",\"requestTypeId\":\"25\",\"serviceDeskId\":\"10\",\"createdDate\":{\"epochMillis\":1444289400000,\"friendly\":\"Monday 14:30 PM\",\"iso8601\":\"2015-10-08T14:30:00+0700\",\"jira\":\"2015-10-08T14:30:00.000+0700\"},\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"requestFieldValues\":[{\"fieldId\":\"summary\",\"label\":\"What do you need?\",\"value\":\"Request a new account\"},{\"fieldId\":\"description\",\"label\":\"Why do you need this?\",\"value\":\"Create an account on Jira\"}],\"currentStatus\":{\"status\":\"Waiting for Support\",\"statusCategory\":\"NEW\",\"statusDate\":{\"epochMillis\":1444287660000,\"friendly\":\"Today 14:01 PM\",\"iso8601\":\"2015-10-08T14:01:00+0700\",\"jira\":\"2015-10-08T14:01:00.000+0700\"}},\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/issue/107002\",\"web\":\"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-2\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/107002\",\"agent\":\"https://your-domain.atlassian.net/browse/HELPDESK-2\"}},{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"issueId\":\"109006\",\"issueKey\":\"SIMPLEDESK-6\",\"requestTypeId\":\"33\",\"serviceDeskId\":\"12\",\"createdDate\":{\"epochMillis\":1444030200000,\"friendly\":\"Monday 14:30 PM\",\"iso8601\":\"2015-10-05T14:30:00+0700\",\"jira\":\"2015-10-05T14:30:00.000+0700\"},\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"requestFieldValues\":[{\"fieldId\":\"summary\",\"label\":\"Summarize the problem\",\"value\":\"Printer on level 3 did not work\"},{\"fieldId\":\"description\",\"value\":\"Ink cartridge is empty\"}],\"currentStatus\":{\"status\":\"Waiting for Support\",\"statusCategory\":\"NEW\",\"statusDate\":{\"epochMillis\":1444287600000,\"friendly\":\"Today 14:00 PM\",\"iso8601\":\"2015-10-08T14:00:00+0700\",\"jira\":\"2015-10-08T14:00:00.000+0700\"}},\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/issue/109006\",\"web\":\"https://your-domain.atlassian.net/servicedesk/customer/portal/12/SIMPLEDESK-6\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/109006\",\"agent\":\"https://your-domain.atlassian.net/browse/SIMPLEDESK-6\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOCustomerRequestDTO"
                }
              }
            },
            "description": "Returns the customer requests, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to access the service desk, the service desk does not exist, or the service desk does not support the request type."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get customer requests",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method creates a customer request in a service desk.\n\nThe JSON request must include the service desk and customer request type, as well as any fields that are required for the request type. A list of the fields required by a customer request type can be obtained using [servicedesk/\\{serviceDeskId\\}/requesttype/\\{requestTypeId\\}/field](#api-servicedesk-serviceDeskId-requesttype-requestTypeId-field-get).\n\nThe fields required for a customer request type depend on the user's permissions:\n\n *  `raiseOnBehalfOf` is not available to Users who have the customer permission only.\n *  `requestParticipants` is not available to Users who have the customer permission only or if the feature is turned off for customers.\n\n`requestFieldValues` is a map of Jira field IDs and their values. See [Field input formats](#fieldformats), for details of each field's JSON semantics and the values they can take.\n\n**[Permissions](#permissions) required**: Permission to create requests in the specified service desk.",
        "operationId": "createCustomerRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "form": {
                  "answers": {
                    "1": {
                      "text": "Answer to a text form field"
                    },
                    "2": {
                      "date": "2023-07-06"
                    },
                    "3": {
                      "time": "14:35"
                    },
                    "4": {
                      "choices": [
                        "5"
                      ]
                    },
                    "5": {
                      "users": [
                        "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                      ]
                    }
                  }
                },
                "isAdfRequest": false,
                "requestFieldValues": {
                  "description": "I need a new *mouse* for my Mac",
                  "summary": "Request JSD help via REST"
                },
                "requestParticipants": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ],
                "requestTypeId": "25",
                "serviceDeskId": "10"
              },
              "schema": {
                "$ref": "#/components/schemas/RequestCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"issueId\":\"107001\",\"issueKey\":\"HELPDESK-1\",\"requestTypeId\":\"25\",\"serviceDeskId\":\"10\",\"createdDate\":{\"epochMillis\":1444290120000,\"friendly\":\"Monday 14:42 PM\",\"iso8601\":\"2015-10-08T14:42:00+0700\",\"jira\":\"2015-10-08T14:42:00.000+0700\"},\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"requestFieldValues\":[{\"fieldId\":\"summary\",\"label\":\"What do you need?\",\"value\":\"Request JSD help via REST\"},{\"fieldId\":\"description\",\"label\":\"Why do you need this?\",\"renderedValue\":{\"html\":\"<p>I need a new <b>mouse</b> for my Mac</p>\"},\"value\":\"I need a new *mouse* for my Mac\"}],\"currentStatus\":{\"status\":\"Waiting for Support\",\"statusCategory\":\"NEW\",\"statusDate\":{\"epochMillis\":1444287660000,\"friendly\":\"Today 14:01 PM\",\"iso8601\":\"2015-10-08T14:01:00+0700\",\"jira\":\"2015-10-08T14:01:00.000+0700\"}},\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/issue/107001\",\"web\":\"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-1\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/107001\",\"agent\":\"https://your-domain.atlassian.net/browse/HELPDESK-1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CustomerRequestDTO"
                }
              }
            },
            "description": "Returned if the customer request was created."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request call is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Create customer request",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request:jira-service-management",
              "write:request:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}": {
      "get": {
        "deprecated": false,
        "description": "This method returns a customer request.\n\n**[Permissions](#permissions) required**: Permission to access the specified service desk.\n\n**Response limitations**: For customers, only a request they created, was created on their behalf, or they are participating in will be returned.\n\n**Note:** `requestFieldValues` does not include hidden fields. To get a list of request type fields that includes hidden fields, see [/rest/servicedeskapi/servicedesk/\\{serviceDeskId\\}/requesttype/\\{requestTypeId\\}/field](https://developer.atlassian.com/cloud/jira/service-desk/rest/api-group-servicedesk/#api-rest-servicedeskapi-servicedesk-servicedeskid-requesttype-requesttypeid-field-get)",
        "operationId": "getCustomerRequestByIdOrKey",
        "parameters": [
          {
            "description": "The ID or Key of the customer request to be returned",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A multi-value parameter indicating which properties of the customer request to expand, where:\n\n *  `serviceDesk` returns additional service desk details.\n *  `requestType` returns additional customer request type details.\n *  `participant` returns the participant details.\n *  `sla` returns the SLA information.\n *  `status` returns the status transitions, in chronological order.\n *  `attachment` returns the attachments.\n *  `action` returns the actions that the user can or cannot perform.\n *  `comment` returns the comments.\n *  `comment.attachment` returns the attachment details for each comment.\n *  `comment.renderedBody` (Experimental) return the rendered body in HTML format (in addition to the raw body) for each comment.",
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[\"participant\",\"status\",\"sla\",\"requestType\",\"serviceDesk\",\"attachment\",\"action\",\"comment\"],\"issueId\":\"107001\",\"issueKey\":\"HELPDESK-1\",\"requestTypeId\":\"25\",\"serviceDeskId\":\"10\",\"createdDate\":{\"epochMillis\":1444290120000,\"friendly\":\"Monday 14:42 PM\",\"iso8601\":\"2015-10-08T14:42:00+0700\",\"jira\":\"2015-10-08T14:42:00.000+0700\"},\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"requestFieldValues\":[{\"fieldId\":\"summary\",\"label\":\"What do you need?\",\"value\":\"Request JSD help via REST\"},{\"fieldId\":\"description\",\"label\":\"Why do you need this?\",\"renderedValue\":{\"html\":\"<p>I need a new <b>mouse</b> for my Mac</p>\"},\"value\":\"I need a new *mouse* for my Mac\"}],\"currentStatus\":{\"status\":\"Waiting for Support\",\"statusCategory\":\"NEW\",\"statusDate\":{\"epochMillis\":1444287660000,\"friendly\":\"Today 14:01 PM\",\"iso8601\":\"2015-10-08T14:01:00+0700\",\"jira\":\"2015-10-08T14:01:00.000+0700\"}},\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/issue/107001\",\"web\":\"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-1\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/107001\",\"agent\":\"https://your-domain.atlassian.net/browse/HELPDESK-1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CustomerRequestDTO"
                }
              }
            },
            "description": "Returns the customer request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get customer request by id or key",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/approval": {
      "get": {
        "deprecated": false,
        "description": "This method returns all approvals on a customer request.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getApprovals",
        "parameters": [
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of approvals to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The ID or key of the customer request to be queried for its approvals.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval?start=0&limit=3\"},\"values\":[{\"id\":\"1\",\"name\":\"Please approve this request\",\"finalDecision\":\"approved\",\"canAnswerApproval\":false,\"approvers\":[{\"approver\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"approverDecision\":\"approved\"}],\"createdDate\":{\"epochMillis\":1475046060000,\"friendly\":\"Monday 14:01 PM\",\"iso8601\":\"2016-09-28T14:01:00+0700\",\"jira\":\"2016-09-28T14:01:00.000+0700\"},\"completedDate\":{\"epochMillis\":1475134200000,\"friendly\":\"Today 14:30 PM\",\"iso8601\":\"2016-09-29T14:30:00+0700\",\"jira\":\"2016-09-29T14:30:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval/1\"}},{\"id\":\"2\",\"name\":\"Waiting for approval\",\"finalDecision\":\"declined\",\"canAnswerApproval\":false,\"approvers\":[{\"approver\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"approverDecision\":\"approved\"}],\"createdDate\":{\"epochMillis\":1475650860000,\"friendly\":\"Wednesday 14:01 PM\",\"iso8601\":\"2016-10-05T14:01:00+0700\",\"jira\":\"2016-10-05T14:01:00.000+0700\"},\"completedDate\":{\"epochMillis\":1475739000000,\"friendly\":\"Thursday 14:30 PM\",\"iso8601\":\"2016-10-06T14:30:00+0700\",\"jira\":\"2016-10-06T14:30:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval/2\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOApprovalDTO"
                }
              }
            },
            "description": "Returns the customer request's approvals."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get approvals",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.approval:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/approval/{approvalId}": {
      "get": {
        "deprecated": false,
        "description": "This method returns an approval. Use this method to determine the status of an approval and the list of approvers.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getApprovalById",
        "parameters": [
          {
            "description": "The ID or key of the customer request the approval is on.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the approval to be returned.",
            "in": "path",
            "name": "approvalId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"1\",\"name\":\"Please approve this request\",\"finalDecision\":\"approved\",\"canAnswerApproval\":false,\"approvers\":[{\"approver\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"approverDecision\":\"approved\"}],\"createdDate\":{\"epochMillis\":1475046060000,\"friendly\":\"Monday 14:01 PM\",\"iso8601\":\"2016-09-28T14:01:00+0700\",\"jira\":\"2016-09-28T14:01:00.000+0700\"},\"completedDate\":{\"epochMillis\":1475134200000,\"friendly\":\"Today 14:30 PM\",\"iso8601\":\"2016-09-29T14:30:00+0700\",\"jira\":\"2016-09-29T14:30:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval/1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/ApprovalDTO"
                }
              }
            },
            "description": "Returns the requested approval."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request or approval do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get approval by id",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.approval:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method enables a user to **Approve** or **Decline** an approval on a customer request. The approval is assumed to be owned by the user making the call.\n\n**[Permissions](#permissions) required**: User is assigned to the approval request.",
        "operationId": "answerApproval",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be updated.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the approval to be updated.",
            "in": "path",
            "name": "approvalId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "decision": "approve"
              },
              "schema": {
                "$ref": "#/components/schemas/ApprovalDecisionRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"1\",\"name\":\"Please approve this request\",\"finalDecision\":\"approved\",\"canAnswerApproval\":false,\"approvers\":[{\"approver\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"approverDecision\":\"approved\"}],\"createdDate\":{\"epochMillis\":1475046060000,\"friendly\":\"Monday 14:01 PM\",\"iso8601\":\"2016-09-28T14:01:00+0700\",\"jira\":\"2016-09-28T14:01:00.000+0700\"},\"completedDate\":{\"epochMillis\":1475134200000,\"friendly\":\"Today 14:30 PM\",\"iso8601\":\"2016-09-29T14:30:00+0700\",\"jira\":\"2016-09-29T14:30:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2/approval/1\"}}",
                "schema": {
                  "$ref": "#/components/schemas/ApprovalDTO"
                }
              }
            },
            "description": "Returns the updated approval."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is not valid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request or the approval do not exist."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer has already submitted a decision or the approval has already been completed."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Answer approval",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.approval:jira-service-management",
              "write:request.approval:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/attachment": {
      "get": {
        "deprecated": false,
        "description": "This method returns all the attachments for a customer requests.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.\n\n**Response limitations**: Customers will only get a list of public attachments.",
        "operationId": "getAttachmentsForRequest",
        "parameters": [
          {
            "description": "The ID or key of the customer request from which the attachments will be listed.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned attachment. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of comments to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "default": 50,
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=0&limit=2\"},\"values\":[{\"filename\":\"screenshot.png\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":23123,\"mimeType\":\"image/png\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10000\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10000/screenshot.png\",\"thumbnail\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/thumbnail/10000/_thumb_10000.png\"}},{\"filename\":\"log.txt\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":32132,\"mimeType\":\"text/plain\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10001\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10001/log.txt\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOAttachmentDTO"
                }
              }
            },
            "description": "Returns the visible attachments from the customer request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get attachments for request",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.attachment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method creates a comment on a customer request using one or more attachment files (uploaded using [servicedeskapi/servicedesk/\\{serviceDeskId\\}/attachTemporaryFile](https://developer.atlassian.com/cloud/jira/service-desk/rest/api-group-servicedesk/#api-rest-servicedeskapi-servicedesk-servicedeskid-attachtemporaryfile-post)), with the visibility set by `public`. See\n\n *  GET [servicedeskapi/request/\\{issueIdOrKey\\}/attachment](./#api-rest-servicedeskapi-request-issueidorkey-attachment-get)\n *  GET [servicedeskapi/request/\\{issueIdOrKey\\}/comment/\\{commentId\\}/attachment](./#api-rest-servicedeskapi-request-issueidorkey-comment-commentid-attachment-get)\n\n**[Permissions](#permissions) required**: Permission to add an attachment.\n\n**Request limitations**: Customers can set public visibility only.",
        "operationId": "createCommentWithAttachment",
        "parameters": [
          {
            "description": "The ID or key of the customer request to which the attachment will be added.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "additionalComment": {
                  "body": "Please find the screenshot and the log file attached."
                },
                "public": true,
                "temporaryAttachmentIds": [
                  "temp910441317820424274",
                  "temp3600755449679003114"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/AttachmentCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"comment\":{\"_expands\":[\"attachment\",\"renderedBody\"],\"id\":\"1000\",\"body\":\"Please find the screenshot and the log file attached. !screenshot.png|thumbnail! [^log.txt] _(32 kB)_\",\"public\":true,\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment/1000\"}},\"attachments\":{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=0&limit=2\"},\"values\":[{\"filename\":\"screenshot.png\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":23123,\"mimeType\":\"image/png\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10000\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10000/screenshot.png\",\"thumbnail\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/thumbnail/10000/_thumb_10000.png\"}},{\"filename\":\"log.txt\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":32132,\"mimeType\":\"text/plain\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10001\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10001/log.txt\"}}]}}",
                "schema": {
                  "$ref": "#/components/schemas/AttachmentCreateResultDTO"
                }
              }
            },
            "description": "Returns the attachments and comment."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request is invalid, including missing the required `public` field or list of temporary file IDs, or if the temporary files have expired."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Create comment with attachment",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.attachment:jira-service-management",
              "write:request.attachment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/attachment/{attachmentId}": {
      "get": {
        "deprecated": false,
        "description": "Returns the contents of an attachment.\n\nTo return a thumbnail of the attachment, use [servicedeskapi/request/\\{issueIdOrKey\\}/attachment/\\{attachmentId\\}/thumbnail](./#api-rest-servicedeskapi-request-issueidorkey-attachment-attachmentid-thumbnail-get).\n\n**[Permissions](#permissions) required:** For the issue containing the attachment:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.",
        "operationId": "getAttachmentContent",
        "parameters": [
          {
            "description": "The ID or key for the customer request the attachment is associated with",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the attachment",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "200 response"
          },
          "303": {
            "description": "Returned if the request is successful. See the `Location` header for the download URL."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The user does not have the necessary permission."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get attachment content",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.attachment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/attachment/{attachmentId}/thumbnail": {
      "get": {
        "deprecated": false,
        "description": "Returns the thumbnail of an attachment.\n\nTo return the attachment contents, use [servicedeskapi/request/\\{issueIdOrKey\\}/attachment/\\{attachmentId\\}](#api-rest-servicedeskapi-request-issueidorkey-attachment-attachmentid-get).\n\n**[Permissions](#permissions) required:** For the issue containing the attachment:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.",
        "operationId": "getAttachmentThumbnail",
        "parameters": [
          {
            "description": "The ID or key for the customer request the attachment is associated with",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the attachment.",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "200 response"
          },
          "303": {
            "description": "Returned if the request is successful. See the `Location` header for the download URL."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the authentication credentials are incorrect."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "The user does not have the necessary permission."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get attachment thumbnail",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.attachment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/comment": {
      "get": {
        "deprecated": false,
        "description": "This method returns all comments on a customer request. No permissions error is provided if, for example, the user doesn't have access to the service desk or request, the method simply returns an empty response.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.\n\n**Response limitations**: Customers are returned public comments only.",
        "operationId": "getRequestComments",
        "parameters": [
          {
            "description": "The ID or key of the customer request whose comments will be retrieved.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specifies whether to return public comments or not. Default: true.",
            "in": "query",
            "name": "public",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specifies whether to return internal comments or not. Default: true.",
            "in": "query",
            "name": "internal",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A multi-value parameter indicating which properties of the comment to expand:\n\n *  `attachment` returns the attachment details, if any, for each comment. (If you want to get all attachments for a request, use [servicedeskapi/request/\\{issueIdOrKey\\}/attachment](#api-request-issueIdOrKey-attachment-get).)\n *  `renderedBody` (Experimental) returns the rendered body in HTML format (in addition to the raw body) for each comment.",
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The starting index of the returned comments. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of comments to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment?start=0&limit=1\"},\"values\":[{\"_expands\":[\"attachment\",\"renderedBody\"],\"id\":\"1000\",\"body\":\"Hello there\",\"public\":true,\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment/1000\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOCommentDTO"
                }
              }
            },
            "description": "Returns the comments, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request comments",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.comment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method creates a public or private (internal) comment on a customer request, with the comment visibility set by `public`. The user recorded as the author of the comment.\n\n**[Permissions](#permissions) required**: User has Add Comments permission.\n\n**Request limitations**: Customers can set comments to public visibility only.",
        "operationId": "createRequestComment",
        "parameters": [
          {
            "description": "The ID or key of the customer request to which the comment will be added.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "body": "Hello there",
                "public": true
              },
              "schema": {
                "$ref": "#/components/schemas/CommentCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[\"attachment\",\"renderedBody\"],\"id\":\"1000\",\"body\":\"Hello there\",\"public\":true,\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment/1000\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            },
            "description": "Returns the comment."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request is invalid, e.g. missing the required `public`."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Create request comment",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.comment:jira-service-management",
              "write:request.comment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/comment/{commentId}": {
      "get": {
        "deprecated": false,
        "description": "This method returns details of a customer request's comment.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.\n\n**Response limitations**: Customers can only view public comments on requests where they are the reporter or a participant whereas agents can see both internal and public comments.",
        "operationId": "getRequestCommentById",
        "parameters": [
          {
            "description": "The ID or key of the customer request that contains the comment.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the comment to retrieve.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "A multi-value parameter indicating which properties of the comment to expand:\n\n *  `attachment` returns the attachment details, if any, for the comment. (If you want to get all attachments for a request, use [servicedeskapi/request/\\{issueIdOrKey\\}/attachment](#api-request-issueIdOrKey-attachment-get).)\n *  `renderedBody` (Experimental) returns the rendered body in HTML format (in addition to the raw body) of the comment.",
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[\"attachment\",\"renderedBody\"],\"id\":\"1000\",\"body\":\"Hello there\",\"public\":true,\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/2000/comment/1000\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            },
            "description": "Returns the comment."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request or comment do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request comment by id",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.comment:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/comment/{commentId}/attachment": {
      "get": {
        "deprecated": false,
        "description": "This method returns the attachments referenced in a comment.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.\n\n**Response limitations**: Customers can only view public comments, and retrieve their attachments, on requests where they are the reporter or a participant whereas agents can see both internal and public comments.",
        "operationId": "getCommentAttachments",
        "parameters": [
          {
            "description": "The ID or key of the customer request that contains the comment.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the comment.",
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The starting index of the returned comments. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of comments to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/IT-15/comment/1001/attachment?start=0&limit=2\"},\"values\":[{\"filename\":\"screenshot.png\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":23123,\"mimeType\":\"image/png\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10000\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10000/screenshot.png\",\"thumbnail\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/thumbnail/10000/_thumb_10000.png\"}},{\"filename\":\"log.txt\",\"author\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}},\"created\":{\"epochMillis\":1444360920000,\"friendly\":\"Today 10:22 AM\",\"iso8601\":\"2015-10-09T10:22:00+0700\",\"jira\":\"2015-10-09T10:22:00.000+0700\"},\"size\":32132,\"mimeType\":\"text/plain\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/attachment/10001\",\"content\":\"https://your-domain.atlassian.net/servicedesk/customershim/secure/attachment/10001/log.txt\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOAttachmentDTO"
                }
              }
            },
            "description": "Returns the attachments, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request or the comment do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:request.attachment:jira-service-management",
              "read:request.comment:jira-service-management",
              "read:user:jira"
            ]
          }
        ],
        "summary": "Get comment attachments",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/notification": {
      "delete": {
        "deprecated": false,
        "description": "This method unsubscribes the user from notifications from a customer request.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be unsubscribed from.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns if the user was unsubscribed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Unsubscribe",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.notification:jira-service-management",
              "delete:request.notification:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns the notification subscription status of the user making the request. Use this method to determine if the user is subscribed to a customer request's notifications.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getSubscriptionStatus",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be queried for subscription status.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"subscribed\":true}",
                "schema": {
                  "$ref": "#/components/schemas/RequestNotificationSubscriptionDTO"
                }
              }
            },
            "description": "Returns the status of the notification subscription."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get subscription status",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.notification:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "deprecated": false,
        "description": "This method subscribes the user to receiving notifications from a customer request.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "subscribe",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be subscribed to.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns if the user was subscribed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Subscribe",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.notification:jira-service-management",
              "write:request.notification:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/participant": {
      "delete": {
        "deprecated": false,
        "description": "This method removes participants from a customer request.\n\n**[Permissions](#permissions) required**: Permission to manage participants on the customer request.",
        "operationId": "removeRequestParticipants",
        "parameters": [
          {
            "description": "The ID or key of the customer request to have participants removed.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [],
                "usernames": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/RequestParticipantUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=0&limit=1\"},\"values\":[{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOUserDTO"
                }
              }
            },
            "description": "Returns the first page of the customer request's participants (after removal of the users)."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if any user to be removed as a participant does not exist, is not a participant in the customer request, or is the reporter of the request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Remove request participants",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.participant:jira-service-management",
              "delete:request.participant:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns a list of all the participants on a customer request.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getRequestParticipants",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be queried for its participants.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of request types to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=0&limit=1\"},\"values\":[{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOUserDTO"
                }
              }
            },
            "description": "Returns the customer request's participants, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request participants",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.participant:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method adds participants to a customer request.\n\n**[Permissions](#permissions) required**: Permission to manage participants on the customer request.\n\nNote, participants can be added when creating a customer request using the [request](#api-request-post) resource, by defining the participants in the `requestParticipants` field.",
        "operationId": "addRequestParticipants",
        "parameters": [
          {
            "description": "The ID or key of the customer request to have participants added.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [],
                "usernames": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/RequestParticipantUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1000/participant?start=0&limit=1\"},\"values\":[{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOUserDTO"
                }
              }
            },
            "description": "Returns the participants added to the customer request."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if any user to be added as a participant does not exist."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Add request participants",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.participant:jira-service-management",
              "write:request.participant:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/sla": {
      "get": {
        "deprecated": false,
        "description": "This method returns all the SLA records on a customer request. A customer request can have zero or more SLAs. Each SLA can have recordings for zero or more \"completed cycles\" and zero or 1 \"ongoing cycle\". Each cycle includes information on when it started and stopped, and whether it breached the SLA goal.\n\n**[Permissions](#permissions) required**: Agent for the Service Desk containing the queried customer request.",
        "operationId": "getSlaInformation",
        "parameters": [
          {
            "description": "The ID or key of the customer request whose SLAs will be retrieved.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of request types to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla?start=0&limit=3\"},\"values\":[{\"name\":\"Time To First Response\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla/10030\"},\"completedCycles\":[{\"startTime\":{\"epochMillis\":1444362323000,\"friendly\":\"Yesterday 10:45 AM\",\"iso8601\":\"2015-10-09T10:45:23+0700\",\"jira\":\"2015-10-09T10:45:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444362743000,\"friendly\":\"Yesterday 10:52 AM\",\"iso8601\":\"2015-10-09T10:52:23+0700\",\"jira\":\"2015-10-09T10:52:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444362623000,\"friendly\":\"Yesterday 10:50 AM\",\"iso8601\":\"2015-10-09T10:50:23+0700\",\"jira\":\"2015-10-09T10:50:23.000+0700\"},\"breached\":false,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":420000,\"friendly\":\"0h 7m\"},\"remainingTime\":{\"millis\":13980000,\"friendly\":\"3h 233m\"}},{\"startTime\":{\"epochMillis\":1444449143000,\"friendly\":\"Today 10:52 AM\",\"iso8601\":\"2015-10-10T10:52:23+0700\",\"jira\":\"2015-10-10T10:52:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444468523000,\"friendly\":\"Today 16:15 PM\",\"iso8601\":\"2015-10-10T16:15:23+0700\",\"jira\":\"2015-10-10T16:15:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444464743000,\"friendly\":\"Today 15:12 PM\",\"iso8601\":\"2015-10-10T15:12:23+0700\",\"jira\":\"2015-10-10T15:12:23.000+0700\"},\"breached\":true,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":19380000,\"friendly\":\"5h 323m\"},\"remainingTime\":{\"millis\":-4980000,\"friendly\":\"-1h -83m\"}}],\"ongoingCycle\":{\"startTime\":{\"epochMillis\":1444479323000,\"friendly\":\"Today 19:15 PM\",\"iso8601\":\"2015-10-10T19:15:23+0700\",\"jira\":\"2015-10-10T19:15:23.000+0700\"},\"breached\":false,\"paused\":false,\"withinCalendarHours\":false,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":5640000,\"friendly\":\"1h 94m\"},\"remainingTime\":{\"millis\":8760000,\"friendly\":\"2h 146m\"}}},{\"name\":\"Time To Resolution\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla/10040\"},\"completedCycles\":[{\"startTime\":{\"epochMillis\":1444362323000,\"friendly\":\"Yesterday 10:45 AM\",\"iso8601\":\"2015-10-09T10:45:23+0700\",\"jira\":\"2015-10-09T10:45:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444398743000,\"friendly\":\"Yesterday 20:52 PM\",\"iso8601\":\"2015-10-09T20:52:23+0700\",\"jira\":\"2015-10-09T20:52:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444398623000,\"friendly\":\"Yesterday 20:50 PM\",\"iso8601\":\"2015-10-09T20:50:23+0700\",\"jira\":\"2015-10-09T20:50:23.000+0700\"},\"breached\":false,\"goalDuration\":{\"millis\":72000000,\"friendly\":\"20h 1200m\"},\"elapsedTime\":{\"millis\":36420000,\"friendly\":\"10h 607m\"},\"remainingTime\":{\"millis\":35580000,\"friendly\":\"9h 593m\"}},{\"startTime\":{\"epochMillis\":1444485143000,\"friendly\":\"Today 20:52 PM\",\"iso8601\":\"2015-10-10T20:52:23+0700\",\"jira\":\"2015-10-10T20:52:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444504523000,\"friendly\":\"Today 02:15 AM\",\"iso8601\":\"2015-10-11T02:15:23+0700\",\"jira\":\"2015-10-11T02:15:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444500743000,\"friendly\":\"Today 01:12 AM\",\"iso8601\":\"2015-10-11T01:12:23+0700\",\"jira\":\"2015-10-11T01:12:23.000+0700\"},\"breached\":true,\"goalDuration\":{\"millis\":72000000,\"friendly\":\"20h 1200m\"},\"elapsedTime\":{\"millis\":19380000,\"friendly\":\"5h 323m\"},\"remainingTime\":{\"millis\":52620000,\"friendly\":\"14h 877m\"}}],\"ongoingCycle\":{\"startTime\":{\"epochMillis\":1444515323000,\"friendly\":\"Today 05:15 AM\",\"iso8601\":\"2015-10-11T05:15:23+0700\",\"jira\":\"2015-10-11T05:15:23.000+0700\"},\"breached\":false,\"paused\":false,\"withinCalendarHours\":false,\"goalDuration\":{\"millis\":72000000,\"friendly\":\"20h 1200m\"},\"elapsedTime\":{\"millis\":5640000,\"friendly\":\"1h 94m\"},\"remainingTime\":{\"millis\":66360000,\"friendly\":\"18h 1106m\"}}},{\"name\":\"Time To Retrospective\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla/10050\"},\"completedCycles\":[{\"startTime\":{\"epochMillis\":1444362323000,\"friendly\":\"Yesterday 10:45 AM\",\"iso8601\":\"2015-10-09T10:45:23+0700\",\"jira\":\"2015-10-09T10:45:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444449143000,\"friendly\":\"Yesterday 10:52 AM\",\"iso8601\":\"2015-10-10T10:52:23+0700\",\"jira\":\"2015-10-10T10:52:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444449023000,\"friendly\":\"Yesterday 10:50 AM\",\"iso8601\":\"2015-10-10T10:50:23+0700\",\"jira\":\"2015-10-10T10:50:23.000+0700\"},\"breached\":false,\"goalDuration\":{\"millis\":144000000,\"friendly\":\"40h 2400m\"},\"elapsedTime\":{\"millis\":86820000,\"friendly\":\"24h 1447m\"},\"remainingTime\":{\"millis\":57180000,\"friendly\":\"15h 953m\"}},{\"startTime\":{\"epochMillis\":1444535543000,\"friendly\":\"Today 10:52 AM\",\"iso8601\":\"2015-10-11T10:52:23+0700\",\"jira\":\"2015-10-11T10:52:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444554923000,\"friendly\":\"Today 16:15 PM\",\"iso8601\":\"2015-10-11T16:15:23+0700\",\"jira\":\"2015-10-11T16:15:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444551143000,\"friendly\":\"Today 15:12 PM\",\"iso8601\":\"2015-10-11T15:12:23+0700\",\"jira\":\"2015-10-11T15:12:23.000+0700\"},\"breached\":true,\"goalDuration\":{\"millis\":144000000,\"friendly\":\"40h 2400m\"},\"elapsedTime\":{\"millis\":19380000,\"friendly\":\"5h 323m\"},\"remainingTime\":{\"millis\":124620000,\"friendly\":\"34h 2077m\"}}],\"ongoingCycle\":{\"startTime\":{\"epochMillis\":1444565723000,\"friendly\":\"Today 19:15 PM\",\"iso8601\":\"2015-10-11T19:15:23+0700\",\"jira\":\"2015-10-11T19:15:23.000+0700\"},\"breached\":false,\"paused\":false,\"withinCalendarHours\":false,\"goalDuration\":{\"millis\":144000000,\"friendly\":\"40h 2400m\"},\"elapsedTime\":{\"millis\":5640000,\"friendly\":\"1h 94m\"},\"remainingTime\":{\"millis\":138360000,\"friendly\":\"38h 2306m\"}}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOSlaInformationDTO"
                }
              }
            },
            "description": "Returns the SLA records on the customer request, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "summary": "Get sla information",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:jira-work"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.sla:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/sla/{slaMetricId}": {
      "get": {
        "deprecated": false,
        "description": "This method returns the details for an SLA on a customer request.\n\n**[Permissions](#permissions) required**: Agent for the Service Desk containing the queried customer request.",
        "operationId": "getSlaInformationById",
        "parameters": [
          {
            "description": "The ID or key of the customer request whose SLAs will be retrieved.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID or key of the SLAs metric to be retrieved.",
            "in": "path",
            "name": "slaMetricId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"name\":\"Time To First Response\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/101102/sla/10030\"},\"completedCycles\":[{\"startTime\":{\"epochMillis\":1444362323000,\"friendly\":\"Yesterday 10:45 AM\",\"iso8601\":\"2015-10-09T10:45:23+0700\",\"jira\":\"2015-10-09T10:45:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444362743000,\"friendly\":\"Yesterday 10:52 AM\",\"iso8601\":\"2015-10-09T10:52:23+0700\",\"jira\":\"2015-10-09T10:52:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444362623000,\"friendly\":\"Yesterday 10:50 AM\",\"iso8601\":\"2015-10-09T10:50:23+0700\",\"jira\":\"2015-10-09T10:50:23.000+0700\"},\"breached\":false,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":420000,\"friendly\":\"0h 7m\"},\"remainingTime\":{\"millis\":13980000,\"friendly\":\"3h 233m\"}},{\"startTime\":{\"epochMillis\":1444449143000,\"friendly\":\"Today 10:52 AM\",\"iso8601\":\"2015-10-10T10:52:23+0700\",\"jira\":\"2015-10-10T10:52:23.000+0700\"},\"stopTime\":{\"epochMillis\":1444468523000,\"friendly\":\"Today 16:15 PM\",\"iso8601\":\"2015-10-10T16:15:23+0700\",\"jira\":\"2015-10-10T16:15:23.000+0700\"},\"breachTime\":{\"epochMillis\":1444464743000,\"friendly\":\"Today 15:12 PM\",\"iso8601\":\"2015-10-10T15:12:23+0700\",\"jira\":\"2015-10-10T15:12:23.000+0700\"},\"breached\":true,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":19380000,\"friendly\":\"5h 323m\"},\"remainingTime\":{\"millis\":-4980000,\"friendly\":\"-1h -83m\"}}],\"ongoingCycle\":{\"startTime\":{\"epochMillis\":1444479323000,\"friendly\":\"Today 19:15 PM\",\"iso8601\":\"2015-10-10T19:15:23+0700\",\"jira\":\"2015-10-10T19:15:23.000+0700\"},\"breached\":false,\"paused\":false,\"withinCalendarHours\":false,\"goalDuration\":{\"millis\":14400000,\"friendly\":\"4h 240m\"},\"elapsedTime\":{\"millis\":5640000,\"friendly\":\"1h 94m\"},\"remainingTime\":{\"millis\":8760000,\"friendly\":\"2h 146m\"}}}",
                "schema": {
                  "$ref": "#/components/schemas/SlaInformationDTO"
                }
              }
            },
            "description": "Returns the SLA record, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "summary": "Get sla information by id",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:jira-work"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.sla:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/status": {
      "get": {
        "deprecated": false,
        "description": "This method returns a list of all the statuses a customer Request has achieved. A status represents the state of an issue in its workflow. An issue can have one active status only. The list returns the status history in chronological order, most recent (current) status first.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getCustomerRequestStatus",
        "parameters": [
          {
            "description": "The ID or key of the customer request to be retrieved.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1/status?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1/status?start=0&limit=3\"},\"values\":[{\"status\":\"Waiting for Customer\",\"statusDate\":{\"epochMillis\":1444287900000,\"friendly\":\"Today 14:05 PM\",\"iso8601\":\"2015-10-08T14:05:00+0700\",\"jira\":\"2015-10-08T14:05:00.000+0700\"}},{\"status\":\"Waiting for Support\",\"statusDate\":{\"epochMillis\":1444287660000,\"friendly\":\"Today 14:01 PM\",\"iso8601\":\"2015-10-08T14:01:00+0700\",\"jira\":\"2015-10-08T14:01:00.000+0700\"}},{\"status\":\"Waiting for Customer\",\"statusDate\":{\"epochMillis\":1444287600000,\"friendly\":\"Today 14:00 PM\",\"iso8601\":\"2015-10-08T14:00:00+0700\",\"jira\":\"2015-10-08T14:00:00.000+0700\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOCustomerRequestStatusDTO"
                }
              }
            },
            "description": "Returns the customer request's status history, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get customer request status",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.status:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/request/{issueIdOrKey}/transition": {
      "get": {
        "deprecated": false,
        "description": "This method returns a list of transitions, the workflow processes that moves a customer request from one status to another, that the user can perform on a request. Use this method to provide a user with a list if the actions they can take on a customer request.\n\n**[Permissions](#permissions) required**: Permission to view the customer request.",
        "operationId": "getCustomerTransitions",
        "parameters": [
          {
            "description": "The ID or key of the customer request whose transitions will be retrieved.",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1/transition?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/request/1/transition?start=0&limit=2\"},\"values\":[{\"id\":\"1\",\"name\":\"Close Request\"},{\"id\":\"2\",\"name\":\"Escalate Request\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOCustomerTransitionDTO"
                }
              }
            },
            "description": "Returns the transitions available to the user on the customer request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get customer transitions",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.status:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method performs a customer transition for a given request and transition. An optional comment can be included to provide a reason for the transition.\n\n**[Permissions](#permissions) required**: The user must be able to view the request and have the Transition Issues permission. If a comment is passed the user must have the Add Comments permission.",
        "operationId": "performCustomerTransition",
        "parameters": [
          {
            "description": "ID or key of the issue to transition",
            "in": "path",
            "name": "issueIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "additionalComment": {
                  "body": "I have fixed the problem."
                },
                "id": "1"
              },
              "schema": {
                "$ref": "#/components/schemas/CustomerTransitionExecutionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if the request is transitioned."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the transition ID is invalid or the comment is too long."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Perform customer transition",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.status:jira-service-management",
              "write:request.status:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/request/{requestIdOrKey}/feedback": {
      "delete": {
        "deprecated": false,
        "description": "This method deletes the feedback of request using it's `requestKey` or `requestId`\n\n**[Permissions](#permissions) required**: User must be the reporter or an Atlassian Connect app.",
        "operationId": "deleteFeedback",
        "parameters": [
          {
            "description": "The id or the key of the request to post the feedback on",
            "in": "path",
            "name": "requestIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "No content."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if no logged in user/app."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user/app does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Delete feedback",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.feedback:jira-service-management",
              "delete:request.feedback:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "deprecated": false,
        "description": "This method retrieves a feedback of a request using it's `requestKey` or `requestId`\n\n**[Permissions](#permissions) required**: User has view request permissions.",
        "operationId": "getFeedback",
        "parameters": [
          {
            "description": "The id or the key of the request to post the feedback on",
            "in": "path",
            "name": "requestIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"type\":\"csat\",\"rating\":4,\"comment\":{\"body\":\"Great work!\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CSATFeedbackFullDTO"
                }
              }
            },
            "description": "Returns the comment."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if no logged in user/app."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user/app does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get feedback",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.feedback:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method adds a feedback on an request using it's `requestKey` or `requestId`\n\n**[Permissions](#permissions) required**: User must be the reporter or an Atlassian Connect app.",
        "operationId": "postFeedback",
        "parameters": [
          {
            "description": "The id or the key of the request to post the feedback on",
            "in": "path",
            "name": "requestIdOrKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "comment": {
                  "body": "Great work!"
                },
                "rating": 4,
                "type": "csat"
              },
              "schema": {
                "$ref": "#/components/schemas/CSATFeedbackFullDTO"
              }
            }
          },
          "description": "The feedback to be added on the request",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"type\":\"csat\",\"rating\":4,\"comment\":{\"body\":\"Great work!\"}}",
                "schema": {
                  "$ref": "#/components/schemas/CSATFeedbackFullDTO"
                }
              }
            },
            "description": "Returns the comment."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the HTTP request is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if no logged in user/app."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user/app does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Post feedback",
        "tags": [
          "Request"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.feedback:jira-service-management",
              "write:request.feedback:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/requesttype": {
      "get": {
        "deprecated": false,
        "description": "This method returns all customer request types used in the Jira Service Management instance, optionally filtered by a query string.\n\nUse [servicedeskapi/servicedesk/\\{serviceDeskId\\}/requesttype](#api-servicedesk-serviceDeskId-requesttype-get) to find the customer request types supported by a specific service desk.\n\nThe returned list of customer request types can be filtered using the `searchQuery` parameter. The parameter is matched against the customer request types' `name` or `description`. For example, searching for \"Install\", \"Inst\", \"Equi\", or \"Equipment\" will match a customer request type with the *name* \"Equipment Installation Request\".\n\n**Note:** This API by default will filter out request types hidden in the portal (i.e. request types without groups and request types where a user doesn't have permission) when `searchQuery` is provided, unless `includeHiddenRequestTypesInSearch` is set to true. Restricted request types will not be returned for those who aren't admins.\n\n**[Permissions](#permissions) required**: Any",
        "operationId": "getAllRequestTypes",
        "parameters": [
          {
            "description": "String to be used to filter the results.",
            "in": "query",
            "name": "searchQuery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter the request types by service desk Ids provided. Multiple values of the query parameter are supported. For example, `serviceDeskId=1&serviceDeskId=2` will return request types only for service desks 1 and 2.",
            "in": "query",
            "name": "serviceDeskId",
            "schema": {
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Whether to include hidden request types when searching with `searchQuery`.",
            "in": "query",
            "name": "includeHiddenRequestTypesInSearch",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Request type restriction status (`open` or `restricted`) used to filter the results.",
            "in": "query",
            "name": "restrictionStatus",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype?start=0&limit=3\"},\"values\":[{\"_expands\":[],\"id\":\"11001\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11001\"},\"name\":\"Get IT Help\",\"description\":\"Get IT Help\",\"helpText\":\"Please tell us clearly the problem you have within 100 words.\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"12\"],\"icon\":{\"id\":\"12345\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=medium\"}}}},{\"_expands\":[],\"id\":\"11002\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11002\"},\"name\":\"Request a new account\",\"description\":\"Request a new account\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"13\",\"14\"],\"icon\":{\"id\":\"12346\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=medium\"}}}},{\"_expands\":[],\"id\":\"11003\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11003\"},\"name\":\"Hardware request\",\"description\":\"Request a hardware support\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"13\"],\"icon\":{\"id\":\"12347\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=medium\"}}}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTORequestTypeDTO"
                }
              }
            },
            "description": "Returns the request types, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get all request types",
        "tags": [
          "Requesttype"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk": {
      "get": {
        "deprecated": false,
        "description": "This method returns all the service desks in the Jira Service Management instance that the user has permission to access. Use this method where you need a list of service desks or need to locate a service desk by name or keyword.\n\n**Note:** This method will be slow if the instance has hundreds of service desks. If you want to fetch a single service desk by its ID, use [/rest/servicedeskapi/servicedesk/\\{serviceDeskId\\}](./#api-rest-servicedeskapi-servicedesk-servicedeskid-get) instead.\n\n**[Permissions](#permissions) required**: Any",
        "operationId": "getServiceDesks",
        "parameters": [
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk?start=0&limit=3\"},\"values\":[{\"id\":\"10001\",\"projectId\":\"11001\",\"projectName\":\"IT Help Desk\",\"projectKey\":\"ITH\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10001\"}},{\"id\":\"10002\",\"projectId\":\"11002\",\"projectName\":\"HR Self Serve Desk\",\"projectKey\":\"HR\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10002\"}},{\"id\":\"10003\",\"projectId\":\"11003\",\"projectName\":\"Foundation Leave\",\"projectKey\":\"FL\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10003\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOServiceDeskDTO"
                }
              }
            },
            "description": "Returns the service desks, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get service desks",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}": {
      "get": {
        "deprecated": false,
        "description": "This method returns a service desk. Use this method to get service desk details whenever your application component is passed a service desk ID but needs to display other service desk details.\n\n**[Permissions](#permissions) required**: Permission to access the Service Desk. For example, being the Service Desk's Administrator or one of its Agents or Users.",
        "operationId": "getServiceDeskById",
        "parameters": [
          {
            "description": "The ID of the service desk to return. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"10001\",\"projectId\":\"11001\",\"projectName\":\"IT Help Desk\",\"projectKey\":\"ITH\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10001\"}}",
                "schema": {
                  "$ref": "#/components/schemas/ServiceDeskDTO"
                }
              }
            },
            "description": "Returns the requested service desk."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get service desk by id",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/attachTemporaryFile": {
      "post": {
        "deprecated": false,
        "description": "This method adds one or more temporary attachments to a service desk, which can then be permanently attached to a customer request using [servicedeskapi/request/\\{issueIdOrKey\\}/attachment](#api-request-issueIdOrKey-attachment-post).\n\n**Note**: It is possible for a service desk administrator to turn off the ability to add attachments to a service desk.\n\nThis method expects a multipart request. The media-type multipart/form-data is defined in RFC 1867. Most client libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components library provides [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html).\n\nBecause this method accepts multipart/form-data, it has XSRF protection on it. This means you must submit a header of X-Atlassian-Token: no-check with the request or it will be blocked.\n\nThe name of the multipart/form-data parameter that contains the attachments must be `file`.\n\nFor example, to upload a file called `myfile.txt` in the Service Desk with ID 10001 use\n\n    curl -D- -u customer:customer -X POST -H \"X-ExperimentalApi: opt-in\" -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\" https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10001/attachTemporaryFile\n\n**[Permissions](#permissions) required**: Permission to add attachments in this Service Desk.",
        "operationId": "attachTemporaryFile",
        "parameters": [
          {
            "description": "The ID of the Service Desk to which the file will be attached. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/MultipartFile"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\"temporaryAttachments\":[{\"temporaryAttachmentId\":\"temp8186986881700442965\",\"fileName\":\"atlassian.png\"},{\"temporaryAttachmentId\":\"temp589064256337898328\",\"fileName\":\"readme.txt\"}]}"
              }
            },
            "description": "Returns if the file(s) were attached."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the attachments are not valid, or exceed the maximum configured attachment size."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "413": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if more than 60 files are requested to be uploaded."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:servicedesk-request"
            ]
          }
        ],
        "summary": "Attach temporary file",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "write:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:request.attachment:jira-service-management",
              "write:request.attachment:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/customer": {
      "delete": {
        "deprecated": false,
        "description": "This method removes one or more customers from a service desk. The service desk must have closed access. If any of the passed customers are not associated with the service desk, no changes will be made for those customers and the resource returns a 204 success code.\n\n**[Permissions](#permissions) required**: Services desk administrator",
        "operationId": "removeCustomers",
        "parameters": [
          {
            "description": "The ID of the service desk the customers should be removed from. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ],
                "usernames": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceDeskCustomerDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if the customers were removed from the service desk, or any of the customers were not associated with the service desk."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk has public signup or open access enabled."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Remove customers",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.customer:jira-service-management",
              "delete:servicedesk.customer:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns a list of the customers on a service desk.\n\nThe returned list of customers can be filtered using the `query` parameter. The parameter is matched against customers' `displayName`, `name`, or `email`. For example, searching for \"John\", \"Jo\", \"Smi\", or \"Smith\" will match a user with display name \"John Smith\".\n\n**[Permissions](#permissions) required**: Permission to view this Service Desk's customers.",
        "operationId": "getCustomers",
        "parameters": [
          {
            "description": "The ID of the service desk the customer list should be returned from. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The string used to filter the customer list.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of users to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/customer?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/customer?start=0&limit=1\"},\"values\":[{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOUserDTO"
                }
              }
            },
            "description": "Returns the service desk's customer list."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get customers",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.customer:jira-service-management",
              "read:user:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "Adds one or more customers to a service desk. If any of the passed customers are associated with the service desk, no changes will be made for those customers and the resource returns a 204 success code.\n\n**[Permissions](#permissions) required**: Service desk administrator",
        "operationId": "addCustomers",
        "parameters": [
          {
            "description": "The ID of the service desk the customer list should be returned from. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accountIds": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ],
                "usernames": [
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3a01db05e2a66fa80bd",
                  "qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/ServiceDeskCustomerDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if all the customers were added to the service desk or were already associated with the service desk."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if any of the customers do not exist. Note that any valid customers are added, but no confirmation is returned."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Add customers",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.customer:jira-service-management",
              "write:servicedesk.customer:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/knowledgebase/article": {
      "get": {
        "deprecated": false,
        "description": "Returns articles which match the given query and belong to the knowledge base linked to the service desk.\n\n**[Permissions](#permissions) required**: Permission to access the service desk.",
        "operationId": "getArticles",
        "parameters": [
          {
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The string used to filter the articles (required).",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to true matching query term in the title and excerpt will be highlighted using the `@@@hl@@@term@@@endhl@@@` syntax. Default: false.",
            "in": "query",
            "name": "highlight",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/%7BserviceDeskId%7D/knowledgebase/article?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/%7BserviceDeskId%7D/knowledgebase/article?start=0&limit=2\"},\"values\":[{\"title\":\"Stolen computer\",\"excerpt\":\"assuming your computer was stolen\",\"source\":{\"type\":\"confluence\",\"pageId\":\"8786177\",\"spaceKey\":\"IT\"},\"content\":{\"iframeSrc\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article/view/8786177\"}},{\"title\":\"Upgrading computer\",\"excerpt\":\"each computer older then 3 years can be upgraded\",\"source\":{\"type\":\"confluence\",\"pageId\":\"8785228\",\"spaceKey\":\"IT\"},\"content\":{\"iframeSrc\":\"https://your-domain.atlassian.net/rest/servicedeskapi/knowledgebase/article/view/8785228\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOArticleDTO"
                }
              }
            },
            "description": "Returns the articles, on the specified page of the results."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request is invalid, for example: missing query parameter."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:knowledgebase:jira-service-management"
            ]
          }
        ],
        "summary": "Get articles",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/organization": {
      "delete": {
        "deprecated": false,
        "description": "This method removes an organization from a service desk. If the organization ID does not match an organization associated with the service desk, no change is made and the resource returns a 204 success code.\n\n**[Permissions](#permissions) required**: Service desk's agent.",
        "operationId": "removeOrganization",
        "parameters": [
          {
            "description": "The ID of the service desk from which the organization will be removed. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "organizationId": 1
              },
              "schema": {
                "$ref": "#/components/schemas/OrganizationServiceDeskUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if the organization was removed from the service desk or no such organization was associated with the service desk."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or organization do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Remove organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.organization:jira-service-management",
              "delete:servicedesk.organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "DELETE"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns a list of all organizations associated with a service desk.\n\n**[Permissions](#permissions) required**: Service desk's agent.",
        "operationId": "getOrganizations",
        "parameters": [
          {
            "description": "The ID of the service desk from which the organization list will be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
            "in": "query",
            "name": "accountId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10001/organization?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/10001/organization?start=0&limit=3\"},\"values\":[{\"id\":\"1\",\"name\":\"Charlie Cakes Franchises\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/1\"}},{\"id\":\"2\",\"name\":\"Atlas Coffee Co\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/2\"}},{\"id\":\"3\",\"name\":\"The Adjustment Bureau\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/organization/3\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOOrganizationDTO"
                }
              }
            },
            "description": "Returns the requested organizations list."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if user does not have the necessary permission."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist or the user is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Get organizations",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method adds an organization to a service desk. If the organization ID is already associated with the service desk, no change is made and the resource returns a 204 success code.\n\n**[Permissions](#permissions) required**: Service desk's agent.",
        "operationId": "addOrganization",
        "parameters": [
          {
            "description": "The ID of the service desk to which the organization will be added. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "organizationId": 1
              },
              "schema": {
                "$ref": "#/components/schemas/OrganizationServiceDeskUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returned if the organization was added or the organization was already associated with the service desk."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or organization do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:servicedesk-customer"
            ]
          }
        ],
        "summary": "Add organization",
        "tags": [
          "Organization"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:servicedesk-customer"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk.organization:jira-service-management",
              "write:servicedesk.organization:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/queue": {
      "get": {
        "deprecated": false,
        "description": "This method returns the queues in a service desk. To include a customer request count for each queue (in the `issueCount` field) in the response, set the query parameter `includeCount` to true (its default is false).\n\n**[Permissions](#permissions) required**: service desk's Agent.",
        "operationId": "getQueues",
        "parameters": [
          {
            "description": "ID of the service desk whose queues will be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specifies whether to include each queue's customer request (issue) count in the response.",
            "in": "query",
            "name": "includeCount",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":2,\"start\":2,\"limit\":2,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue?start=4&limit=2\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue?start=0&limit=2\"},\"values\":[{\"id\":\"10\",\"name\":\"Unassigned issues\",\"jql\":\"project = SD AND assignee is EMPTY AND resolution = Unresolved ORDER BY \\\"Time to resolution\\\" ASC\",\"fields\":[\"issuetype\",\"issuekey\",\"summary\",\"created\",\"reporter\",\"duedate\"],\"issueCount\":10,\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue/10\"}},{\"id\":\"20\",\"name\":\"Assigned to me\",\"jql\":\"project = SD AND assignee = currentUser() AND resolution = Unresolved ORDER BY \\\"Time to resolution\\\" ASC\",\"fields\":[\"issuetype\",\"issuekey\",\"summary\",\"created\",\"reporter\",\"duedate\"],\"issueCount\":10,\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue/20\"}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOQueueDTO"
                }
              }
            },
            "description": "Returns the queues of the service desk, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "summary": "Get queues",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:jira-work"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:queue:jira-service-management",
              "read:user:jira",
              "read:jql:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/queue/{queueId}": {
      "get": {
        "deprecated": false,
        "description": "This method returns a specific queues in a service desk. To include a customer request count for the queue (in the `issueCount` field) in the response, set the query parameter `includeCount` to true (its default is false).\n\n**[Permissions](#permissions) required**: service desk's Agent.",
        "operationId": "getQueue",
        "parameters": [
          {
            "description": "ID of the service desk whose queues will be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the required queue.",
            "in": "path",
            "name": "queueId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specifies whether to include each queue's customer request (issue) count in the response.",
            "in": "query",
            "name": "includeCount",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"id\":\"20\",\"name\":\"Assigned to me\",\"jql\":\"project = SD AND assignee = currentUser() AND resolution = Unresolved ORDER BY \\\"Time to resolution\\\" ASC\",\"fields\":[\"issuetype\",\"issuekey\",\"summary\",\"created\",\"reporter\",\"duedate\"],\"issueCount\":10,\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue/20\"}}",
                "schema": {
                  "$ref": "#/components/schemas/QueueDTO"
                }
              }
            },
            "description": "Returns the specific queue of the service desk."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "summary": "Get queue",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:jira-work"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:queue:jira-service-management",
              "read:user:jira",
              "read:jql:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/queue/{queueId}/issue": {
      "get": {
        "deprecated": false,
        "description": "This method returns the customer requests in a queue. Only fields that the queue is configured to show are returned. For example, if a queue is configured to show description and due date, then only those two fields are returned for each customer request in the queue.\n\n**[Permissions](#permissions) required**: Service desk's agent.",
        "operationId": "getIssuesInQueue",
        "parameters": [
          {
            "description": "The ID of the service desk containing the queue to be queried. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the queue whose customer requests will be returned.",
            "in": "path",
            "name": "queueId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":1,\"start\":1,\"limit\":1,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue/10/issue?start=2&limit=1\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/1/queue/10/issue?start=0&limit=1\"},\"values\":[{\"fields\":{\"summary\":\"My keyboard is broken\",\"issuetype\":{\"avatarId\":10002,\"description\":\"For general IT problems and questions. Created by Jira Service Management.\",\"iconUrl\":\"https://your-domain.atlassian.net/servicedesk/issue-type-icons?icon=it-help\",\"id\":\"13\",\"name\":\"IT Help\",\"self\":\"https://your-domain.atlassian.net/rest/api/2/issuetype/13\",\"subtask\":false},\"duedate\":\"2015-11-11T14:17:13.000+0700\",\"created\":\"2015-11-09T14:17:13.000+0700\",\"reporter\":{\"accountId\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"name\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"key\":\"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"emailAddress\":\"fred@example.com\",\"displayName\":\"Fred F. User\",\"active\":true,\"timeZone\":\"Australia/Sydney\",\"_links\":{\"jiraRest\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\",\"avatarUrls\":{\"16x16\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue\",\"24x24\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue\",\"32x32\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue\",\"48x48\":\"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue\"},\"self\":\"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b\"}}},\"id\":\"10001\",\"key\":\"SD-1\",\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/rest/api/2/issue/10001\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTOIssueBean"
                }
              }
            },
            "description": "Returns the customer requests belonging to the queue, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or the queue do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:jira-work"
            ]
          }
        ],
        "summary": "Get issues in queue",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:jira-work"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:queue:jira-service-management",
              "read:user:jira",
              "read:issue:jira"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttype": {
      "get": {
        "deprecated": false,
        "description": "This method returns all customer request types from a service desk. There are two parameters for filtering the returned list:\n\n *  `groupId` which filters the results to items in the customer request type group.\n *  `searchQuery` which is matched against request types' `name` or `description`. For example, the strings \"Install\", \"Inst\", \"Equi\", or \"Equipment\" will match a request type with the *name* \"Equipment Installation Request\".\n\n**Note:** This API by default will filter out request types hidden in the portal (i.e. request types without groups and request types where a user doesn't have permission) when `searchQuery` is provided, unless `includeHiddenRequestTypesInSearch` is set to true. Restricted request types will not be returned for those who aren't admins.\n\n**[Permissions](#permissions) required**: Permission to access the service desk.",
        "operationId": "getRequestTypes",
        "parameters": [
          {
            "description": "The ID of the service desk whose customer request types are to be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results to those in a customer request type group.",
            "in": "query",
            "name": "groupId",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The string to be used to filter the results.",
            "in": "query",
            "name": "searchQuery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Whether to include hidden request types when searching with `searchQuery`.",
            "in": "query",
            "name": "includeHiddenRequestTypesInSearch",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Request type restriction status (`open` or `restricted`) used to filter the results.",
            "in": "query",
            "name": "restrictionStatus",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype?start=0&limit=3\"},\"values\":[{\"_expands\":[],\"id\":\"11001\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11001\"},\"name\":\"Get IT Help\",\"description\":\"Get IT Help\",\"helpText\":\"Please tell us clearly the problem you have within 100 words.\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"12\"],\"icon\":{\"id\":\"12345\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=medium\"}}}},{\"_expands\":[],\"id\":\"11002\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11002\"},\"name\":\"Request a new account\",\"description\":\"Request a new account\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"13\",\"14\"],\"icon\":{\"id\":\"12346\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12346?size=medium\"}}}},{\"_expands\":[],\"id\":\"11003\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11003\"},\"name\":\"Hardware request\",\"description\":\"Request a hardware support\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"13\"],\"icon\":{\"id\":\"12347\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12347?size=medium\"}}}}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTORequestTypeDTO"
                }
              }
            },
            "description": "Returns the requested customer request types, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request types",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "deprecated": false,
        "description": "This method enables a customer request type to be added to a service desk based on an issue type. Note that not all customer request type fields can be specified in the request and these fields are given the following default values:\n\n *  Request type icon is given the headset icon.\n *  Request type groups is left empty, which means this customer request type will not be visible on the [customer portal](https://confluence.atlassian.com/servicedeskcloud/configuring-the-customer-portal-732528918.html).\n *  Request type status mapping is left empty, so the request type has no custom status mapping but inherits the status map from the issue type upon which it is based.\n *  Request type field mapping is set to show the required fields as specified by the issue type used to create the customer request type.\n\n  \nThese fields can be updated by a service desk administrator using the **Request types** option in **Project settings**.  \nRequest Types are created in next-gen projects by creating Issue Types. Please use the Jira Cloud Platform Create issue type endpoint instead.\n\n**[Permissions](#permissions) required**: Service desk's administrator",
        "operationId": "createRequestType",
        "parameters": [
          {
            "description": "The ID of the service desk where the customer request type is to be created. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Get IT Help",
                "helpText": "Please tell us clearly the problem you have within 100 words.",
                "issueTypeId": "12345",
                "name": "Get IT Help"
              },
              "schema": {
                "$ref": "#/components/schemas/RequestTypeCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"id\":\"11001\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11001\"},\"name\":\"Get IT Help\",\"description\":\"Get IT Help\",\"helpText\":\"Please tell us clearly the problem you have within 100 words.\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"12\"],\"icon\":{\"id\":\"12345\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=medium\"}}}}",
                "schema": {
                  "$ref": "#/components/schemas/RequestTypeDTO"
                }
              }
            },
            "description": "Returns the customer request type created."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the customer request type name is empty."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or issue type do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:requesttype:jira-service-management",
              "write:requesttype:jira-service-management"
            ]
          }
        ],
        "summary": "Create request type",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttype/{requestTypeId}": {
      "delete": {
        "deprecated": false,
        "description": "This method deletes a customer request type from a service desk, and removes it from all customer requests.  \nThis only supports classic projects.\n\n**[Permissions](#permissions) required**: Service desk administrator.",
        "operationId": "deleteRequestType",
        "parameters": [
          {
            "description": "The ID or [project identifier](#project-identifiers) of the service desk.",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the request type.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request type is deleted."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type ID is not valid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have the necessary permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or request type do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "summary": "Delete request type",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "PROJECT_ADMIN"
      },
      "get": {
        "deprecated": false,
        "description": "This method returns a customer request type from a service desk.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required**: Permission to access the service desk.",
        "operationId": "getRequestTypeById",
        "parameters": [
          {
            "description": "The ID of the service desk whose customer request type is to be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the customer request type to be returned.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"id\":\"11001\",\"_links\":{\"self\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/28/requesttype/11001\"},\"name\":\"Get IT Help\",\"description\":\"Get IT Help\",\"helpText\":\"Please tell us clearly the problem you have within 100 words.\",\"issueTypeId\":\"12345\",\"serviceDeskId\":\"28\",\"portalId\":\"2\",\"groupIds\":[\"12\"],\"icon\":{\"id\":\"12345\",\"_links\":{\"iconUrls\":{\"48x48\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=large\",\"24x24\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=small\",\"16x16\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=xsmall\",\"32x32\":\"https://your-domain.atlassian.net/rest/api/2/universal_avatar/view/type/SD_REQTYPE/avatar/12345?size=medium\"}}}}",
                "schema": {
                  "$ref": "#/components/schemas/RequestTypeDTO"
                }
              }
            },
            "description": "Returns the customer request type item."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user credentials are invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or customer request type do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          },
          {}
        ],
        "summary": "Get request type by id",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttype/{requestTypeId}/field": {
      "get": {
        "deprecated": false,
        "description": "This method returns the fields for a service desk's customer request type.\n\nAlso, the following information about the user's permissions for the request type is returned:\n\n *  `canRaiseOnBehalfOf` returns `true` if the user has permission to raise customer requests on behalf of other customers. Otherwise, returns `false`.\n *  `canAddRequestParticipants` returns `true` if the user can add customer request participants. Otherwise, returns `false`.\n\n**[Permissions](#permissions) required**: Permission to view the Service Desk. However, hidden fields would be visible to only Service desk's Administrator.",
        "operationId": "getRequestTypeFields",
        "parameters": [
          {
            "description": "The ID of the service desk containing the request types whose fields are to be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the request types whose fields are to be returned.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `hiddenFields` that returns hidden fields associated with the request type.",
            "in": "query",
            "name": "expand",
            "schema": {
              "items": {
                "default": "",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"canAddRequestParticipants\":true,\"canRaiseOnBehalfOf\":true,\"requestTypeFields\":[{\"fieldId\":\"summary\",\"jiraSchema\":{\"system\":\"summary\",\"type\":\"string\"},\"name\":\"What do you need?\",\"required\":true,\"validValues\":[],\"visible\":true},{\"fieldId\":\"customfield_10000\",\"jiraSchema\":{\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:userpicker\",\"customId\":10000,\"type\":\"user\"},\"name\":\"Nominee\",\"required\":true,\"validValues\":[],\"visible\":true},{\"fieldId\":\"customfield_10001\",\"jiraSchema\":{\"custom\":\"com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons\",\"customId\":10001,\"type\":\"string\"},\"name\":\"Gifts\",\"required\":true,\"validValues\":[{\"children\":[],\"label\":\"Bottle of Wine\",\"value\":\"10000\"},{\"children\":[],\"label\":\"Threadless Voucher\",\"value\":\"10001\"},{\"children\":[],\"label\":\"2 Movie Tickets\",\"value\":\"10002\"}],\"visible\":false}]}",
                "schema": {
                  "$ref": "#/components/schemas/CustomerRequestCreateMetaDTO"
                }
              }
            },
            "description": "Returns the request type's fields and user permission details, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk or request type do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request type fields",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttype/{requestTypeId}/property": {
      "get": {
        "deprecated": false,
        "description": "Returns the keys of all properties for a request type.\n\nProperties for a Request Type in next-gen are stored as Issue Type properties and therefore the keys of all properties for a request type are also available by calling the Jira Cloud Platform [Get issue type property keys](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issuetype-issueTypeId-properties-get) endpoint.\n\n**[Permissions](#permissions) required**: The user must have permission to view the request type.",
        "operationId": "getPropertiesKeys",
        "parameters": [
          {
            "description": "The ID of the request type for which keys will be retrieved.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The ID of the service desk which contains the request type. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"entityPropertyKeyBeans\":[{\"key\":\"requestType.attributes\",\"self\":\"/rest/servicedeskapi/servicedesk/1/requestType/2/property/propertyKey\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PropertyKeys"
                }
              }
            },
            "description": "Returned if the request type was found."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get properties keys",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttype/{requestTypeId}/property/{propertyKey}": {
      "delete": {
        "deprecated": false,
        "description": "Removes a property from a request type.\n\nProperties for a Request Type in next-gen are stored as Issue Type properties and therefore can also be deleted by calling the Jira Cloud Platform [Delete issue type property](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issuetype-issueTypeId-properties-propertyKey-delete) endpoint.\n\n**[Permissions](#permissions) required**: Jira project administrator with a Jira Service Management agent license.",
        "operationId": "deleteProperty",
        "parameters": [
          {
            "description": "The ID of the service desk which contains the request type. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the request type for which the property will be removed.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The key of the property to remove.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the request type property was removed."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the calling user doesn't have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type or property do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "summary": "Delete property",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:jira-project"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype.property:jira-service-management",
              "delete:requesttype.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "get": {
        "deprecated": false,
        "description": "Returns the value of the property from a request type.\n\nProperties for a Request Type in next-gen are stored as Issue Type properties and therefore also available by calling the Jira Cloud Platform [Get issue type property](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issuetype-issueTypeId-properties-propertyKey-get) endpoint.\n\n**[Permissions](#permissions) required**: User must have permission to view the request type.",
        "operationId": "getProperty",
        "parameters": [
          {
            "description": "The ID of the service desk which contains the request type. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the request type from which the property will be retrieved.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The key of the property to return.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"key\":\"organization.attributes\",\"value\":{\"color\":\"green\",\"priority\":\"high\"}}",
                "schema": {
                  "$ref": "#/components/schemas/EntityProperty"
                }
              }
            },
            "description": "Returned if the request type property was returned."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type or property do not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get property",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      },
      "put": {
        "deprecated": false,
        "description": "Sets the value of a request type property. Use this resource to store custom data against a request type.\n\nProperties for a Request Type in next-gen are stored as Issue Type properties and therefore can also be set by calling the Jira Cloud Platform [Set issue type property](https://developer.atlassian.com/cloud/jira/platform/rest/v3/#api-rest-api-3-issuetype-issueTypeId-properties-propertyKey-put) endpoint.\n\n**[Permissions](#permissions) required**: Jira project administrator with a Jira Service Management agent license.",
        "operationId": "setProperty",
        "parameters": [
          {
            "description": "The ID of the service desk which contains the request type. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the request type on which the property will be set.",
            "in": "path",
            "name": "requestTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The key of the request type property. The maximum length of the key is 255 bytes.",
            "in": "path",
            "name": "propertyKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned if the request type property is updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned if the request type property is created."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type ID is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the calling user doesn't have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the request type does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "manage:jira-project"
            ]
          }
        ],
        "summary": "Set property",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": true
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "manage:jira-project"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype.property:jira-service-management",
              "write:requesttype.property:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-experimental": true,
        "x-atlassian-connect-scope": "INACCESSIBLE"
      }
    },
    "/rest/servicedeskapi/servicedesk/{serviceDeskId}/requesttypegroup": {
      "get": {
        "deprecated": false,
        "description": "This method returns a service desk's customer request type groups. Jira Service Management administrators can arrange the customer request type groups in an arbitrary order for display on the customer portal; the groups are returned in this order.\n\n**[Permissions](#permissions) required**: Permission to view the service desk.",
        "operationId": "getRequestTypeGroups",
        "parameters": [
          {
            "description": "The ID of the service desk whose customer request type groups are to be returned. This can alternatively be a [project identifier.](#project-identifiers)",
            "in": "path",
            "name": "serviceDeskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The starting index of the returned objects. Base index: 0. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of items to return per page. Default: 50. See the [Pagination](#pagination) section for more details.",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "{\"_expands\":[],\"size\":3,\"start\":3,\"limit\":3,\"isLastPage\":false,\"_links\":{\"base\":\"https://your-domain.atlassian.net/rest/servicedeskapi\",\"context\":\"context\",\"next\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/%7BserviceDeskId%7D/requesttypegroup?start=6&limit=3\",\"prev\":\"https://your-domain.atlassian.net/rest/servicedeskapi/servicedesk/%7BserviceDeskId%7D/requesttypegroup?start=0&limit=3\"},\"values\":[{\"id\":\"12\",\"name\":\"Common Requests\"},{\"id\":\"13\",\"name\":\"Logins and Accounts\"},{\"id\":\"14\",\"name\":\"Servers and Infrastructure\"}]}",
                "schema": {
                  "$ref": "#/components/schemas/PagedDTORequestTypeGroupDTO"
                }
              }
            },
            "description": "Returns the service desk's customer request type groups, on the specified page of the results."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the user does not have permission to complete this request."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Returned if the service desk does not exist."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:servicedesk-request"
            ]
          }
        ],
        "summary": "Get request type groups",
        "tags": [
          "Servicedesk"
        ],
        "x-atlassian-data-security-policy": [
          {
            "app-access-rule-exempt": false
          }
        ],
        "x-atlassian-oauth2-scopes": [
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:servicedesk-request"
            ],
            "state": "Current"
          },
          {
            "scheme": "OAuth2",
            "scopes": [
              "read:requesttype:jira-service-management"
            ],
            "state": "Beta"
          }
        ],
        "x-atlassian-connect-scope": "READ"
      }
    }
  },
  "servers": [
    {
      "url": "https://your-domain.atlassian.net"
    }
  ],
  "tags": [
    {
      "name": "Assets"
    },
    {
      "name": "Customer"
    },
    {
      "name": "Info"
    },
    {
      "name": "Knowledgebase"
    },
    {
      "name": "Organization"
    },
    {
      "name": "Request"
    },
    {
      "name": "Requesttype"
    },
    {
      "name": "Servicedesk"
    }
  ],
  "x-atlassian-narrative": {
    "documents": [
      {
        "anchor": "about",
        "body": "This is the reference for the Jira Service Management Cloud REST APIs. The REST APIs are for developers who want to integrate\n Jira Service Management with other applications or administrators that want to automate their workflows and processes.\n",
        "title": "About"
      },
      {
        "anchor": "jira-cloud-platform-apis",
        "body": "Jira Service Management is built upon the Jira platform. As such, in Jira Service Management you have access to the Jira\nplatform REST APIs.\n\nIf you are writing an Atlassian Connect app, your app can request access to the Jira platform\nREST APIs by using the correct Jira platform Connect Scopes.\n\n * [Browse the Jira platform REST APIs](/cloud/jira/platform/rest/)\n * [Browse the Jira platform Connect Scopes](/cloud/jira/platform/scopes/)\n",
        "title": "Jira Cloud Platform APIs"
      },
      {
        "anchor": "permissions",
        "body": "Permissions control the level of a user's access to the Jira Service Management instance, while roles are how the permissions are assigned to individual users.\n\nFor detailed information on roles and permissions, see [Permissions overview](https://support.atlassian.com/jira-service-management-cloud/docs/overview-of-jira-cloud-permissions/)\nand [Setting up service desk users](https://support.atlassian.com/jira-service-management-cloud/docs/set-up-service-desk-users-to-work-on-requests/).\n\n**Permission types**\n\n- Global -  These apply to applications as a whole, not individual projects.\n- Project - Organized into permission schemes, these apply to projects.\n- Issue - Organized into security schemes, these allow the visibility of individual issues to be adjusted.\n- Request type - This allows the creation of issues using specific request types.\n\n**Roles**\n\n - Jira System Administrator - can perform all Jira administration functions.\n - Jira Administrator - can perform most Jira administration functions.\n - Service desk Administrator (Project role - Administrator) - assigned to specific Service Desks and manages those service desk’s configurations.\n - Agent (Project role - service desk Team member) - assigned to specific Service Desks and manages and responds to Requests.\n - Customer - can submit and update their Requests, and may participate in Requests raised by other Customers.\n",
        "title": "Permissions and roles"
      },
      {
        "anchor": "desks",
        "body": "It is also worth noting that the ability of Customers to raise Requests depends on the service desk type, which can be:\n\n -   Public (sign up): Anyone who has the service desk URL can submit requests, and a user (customer) is created for them when a request is submitted.\n -   Open: Any user in the system can submit requests, they don’t need to be associated with the service desk.\n -   Closed: Only users associated with the service desk can submit requests.\n\nFor more details, see [How to manage access to your Jira Service Management Cloud](https://confluence.atlassian.com/jirakb/how-to-manage-access-to-your-jira-service-desk-cloud-967872675.html) in the Jira Service Management Cloud documentation.\n\n",
        "title": "Service desk types"
      },
      {
        "anchor": "authentication",
        "body": "The Jira Service Management REST API uses the same authentication methods as Jira Cloud.\n\n### Authentication for Atlassian Connect apps\n\nIf you are building an Atlassian Connect app to interact with the Jira Service Management Cloud REST API,\nauthentication is handled by [JWT (JSON Web Token)](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token)\ntechnology. This is built into the supported Atlassian Connect libraries.\nAt a high level, a security context is exchanged when the app is installed,\nand this context is used to create and validate JWT tokens, embedded in API calls.\nTo learn more,\nread the [Authentication for apps](https://developer.atlassian.com/cloud/jira/service-desk/authentication-for-apps/) guide.\n\n### Authentication for REST API requests\n\nIf you are integrating directly with the Jira Service Management Cloud REST APIs it is recommended to use\n[OAuth authentication](https://developer.atlassian.com/cloud/jira/service-desk/jira-rest-api-oauth-authentication/) method.\nFor implementations with low security requirements, such as scripts and bots, it is also possible to use\n[Basic authentication](https://developer.atlassian.com/cloud/jira/service-desk/jira-rest-api-basic-authentication/) method.\n\nJira Service Management uses cookie-based authentication in the browser. Therefore, you can call the \nREST API from JavaScript on a page and rely on the authentication that the browser has established.\n\n### Authentication for other integrations\n\nIf you are building an integration that does not use Atlassian Connect, use OAuth 2.0 authorization code grants\n(also known as three-legged OAuth) for authentication. Note, the base URL for requests made via OAuth 2.0 authorization\ncode grants is `https://api.atlassian.com`. If you are copying the examples in this document, you'll need to change the URLs\nfrom `https://your-domain.atlassian.net/{api}` to `https://api.atlassian.com/ex/jira/{cloudid}/{api}`. To learn more,\nread [OAuth 2.0 authorization code grants (3LO)](https://developer.atlassian.com/cloud/jira/service-desk/oauth-2-authorization-code-grants-3lo-for-apps/).\n",
        "title": "Authentication"
      },
      {
        "anchor": "scopes",
        "body": "Scopes provide static authorization for Atlassian Connect apps. If you are using your own credentials to make REST calls, then these scopes do not apply.\n\nScopes are defined in the [Connect app descriptor](https://developer.atlassian.com/cloud/jira/service-desk/app-descriptor/) and specify the maximum set of actions that an app may perform: read, write, etc. This security level is enforced by Atlassian Connect and cannot be bypassed by app implementations.\n\nFor the list of Jira Service Management REST scopes, see [Scopes](https://developer.atlassian.com/cloud/jira/service-desk/scopes/).\n",
        "title": "Scopes"
      },
      {
        "anchor": "status",
        "body": "\n -   <span class=\"aui-lozenge aui-lozenge-success\">Status 200</span> Returned if the requested content (GET) is returned or content is updated (PUT).\n -   <span class=\"aui-lozenge aui-lozenge-success\">Status 201</span> Returned if new records are created (PUT).\n -   <span class=\"aui-lozenge aui-lozenge-success\">Status 204</span> Returned where the request may or may not have been actioned, but the outcome is as expected. For example, the request was to remove a customer from an organization, but the customer was not associated with the organization.\n -   <span class=\"aui-lozenge aui-lozenge-error\">Status 400</span> Returned if the request was invalid.\n -   <span class=\"aui-lozenge aui-lozenge-error\">Status 401</span> Returned if the user is not logged in. Resolve by logging the user in and reissuing the call.\n -   <span class=\"aui-lozenge aui-lozenge-error\">Status 403</span> Returned if the user does not have the necessary permission to access the resource or run the method.\n -   <span class=\"aui-lozenge aui-lozenge-error\">Status 404</span> Returned if the passed path parameters do not correspond to an object in the instance, for example, no Organization exists for a passed ID.\n -   <span class=\"aui-lozenge aui-lozenge-error\">Status 412</span> Returned if the API is experimental but the `X-ExperimentalApi: opt-in` header was not passed. For more details, see [Experimental methods](#experimental).\n\nResources will return a response body in addition to the error status codes. The returned entity for errors is as follows:\n\n```json\n{\n  \"errorMessage\": \"Here is an error message\",\n  \"i18nErrorMessage\": {\n    \"i18nKey\": \"some.error.key\",\n    \"parameters\": []\n  }\n}\n```\n",
        "title": "Status codes and responses"
      },
      {
        "anchor": "experimental",
        "body": "Methods marked as <span class=\"aui-lozenge aui-lozenge-subtle aui-lozenge-current\">experimental</span> may change without notice. To use experimental methods, you must include the `X-ExperimentalApi: opt-in` header in your requests. Use of this header indicates that you are opting into the experimental preview. Once a resource or method moves out of the experimental phase, then the header will no longer be required or checked.\n\nFeedback on the experimental APIs is welcome and can be provided by submitting a feature request or suggestion through the [Atlassian Ecosystem Help Center](https://ecosystem.atlassian.net/servicedesk/customer/portals) or the [Jira Service Management Ecosystem](https://ecosystem.atlassian.net/browse/JSDECO).\n",
        "title": "Experimental methods"
      },
      {
        "anchor": "pagination",
        "body": "The Jira Service Management REST API uses pagination to conserve server resources and limit the size of responses. Pagination is enforced for methods that could return a large collection. When you make a request to a paged API, the response will wrap the returned values in a JSON object with paging metadata, as follows:\n\n**Request**\n\n```\nhttp://host:port/context/rest/api-name/resource-name?start=0&limit=10\n```\n\n**Response**\n\n```json\n{\n    \"start\" : 0,\n    \"limit\" : 10,\n    \"size\" : 7,\n    \"isLastPage\" : true,\n    \"values\": [\n        { /* result 0 */ },\n        { /* result 1 */ },\n        { /* result 2 */ }\n        { /* result 3 */ }\n        { /* result 4 */ }\n        { /* result 5 */ }\n        { /* result 6 */ }\n    ]\n}\n```\n\nWhere:\n\n - `start` is the index of the first item returned in the page of results.\n - `limit` is the total number of items that could be returned per page, subject to the maximum server enforced limit for the resource’s method. If `limit` isn’t specified the default value of the resource is used.\n - `size` is the number of items returned on this page.\n - `isLastPage` indicates whether the page is the last page of results.\n\nClients can use the `start`, `limit`, and `size` parameters to retrieve the desired number of results. Each resource or method has a unique limit on the maximum number of items returned, which cannot be exceeded. If you request `size` which is larger than the limit, the number of items returned will be capped at the limit for that resource’s method. This behavior can be identified when the first page shows `size` is less than `limit` and `isLastPage` is `false`.\n\nThe limits set for each resource’s method is an implementation detail and may be changed.\n",
        "title": "Pagination"
      },
      {
        "anchor": "expansion",
        "body": "To simplify API responses, the Jira Service Management REST API uses resource expansion: the API will only return parts of the resource when explicitly requested.\n\nUse the `expand` query parameter to specify the list of entities that you want to be expanded, identifying each of them by name. For example, appending `?expand=serviceDesk&expand=requestType` to a request’s URI results in the inclusion of the service desk and request type details in the response. The following URL would be used to get that information for the request with the ID JSD-1:\n\n```\nhttp://host:port/context/rest/servicedeskapi/request/JSD-1?expand=serviceDesk&expand=requestType\n```\n\nAlternatively, you can pass the list of entities you want to be expanded as a single comma-separated parameter, as in:\n\n```\nhttp://host:port/context/rest/servicedeskapi/request/JSD-1?expand=serviceDesk,requestType\n```\n\nTo discover the expansion identifiers for each entity, look at the `_expands` property in the parent object. In the JSON example below, the resource declares `participant`, `status`, `sla`, `requestType`, and `serviceDesk` as expandable.\n\n```json\n{\n    \"_expands\": [\n        \"participant\",\n        \"status\",\n        \"sla\",\n        \"requestType\",\n        \"serviceDesk\"\n    ],\n    \"issueId\": \"107001\",\n    \"issueKey\": \"HELPDESK-1\",\n    \"requestTypeId\": \"11001\",\n    \"serviceDeskId\": \"10001\",\n    ...\n```\n\n",
        "title": "Expansion"
      },
      {
        "anchor": "request-language",
        "body": "By default, responses are translated based on the requesting user's language preference, or the Jira site default \nlanguage if anonymous.\n\nUse the `requestLanguage` query parameter to have responses translated in a specific language, providing an \n[IETF BCP 47](https://tools.ietf.org/html/bcp47) language tag in the form `(language code)-(country code)` as the value. \nE.g. `?requestLanguage=en-US` for English (United States). Both static text (e.g. error messages) and dynamic \nuser-entered text (e.g. workflow status names) will be translated, if available.\n\nThe languages available are based on the installed languages in Jira. If the language tag specified does not match one \nof Jira's languages, then the query parameter will have no effect.\n\nDynamic user-entered translations can be edited in Jira administration for global objects (e.g. priority names) and \nin **Language support** under project administration for Service Desk projects (e.g. request type names).",
        "title": "Request language"
      },
      {
        "anchor": "special-headers",
        "body": "The following request and response headers define important metadata for the Service Management REST API resources.\n\n -   **X-Atlassian-Token** (request): Operations that accept multipart/form-data must include the `X-Atlassian-Token: no-check` header in requests.\nOtherwise the request will be blocked by XSRF protection.\n -   **X-ExperimentalApi** (request): Experimental operations must include the `X-ExperimentalApi: opt-in` header in requests.\n Otherwise the request will not be processed. See [Experimental methods](#experimental) for more details.\n-   **X-AACCOUNTID** (response): This response header contains the Atlassian account ID of the authenticated user.\n",
        "title": "Special headers"
      },
      {
        "anchor": "project-identifiers",
        "body": "For convenience, any of the resources that require a `{serviceDeskId}` path parameter also accepts other identifiers.\n\nFor example, if a `ServiceDesk(id: 15)` corresponds to a `Project(id: 10012, key: ABC)`, then issuing a request to any of:\n\n    /rest/servicedeskapi/servicedesk/ABC\n\n    /rest/servicedeskapi/servicedesk/projectKey:ABC\n\n    /rest/servicedeskapi/servicedesk/projectId:10012\n\n    /rest/servicedeskapi/servicedesk/serviceDeskId:15\n\nis equivalent to issuing a request to:\n\n    /rest/servicedeskapi/servicedesk/15\n",
        "title": "Using project identifiers"
      },
      {
        "anchor": "fieldformats",
        "body": "**Summary** - _A single line of text._\n\n```json\n\n\"summary\": \"An explanation is one line of text.\"\n\n```\n\n**Description** - _Multiple lines of text._\n\n```json\n\n\"description\": \"A description is multiples lines of text\\n separated by\\n line feeds.\",\n\n```\n\n**Components** - _Multiple values addressed by 'name'._\n\n```json\n\n\"components\" : [ { \"name\": \"Active Directory\"} , { \"name\": \"Network Switch\" } ]\n\n```\n\n**Due date** - _A date in 'YYYY-MM-DD' format._\n\n```json\n\n\"duedate\" : \"2015-11-18\"\n\n```\n\n**Labels** - _An array of string values._\n\n```json\n\n\"labels\" : [\"examplelabelnumber1\", \"examplelabelnumber2\"]\n\n```\n\n**Checkbox custom field** - _A custom UI field that enables multiple values to be selected from a defined list of values, with values addressed by 'value' or `id`._\n\n```json\n\n\"customfield_11440\" : [{ \"value\" : \"option1\"}, {\"value\" : \"option2\"}]\n\nor\n\n\"customfield_11440\" : [{ \"id\" : 10112}, {\"id\" : 10115}]\n\n```\n\n**Date picker custom field** - _A custom UI field that enables a date in 'YYYY-MM-DD' format to be picked._\n\n```json\n\n\"customfield_11441\" : \"2015-11-18\"\n\n```\n\n**Date time picker custom field** - _A custom UI field enables a datetime in ISO 8601 ('YYYY-MM-DDThh:mm:ss.sTZD') format to be picked._\n\n```json\n\n\"customfield_11442\" : \"2015-11-18T14:39:00.000+1100\"\n\n```\n\n**Labels custom field** - _A custom UI field that is an array of strings._\n\n```json\n\n\"customfield_11443\" : [ \"rest_label1\", \"rest_label2\" ]\n\n```\n\n**Number custom field** - _A custom UI field that enables a number to be entered._\n\n```json\n\n\"customfield_11444\" : 666\n\n```\n\n**Radio button custom field** - _A custom UI field that enables a single value to be selected from a defined list of values, with values addressed by `value` or `id`._\n\n```json\n\n\"customfield_11445\" : { \"value\": \"option2\" }\n\nor\n\n\"customfield_11445\" : { \"id\": 10112 }\n\n```\n\n**Cascading select custom field** - _A custom UI field that enables a single parent value and then a related child value to be selected, with values addressed by `value` or `id`._\n\n```json\n\n\"customfield_11447\" : { \"value\": \"parent_option1\", \"child\": { \"value\" : \"p1_child1\"} }\n\nor\n\n\"customfield_11447\" : { \"id\": 10112, \"child\": { \"id\" : 10115 } }\n\n```\n\n**Multi-select custom field** - _A custom UI field that enables multiple values to be selected from a defined list of values, with values addressed by `value` or `id`._\n\n```json\n\n\"customfield_11448\" : [ { \"value\": \"option1\" }, { \"value\": \"option2\" } ]\n\nor\n\n\"customfield_11448\" : [ { \"id\": 10112 }, { \"id\": 10115 } ]\n\n```\n\n**Single-select custom field** - _A custom UI field that enables a single value to be selected from a defined list of values, with values address by `value` or `id`._\n\n```json\n\n\"customfield_11449\" : { \"value\": \"option3\" }\n\nor\n\n\"customfield_11449\" : { \"id\": 10112 }\n\n```\n\n**Multi-line text custom field** - _A custom UI field that enables multiple lines of text to be entered._\n\n```json\n\n\"customfield_11450\": \"Multiples lines of text\\n separated by\\n line feeds\"\n\n```\n\n**Text custom field** - _A custom UI field that enables a single line of text to be entered._\n\n```json\n\n\"customfield_11450\": \"A single line of text.\"\n\n```\n\n**URL custom field** - _A custom UI field that enables a URL to be entered._\n\n```json\n\n\"customfield_11452\" : \"http://www.atlassian.com\",\n\n```\n\n**Single-user picker custom field** - _A custom UI field that enables a single user to be selected._\n\n```json\n\n\"customfield_11453\" : { \"name\":\"tommytomtomahawk\" },\n\n```\n\n**Multi-user picker custom field** - _A custom UI field that enables multiple users to be selected._\n\n```json\n\n\"customfield_11458\" : [ { \"name\":\"inigomontoya\" }, { \"name\":\"tommytomtomahawk\" }]\n\n```\n\n**Attachment** - _Attachments, using IDs of temporary attachments as provided by the /attachTemporaryFile API._\n\n````json\n\"attachment\" : [\"4786e3a5-52be-4d5b-bf3d-5f53e54f4559\", \"1187b2b7-8a75-4eac-88b2-b6e43129ef5c\"]\n\n````",
        "title": "Field input formats"
      },
      {
        "anchor": "overshort",
        "body": "The Jira Service Management REST API enable you to work with a range of objects from Jira Service Management. The main resources provided are:\n\n| Resource      | Description                                                                                                                                                                                                                                    |\n|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| customer      | This resource represents customers within your Jira instance. Use it to create new customers.                                                                                                                                                  |\n| info          | This resource provides details of the Jira Service Management software version, builds, and related links.                                                                                                                                     |\n| organization  | This resource enables you to group Jira Service Management customers together. Use it to create and delete organizations, and add and remove customers from them.                                                                              |\n| request       | This resource represents the customer requests in your service desks. Use it to create new requests and update request details, such as attachments and comments as well as take actions to update request status or review SLA performance.   |\n| requesttype   | This resource enables a list of customer request types, a way to categorize requests in a service desk, to be obtained.                                                                                                                        |\n| servicedesk   | This resource represents a service desk. Use it to retrieve the service desks in your Jira instance, managed the requests service desks can handle, manage the associated customers and organizations, and retrieve details of request queues. |\n",
        "title": "Resource summary"
      }
    ]
  }
}