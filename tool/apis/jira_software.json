{
  "openapi": "3.0.0",
  "info": {
    "description": "Jira Software Cloud REST API documentation",
    "version": "1001.0.0",
    "title": "Jira Software Cloud API",
    "termsOfService": "http://atlassian.com/terms/",
    "contact": {
      "url": "https://getsupport.atlassian.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Backlog",
      "description": "Apis related to the backlog"
    },
    {
      "name": "Board",
      "description": "Apis related to boards"
    },
    {
      "name": "Epic",
      "description": "Apis related to epics"
    },
    {
      "name": "Issue",
      "description": "Apis related to issues"
    },
    {
      "name": "Sprint",
      "description": "Apis related to sprints"
    },
    {
      "name": "Development Information",
      "description": "APIs related to integrating development information (commits, branches and pull requests) with Jira. These APIs are available to Atlassian Connect apps and on-premise integrations using OAuth. Connect apps using these APIs must have the Development Tool module in the app descriptor, see https://developer.atlassian.com/cloud/jira/software/modules/development-tool/. For more details on integrating Jira Software Cloud with on-premises tools using OAuth 2.0 credentials, see https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/."
    },
    {
      "name": "Feature Flags",
      "description": "Apis related to integrating Feature Flags with Jira Software. These apis are only available to Atlassian Connect apps. To use these apis you must have the Feature Flag module (see https://developer.atlassian.com/cloud/jira/software/modules/feature-flag/) in your app's descriptor"
    },
    {
      "name": "Deployments",
      "description": "APIs related to integrating deployments data with Jira Software. These APIs\nare available to Atlassian Connect apps. To use these APIs you must\nhave the Deployment module see https://developer.atlassian.com/cloud/jira/software/modules/deployment/\nin your app's descriptor. They are also related to integrating Jira\nSoftware Cloud with on-premises tools using\nOAuth 2.0 credentials, see https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/.\n"
    },
    {
      "name": "Builds",
      "description": "APIs related to integrating builds data with Jira Software. These APIs\nare available to Atlassian Connect apps. To use these APIs you must\nhave the Build module see https://developer.atlassian.com/cloud/jira/software/modules/build/\nin your app's descriptor. They are also related to integrating Jira\nSoftware Cloud with on-premises tools using\nOAuth 2.0 credentials, see https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/.\n"
    },
    {
      "name": "Remote Links",
      "description": "APIs related to integrating Remote Links data with Jira Software. These APIs are available to Atlassian Connect\napps. To use these APIs you must have the Remote Link module in your app's descriptor. Read more about Jira Software modules [here](https://developer.atlassian.com/cloud/jira/software/about-jira-modules/).\n\n# Module\n\nThe Remote Link module allows third-party providers to add a generic link through a public REST API and associate it with Jira issues or services.\n\nSupplied remote link information will be presented in the right sidebar of the new Jira issue view under Releases.\n\nThis module also provides actions, which allows users to perform an action on the remote link.\n\nNote that the module key and name are not private and should therefore not contain any sensitive or personally identifiable information.\n\n## Example Module\n\nAn example can also be found at [jira-data-provider-sample-addon](https://bitbucket.org/atlassianlabs/jira-data-provider-sample-addon/src/master/), which has an `atlassian-connect.json`.\n\n```\n{\n  \"modules\": {\n    \"jiraRemoteLinkInfoProvider\": {\n      \"homeUrl\": \"https://my-remotelink-provider.com\",\n      \"logoUrl\": \"https://my-remotelink-provider.com/images/logo.svg\",\n      \"documentationUrl\": \"https://my-remotelink-provider.com/docs/jira-integration\",\n      \"actions\": [\n        {\n          \"actionId\": \"action-1\",\n          \"actionLabel\": {\n            \"value\": {\n              \"value\": \"Acknowledge\"\n            }\n          },\n          \"templateUrl\": \"https://my-remotelink-provider.com/ack/{ack-id}\"\n        }\n      ],\n      \"name\": {\n        \"value\": \"My Remote Link Provider\"\n      },\n      \"key\": \"remotelink-integration\"\n    }\n  }\n}\n```\n\n### Properties\n\n| Property         | type          | Description                                                                                                                                     | Required |\n|------------------|---------------|-------------------------------------------------------------------------------------------------------------------------------------------------|----------|\n| key              | string        | A key to identify this module.  Must match `^[a-zA-Z0-9-]+$` pattern, with a max length of 100                                                  | Yes      |\n| name             | object (i18N) | A human readable name. This object supports  [internationalization](https://developer.atlassian.com/cloud/jira/software/internationalization/). | Yes      |\n| homeUrl          | string        | URL to the provider’s homepage                                                                                                                  | Yes      |\n| logoUrl          | string        | Optional URL to the provider’s logo, which will be displayed in the UI                                                                          |          |\n| documentationUrl | string        | Optional URL to documentation about the provider’s Jira integration                                                                             |          |\n| actions          | object        | Optional actions that can be performed by Jira users on the remote link\n\n### Actions object\n\n| Property    | type   | Description                                                                                                                                                                                                                                  | Required |\n|-------------|--------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|\n| actionId    | string | A key to identify a specific action. Used for associating a specific Remote link to an action of this ID.  <br> The actionId of an action must be unique across all actions.                                                                     | Yes      |\n| actionLabel | object | The actionLabel of an Action is shown visibly to the User alongside the Remote Link.                                                                                                                                                         | Yes      |\n| templateUrl | string | The templateUrl of an Action is a template where strings can be substituted into the URL for a specific Remote Link. <br>  Strings used in the templateUrl must be passed in via an attribute map when associating an action with a remote link. | Yes      |\n\n### ActionLabel Object\n\n| Property | type          | Description                                                                                                                                         | Required |\n|----------|---------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|----------|\n| value    | object (i18n) | The label shown on the UI. This object supports  [internationalization](https://developer.atlassian.com/cloud/jira/software/internationalization/). | Yes      |\n"
    }
  ],
  "paths": {
    "/agile/1.0/backlog/issue": {
      "post": {
        "tags": [
          "Backlog"
        ],
        "summary": "Move issues to backlog",
        "description": "Move issues to the backlog.\n <br />\n This operation is equivalent to remove future and active sprints from a given set of issues.\n At most 50 issues may be moved at once. ",
        "operationId": "moveIssuesToBacklog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"]}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues."
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/backlog/{boardId}/issue": {
      "post": {
        "tags": [
          "Backlog"
        ],
        "summary": "Move issues to backlog for board",
        "description": "Move issues to the backlog of a particular board (if they are already on that board).\n <br />\n This operation is equivalent to remove future and active sprints from a given set of issues if the board has sprints\n If the board does not have sprints this will put the issues back into the backlog from the board.\n At most 50 issues may be moved at once. ",
        "operationId": "moveIssuesToBacklogForBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rankBeforeIssue": {
                    "type": "string"
                  },
                  "rankAfterIssue": {
                    "type": "string"
                  },
                  "rankCustomFieldId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"],\"rankBeforeIssue\":\"PR-4\",\"rankCustomFieldId\":10521}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "207": {
            "description": "Returns the list of issue with status of rank operation.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"entries\":[{\"issueId\":10000,\"issueKey\":\"PR-1\",\"status\":200},{\"issueId\":10001,\"issueKey\":\"PR-2\",\"status\":200},{\"issueId\":10002,\"issueKey\":\"PR-3\",\"status\":503,\"errors\":[\"JIRA Agile cannot execute the rank operation at this time. Please try again later.\"]}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues."
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/board": {
      "get": {
        "tags": [
          "boards",
          "Board"
        ],
        "summary": "Get all boards",
        "description": "Returns all boards. This only includes boards that the user has permission to view. ",
        "operationId": "getAllBoards",
        "parameters": [
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of boards to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filters results to boards of the specified types. Valid values: scrum, kanban, simple.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filters results to boards that match or partially match the specified name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectKeyOrId",
            "in": "query",
            "description": "Filters results to boards that are relevant to a project. Relevance means that the jql filter defined in board contains a reference to a project.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountIdLocation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectLocation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includePrivate",
            "in": "query",
            "description": "Appends private boards to the end of the list. The name and type fields are excluded for security reasons.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "negateLocationFiltering",
            "in": "query",
            "description": "If set to true, negate filters used for querying by location. By default false.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordering of the results by a given field. If not provided, values will not be sorted. Valid values: name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "List of fields to expand for each board. Valid values: admins, permissions.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Filters results to boards that are relevant to a filter. Not supported for next-gen boards.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested boards, at the specified page of the results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "startAt": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "isLast": {
                      "type": "boolean"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "self": {
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "admins": {
                            "type": "object",
                            "properties": {
                              "users": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                                      "readOnly": true
                                    },
                                    "self": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "The URL of the user.",
                                      "readOnly": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                                      "readOnly": true
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                                      "readOnly": true
                                    },
                                    "active": {
                                      "type": "boolean",
                                      "description": "Whether the user is active.",
                                      "readOnly": true
                                    },
                                    "accountId": {
                                      "type": "string",
                                      "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                                    },
                                    "avatarUrls": {
                                      "type": "object",
                                      "description": "The avatars of the user.",
                                      "readOnly": true,
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "24x24": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "The URL of the user's 24x24 pixel avatar.",
                                              "readOnly": true
                                            },
                                            "16x16": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "The URL of the user's 16x16 pixel avatar.",
                                              "readOnly": true
                                            },
                                            "32x32": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "The URL of the user's 32x32 pixel avatar.",
                                              "readOnly": true
                                            },
                                            "48x48": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "The URL of the user's 48x48 pixel avatar.",
                                              "readOnly": true
                                            }
                                          },
                                          "description": "Details of a user's avatars."
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
                                }
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "self": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "location": {
                            "type": "object",
                            "properties": {
                              "projectId": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "userId": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "userAccountId": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "projectName": {
                                "type": "string"
                              },
                              "projectKey": {
                                "type": "string"
                              },
                              "projectTypeKey": {
                                "type": "string"
                              },
                              "avatarURI": {
                                "type": "string",
                                "format": "uri"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "canEdit": {
                            "type": "boolean"
                          },
                          "isPrivate": {
                            "type": "boolean"
                          },
                          "favourite": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":84,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\"},{\"id\":92,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92\",\"name\":\"kanban board\",\"type\":\"kanban\"}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not have valid license."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Board"
        ],
        "summary": "Create board",
        "description": "Creates a new board. Board name, type and filter ID is required.\n <ul>\n <li><code>name</code> - Must be less than 255 characters.</li>\n <li><code>type</code> - Valid values: scrum, kanban</li>\n <li><code>filterId</code> - ID of a filter that the user has permissions to view. Note, if the user does not have the 'Create shared objects'\n permission and tries to create a shared board, a private board will be created instead (remember that board sharing depends on the filter sharing).</li>\n <li><code>location</code> - The container that the board will be located in. <code>location</code> must include the <code>type</code> property (Valid values: project, user).\n If choosing 'project', then a project must be specified by a <code>projectKeyOrId</code> property in <code>location</code>.\n If choosing 'user', the current user is chosen by default. The <code>projectKeyOrId</code> property should not be provided.\n </li>\n </ul>\n <p>\n Note:\n <ul>\n <li>\n If you want to create a new project with an associated board, use the <a href=\"https://docs.atlassian.com/jira/REST/latest\">Jira platform REST API</a>.\n For more information, see the <a href=\"#api-rest-api-<ver>-project-post\">Create project</a> method.\n The <code>projectTypeKey</code> for software boards must be 'software' and the <code>projectTemplateKey</code> must be either\n <code>com.pyxis.greenhopper.jira:gh-kanban-template</code> or <code>com.pyxis.greenhopper.jira:gh-scrum-template</code>.\n </li>\n <li>\n You can create a filter using the <a href=\"https://docs.atlassian.com/jira/REST/latest\">Jira REST API</a>.\n For more information, see the <a href=\"#api-rest-api-<ver>-filter-post\">Create filter</a> method.\n </li>\n <li>\n If you do not ORDER BY the Rank field for the filter of your board, you will not be able to reorder issues on the board.\n </li>\n </ul> ",
        "operationId": "createBoard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "filterId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "projectKeyOrId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"name\":\"scrum board\",\"type\":\"scrum\",\"filterId\":10040,\"location\":{\"type\":\"project\",\"projectKeyOrId\":\"10000\"}}"
          }
        },
        "responses": {
          "201": {
            "description": "Returns the created board.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "self": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "admins": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                                "readOnly": true
                              },
                              "self": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the user.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                                "readOnly": true
                              },
                              "displayName": {
                                "type": "string",
                                "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                                "readOnly": true
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the user is active.",
                                "readOnly": true
                              },
                              "accountId": {
                                "type": "string",
                                "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                              },
                              "avatarUrls": {
                                "type": "object",
                                "description": "The avatars of the user.",
                                "readOnly": true,
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "24x24": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 24x24 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "16x16": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 16x16 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "32x32": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 32x32 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "48x48": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 48x48 pixel avatar.",
                                        "readOnly": true
                                      }
                                    },
                                    "description": "Details of a user's avatars."
                                  }
                                ]
                              }
                            },
                            "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
                          }
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "self": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "projectId": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "userId": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "userAccountId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "projectName": {
                          "type": "string"
                        },
                        "projectKey": {
                          "type": "string"
                        },
                        "projectTypeKey": {
                          "type": "string"
                        },
                        "avatarURI": {
                          "type": "string",
                          "format": "uri"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "canEdit": {
                      "type": "boolean"
                    },
                    "isPrivate": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"id\":84,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/board/filter/{filterId}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board by filter id",
        "description": "Returns any boards which use the provided filter id.  This method can be executed by users without a valid\n software license in order to find which boards are using a particular filter. ",
        "operationId": "getBoardByFilterId",
        "parameters": [
          {
            "name": "filterId",
            "in": "path",
            "description": "Filters results to boards that are relevant to a filter. Not supported for next-gen boards.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned boards. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of boards to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested boards, at the specified page of the results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "startAt": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "isLast": {
                      "type": "boolean"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "self": {
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"id\":84,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board",
        "description": "Returns the board for the given board ID. This board will only be returned if the user has permission to view it.\n Admins without the view permission will see the board as a private one, so will see only a subset of the board's\n data (board location for instance). ",
        "operationId": "getBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the requested board.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested board.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "self": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "admins": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                                "readOnly": true
                              },
                              "self": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the user.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                                "readOnly": true
                              },
                              "displayName": {
                                "type": "string",
                                "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                                "readOnly": true
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the user is active.",
                                "readOnly": true
                              },
                              "accountId": {
                                "type": "string",
                                "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                              },
                              "avatarUrls": {
                                "type": "object",
                                "description": "The avatars of the user.",
                                "readOnly": true,
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "24x24": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 24x24 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "16x16": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 16x16 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "32x32": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 32x32 pixel avatar.",
                                        "readOnly": true
                                      },
                                      "48x48": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The URL of the user's 48x48 pixel avatar.",
                                        "readOnly": true
                                      }
                                    },
                                    "description": "Details of a user's avatars."
                                  }
                                ]
                              }
                            },
                            "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
                          }
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "self": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          }
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "projectId": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "userId": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "userAccountId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "projectName": {
                          "type": "string"
                        },
                        "projectKey": {
                          "type": "string"
                        },
                        "projectTypeKey": {
                          "type": "string"
                        },
                        "avatarURI": {
                          "type": "string",
                          "format": "uri"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "canEdit": {
                      "type": "boolean"
                    },
                    "isPrivate": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"id\":84,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/84\",\"name\":\"scrum board\",\"type\":\"scrum\",\"location\":{\"projectId\":10040,\"userId\":10040,\"userAccountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Example Project\",\"projectName\":\"Example Project\",\"projectKey\":\"Example Project Key\",\"projectTypeKey\":\"KEY\",\"name\":\"Example Project\"}}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "tags": [
          "Board"
        ],
        "summary": "Delete board",
        "description": "Deletes the board. Admin without the view permission can still remove the board. ",
        "operationId": "deleteBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "ID of the board to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the board has been successfully removed."
          },
          "403": {
            "description": "Returned if the user does not a have valid license, or when the user does not have the permission to delete the board, or when the user tried to delete a next-gen board. The user has to be a Jira Administrator or a board administrator to remove the board. Next-gen boards cannot be deleted, because next-gen software projects must have a board."
          },
          "404": {
            "description": "Returned if a board with the given ID does not exist or the user does not have the permission to view the board."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/agile/1.0/board/{boardId}/backlog": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get issues for backlog",
        "description": "Returns all issues from the board's backlog, for the given board ID. This only includes issues that the user has permission to view.\n The backlog contains incomplete issues that are not assigned to any future or active sprint.\n Note, if the user does not have permission to view the board, no issues will be returned at all.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank. ",
        "operationId": "getIssuesForBacklog",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that has the backlog containing the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "This parameter is currently not used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsBean"
                },
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/configuration": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get configuration",
        "description": "Get the board configuration.\n The response contains the following fields:\n <ul>\n <li><code>id</code> - ID of the board.</li>\n <li><code>name</code> - Name of the board.</li>\n <li><code>filter</code> - Reference to the filter used by the given board.</li>\n <li><code>location</code> - Reference to the container that the board is located in.\n Includes the container type (Valid values: project, user).\n </li>\n <li><code>subQuery</code> (Kanban only) - JQL subquery used by the given board.</li>\n <li><code>columnConfig</code> - The column configuration lists the columns for the board, in the order defined in the column configuration.\n For each column, it shows the issue status mapping\n as well as the constraint type (Valid values: none, issueCount, issueCountExclSubs) for the min/max number of issues.\n Note, the last column with statuses mapped to it is treated as the \"Done\" column,\n which means that issues in that column will be marked as already completed.</li>\n <li><code>estimation</code> (Scrum only) - Contains information about type of estimation used for the board. Valid values: none, issueCount, field.\n If the estimation type is \"field\", the ID and display name of the field used for estimation is also returned.\n Note, estimates for an issue can be updated by a PUT /rest/api/~ver~/issue/{issueIdOrKey} request, however the fields must be on the screen.\n \"timeoriginalestimate\" field will never be on the screen, so in order to update it \"originalEstimate\" in \"timetracking\" field should be updated.\n </li>\n <li><code>ranking</code> - Contains information about custom field used for ranking in the given board.</li>\n </ul> ",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board for which configuration is requested.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the configuration of the board for given boardId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "self": {
                      "type": "string",
                      "format": "uri"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "projectKeyOrId": {
                          "type": "string"
                        }
                      }
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "self": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "subQuery": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "type": "string"
                        }
                      }
                    },
                    "columnConfig": {
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "statuses": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "self": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  }
                                }
                              },
                              "min": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "max": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          }
                        },
                        "constraintType": {
                          "type": "string"
                        }
                      }
                    },
                    "estimation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "field": {
                          "type": "object",
                          "properties": {
                            "fieldId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ranking": {
                      "type": "object",
                      "properties": {
                        "rankCustomFieldId": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"id\":10000,\"name\":\"Board\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/84/config\",\"location\":{\"type\":\"project\",\"key\":\"PROJ\",\"id\":\"10010\",\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/10010\",\"name\":\"name\"},\"filter\":{\"id\":\"1001\",\"self\":\"https://your-domain.atlassian.net/filter/1001\"},\"columnConfig\":{\"columns\":[{\"name\":\"To Do\",\"statuses\":[{\"id\":\"1\",\"self\":\"https://your-domain.atlassian.net/status/1\"},{\"id\":\"4\",\"self\":\"https://your-domain.atlassian.net/status/4\"}]},{\"name\":\"In progress\",\"statuses\":[{\"id\":\"3\",\"self\":\"https://your-domain.atlassian.net/status/3\"}],\"min\":2,\"max\":4},{\"name\":\"Done\",\"statuses\":[{\"id\":\"5\",\"self\":\"https://your-domain.atlassian.net/status/5\"}]}],\"constraintType\":\"issueCount\"},\"estimation\":{\"type\":\"field\",\"field\":{\"fieldId\":\"customfield_10002\",\"displayName\":\"Story Points\"}},\"ranking\":{\"rankCustomFieldId\":10020}}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user cannot view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/epic": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get epics",
        "description": "Returns all epics from the board, for the given board ID. This only includes epics that the user has permission to view.\n Note, if the user does not have permission to view the board, no epics will be returned at all. ",
        "operationId": "getEpics",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested epics.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned epics. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of epics to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 50
            }
          },
          {
            "name": "done",
            "in": "query",
            "description": "Filters results to epics that are either done or not done. Valid values: true, false.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested epics, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/13\",\"name\":\"epic 2\",\"summary\":\"epic 2 summary\",\"color\":{\"key\":\"color_2\"},\"done\":false}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/epic/none/issue": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get issues without epic for board",
        "description": "Returns all issues that do not belong to any epic on a board, for a given board ID.\n This only includes issues that the user has permission to view.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank. ",
        "operationId": "getIssuesWithoutEpicForBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/epic/{epicId}/issue": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board issues for epic",
        "description": "Returns all issues that belong to an epic on the board, for the given epic ID and the board ID.\n This only includes issues that the user has permission to view.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank. ",
        "operationId": "getBoardIssuesForEpic",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "epicId",
            "in": "path",
            "description": "The ID of the epic that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/features": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get features for board",
        "description": " ",
        "operationId": "getFeaturesForBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "boardFeature": {
                            "type": "string",
                            "enum": [
                              "SIMPLE_ROADMAP",
                              "BACKLOG",
                              "SPRINTS",
                              "DEVTOOLS",
                              "REPORTS",
                              "ESTIMATION",
                              "PAGES",
                              "CODE",
                              "RELEASES",
                              "DEPLOYMENTS",
                              "ISSUE_NAVIGATOR",
                              "ON_CALL_SCHEDULE",
                              "BOARD"
                            ]
                          },
                          "boardId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "ENABLED",
                              "DISABLED",
                              "COMING_SOON"
                            ]
                          },
                          "localisedName": {
                            "type": "string"
                          },
                          "localisedDescription": {
                            "type": "string"
                          },
                          "learnMoreLink": {
                            "type": "string"
                          },
                          "imageUri": {
                            "type": "string"
                          },
                          "toggleLocked": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "tags": [
          "Board"
        ],
        "summary": "Toggle features",
        "description": " ",
        "operationId": "toggleFeatures",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "boardId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "feature": {
                    "type": "string"
                  },
                  "enabling": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "boardFeature": {
                            "type": "string",
                            "enum": [
                              "SIMPLE_ROADMAP",
                              "BACKLOG",
                              "SPRINTS",
                              "DEVTOOLS",
                              "REPORTS",
                              "ESTIMATION",
                              "PAGES",
                              "CODE",
                              "RELEASES",
                              "DEPLOYMENTS",
                              "ISSUE_NAVIGATOR",
                              "ON_CALL_SCHEDULE",
                              "BOARD"
                            ]
                          },
                          "boardId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "ENABLED",
                              "DISABLED",
                              "COMING_SOON"
                            ]
                          },
                          "localisedName": {
                            "type": "string"
                          },
                          "localisedDescription": {
                            "type": "string"
                          },
                          "learnMoreLink": {
                            "type": "string"
                          },
                          "imageUri": {
                            "type": "string"
                          },
                          "toggleLocked": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/board/{boardId}/issue": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get issues for board",
        "description": "Returns all issues from a board, for a given board ID. This only includes issues that the user has permission to view.\n An issue belongs to the board if its status is mapped to the board's column.\n Epic issues do not belongs to the scrum boards.\n Note, if the user does not have permission to view the board, no issues will be returned at all.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank. ",
        "operationId": "getIssuesForBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "This parameter is currently not used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResultsBean"
                },
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Board"
        ],
        "summary": "Move issues to board",
        "description": "Move issues from the backog to the board (if they are already in the backlog of that board).\n <br />\n This operation either moves an issue(s) onto a board from the backlog (by adding it to the issueList for the board)\n Or transitions the issue(s) to the first column for a kanban board with backlog.\n At most 50 issues may be moved at once. ",
        "operationId": "moveIssuesToBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rankBeforeIssue": {
                    "type": "string"
                  },
                  "rankAfterIssue": {
                    "type": "string"
                  },
                  "rankCustomFieldId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"],\"rankBeforeIssue\":\"PR-4\",\"rankCustomFieldId\":10521}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "207": {
            "description": "Returns the list of issue with status of rank operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "issueId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "issueKey": {
                            "type": "string"
                          },
                          "status": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"entries\":[{\"issueId\":10000,\"issueKey\":\"PR-1\",\"status\":200},{\"issueId\":10001,\"issueKey\":\"PR-2\",\"status\":200},{\"issueId\":10002,\"issueKey\":\"PR-3\",\"status\":503,\"errors\":[\"JIRA Agile cannot execute the rank operation at this time. Please try again later.\"]}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to assign issues."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/board/{boardId}/project": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get projects",
        "description": "Returns all projects that are associated with the board, for the given board ID.\n If the user does not have permission to view the board, no projects will be returned at all.\n Returned projects are ordered by the name.\n </p>\n A project is associated with a board if the board filter contains reference the project\n or there is an issue from the project that belongs to the board.\n </p>\n The board filter contains reference the project only if JQL query guarantees that returned issues\n will be returned from the project set defined in JQL.\n For instance the query <code>project in (ABC, BCD) AND reporter = admin</code> have reference to ABC and BCD projects\n but query <code>project in (ABC, BCD) OR reporter = admin</code> doesn't have reference to any project.\n </p>\n An issue belongs to the board if its status is mapped to the board's column.\n Epic issues do not belongs to the scrum boards.\n </p> ",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains returned projects.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned projects. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of projects to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the board's projects, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":10,\"startAt\":0,\"total\":2,\"isLast\":true,\"values\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/ABC\",\"id\":\"10001\",\"key\":\"ABC\",\"name\":\"Alphabetical\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to access it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/project/full": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get projects full",
        "description": "Returns all projects that are statically associated with the board, for the given board ID.\n Returned projects are ordered by the name.\n </p>\n A project is associated with a board if the board filter contains reference the project.\n </p>\n The board filter contains reference the project only if JQL query guarantees that returned issues\n will be returned from the project set defined in JQL.\n For instance the query <code>project in (ABC, BCD) AND reporter = admin</code> have reference to ABC and BCD projects\n but query <code>project in (ABC, BCD) OR reporter = admin</code> doesn't have reference to any project.\n </p> ",
        "operationId": "getProjectsFull",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains returned projects.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the board's projects, at the specified page of the results."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to access it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/properties": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board property keys",
        "description": "Returns the keys of all properties for the board identified by the id.\n The user who retrieves the property keys is required to have permissions to view the board. ",
        "operationId": "getBoardPropertyKeys",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "the ID of the board from which property keys will be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the board with given id exists.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "com.atlassian.jira.rest.v2.entity.property.EntityPropertyResourceExamples#GET_PROPERTIES_KEYS_RESPONSE_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/properties/{propertyKey}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board property",
        "description": "Returns the value of the property with a given key from the board identified by the provided id.\n The user who retrieves the property is required to have permissions to view the board. ",
        "operationId": "getBoardProperty",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "the ID of the board from which the property will be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the property to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the board exists and the property was found.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "com.atlassian.jira.rest.v2.entity.property.EntityPropertyResourceExamples#GET_PROPERTY_RESPONSE_200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "tags": [
          "Board"
        ],
        "summary": "Set board property",
        "description": "Sets the value of the specified board's property.\n <p>\n     You can use this resource to store a custom data against the board identified by the id. The user\n     who stores the data is required to have permissions to modify the board.\n </p> ",
        "operationId": "setBoardProperty",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "the ID of the board on which the property will be set.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the board's property. The maximum length of the key is 255 bytes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the board property is successfully updated."
          },
          "201": {
            "description": "Returned if the board property is successfully created."
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "404": {
            "description": "Returned if the board with given id does not exist or the user doesn't have permissions to see it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      },
      "delete": {
        "tags": [
          "Board"
        ],
        "summary": "Delete board property",
        "description": "Removes the property from the board identified by the id. Ths user removing the property is required\n to have permissions to modify the board. ",
        "operationId": "deleteBoardProperty",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "the id of the board from which the property will be removed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the property to remove.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the board property was removed successfully."
          },
          "400": {
            "description": "Returned if the boardId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "404": {
            "description": "Returned if the board with given id does not exist, or if the property with given key is not found, or the user doesn't have permissions to see it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/agile/1.0/board/{boardId}/quickfilter": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get all quick filters",
        "description": "Returns all quick filters from a board, for a given board ID. ",
        "operationId": "getAllQuickFilters",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested quick filters.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned quick filters. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of sprints to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested quick filters, at the specified page of the results. Quick filters will be ordered first by position.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maxResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "startAt": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "isLast": {
                      "type": "boolean"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "boardId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "jql": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "position": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0},{\"id\":2,\"boardId\":1,\"name\":\"Tasks\",\"jql\":\"issueType = task\",\"description\":\"Issues of type task\",\"position\":0}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/quickfilter/{quickFilterId}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get quick filter",
        "description": "Returns the quick filter for a given quick filter ID. The quick filter will only be returned if the user can view the board\n that the quick filter belongs to. ",
        "operationId": "getQuickFilter",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "quickFilterId",
            "in": "path",
            "description": "The ID of the requested quick filter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested quick filter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "boardId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "jql": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "position": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": "{\"id\":1,\"boardId\":1,\"name\":\"Bugs\",\"jql\":\"issueType = bug\",\"description\":\"Issues of type bug\",\"position\":0}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board with given id does not exist or if the quick filter with given id is not found or the user doesn't have permissions to see it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/reports": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get reports for board",
        "description": " ",
        "operationId": "getReportsForBoard",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/sprint": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get all sprints",
        "description": "Returns all sprints from a board, for a given board ID. This only includes sprints that the user has permission to view. ",
        "operationId": "getAllSprints",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested sprints.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned sprints. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of sprints to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 50
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filters results to sprints in specified states. Valid values: future, active, closed. You can define multiple states separated by commas, e.g. state=active,closed",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested sprints, at the specified page of the results. Sprints will be ordered first by state (i.e. closed, active, future) then by their position in the backlog.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"},{\"id\":72,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/73\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/sprint/{sprintId}/issue": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get board issues for sprint",
        "description": "Get all issues you have access to that belong to the sprint from the board.\n Issue returned from this resource contains additional fields like: sprint, closedSprints, flagged and epic.\n Issues are returned ordered by rank. JQL order has higher priority than default rank. ",
        "operationId": "getBoardIssuesForSprint",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint that contains requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/board/{boardId}/version": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get all versions",
        "description": "Returns all versions from a board, for a given board ID. This only includes versions that the user has permission to view.\n Note, if the user does not have permission to view the board, no versions will be returned at all.\n Returned versions are ordered by the name of the project from which they belong and then by sequence defined by user. ",
        "operationId": "getAllVersions",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "The ID of the board that contains the requested versions.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned versions. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of versions to return per page. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 50
            }
          },
          {
            "name": "released",
            "in": "query",
            "description": "Filters results to versions that are either released or unreleased. Valid values: true, false.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested versions, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"maxResults\":2,\"startAt\":1,\"total\":5,\"isLast\":false,\"values\":[{\"self\":\"https://your-domain.atlassian.net/version/10000\",\"id\":10000,\"projectId\":10000,\"name\":\"Version 1\",\"description\":\"A first version\",\"archived\":false,\"released\":true,\"releaseDate\":\"2015-04-20T01:02:00.000+10:00\"},{\"self\":\"https://your-domain.atlassian.net/version/10010\",\"id\":10010,\"projectId\":10000,\"name\":\"Next Version\",\"description\":\"Minor Bugfix version\",\"archived\":false,\"released\":false}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/epic/none/issue": {
      "get": {
        "tags": [
          "Epic"
        ],
        "summary": "Get issues without epic",
        "description": "Returns all issues that do not belong to any epic.\n This only includes issues that the user has permission to view.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank.\n\n <b>Note:</b> If you are querying a next-gen project, do not use this operation.\n Instead, search for issues that don't belong to an epic by using the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-search-get\">Search for issues using JQL</a>\n operation in the Jira platform REST API. Build your JQL query using the <code>parent is empty</code> clause.\n For more information on the <code>parent</code> JQL field, see <a href=\"https://confluence.atlassian.com/x/dAiiLQ#Advancedsearching-fieldsreference-Parent\">Advanced searching</a>. ",
        "operationId": "getIssuesWithoutEpic",
        "parameters": [
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query, it will override the default order of the returned issues.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Epic"
        ],
        "summary": "Remove issues from epic",
        "description": "Removes issues from epics.\n The user needs to have the edit issue permission for all issue they want to remove from epics.\n The maximum number of issues that can be moved in one operation is 50.\n\n <b>Note:</b> This operation does not work for epics in next-gen projects.\n Instead, update the issue using `{ fields: { parent: {} } }` ",
        "operationId": "removeIssuesFromEpic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"]}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to assign issues."
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/epic/search": {
      "get": {
        "summary": "Search epics",
        "description": "Returns searched epics according to provided parameters. ",
        "operationId": "searchEpics",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of returned results.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "excludeDone",
            "in": "query",
            "description": "Flag that will exclude done epics from the results.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Text query by which the results should be filtered.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectKey",
            "in": "query",
            "description": "Key of a project by which epics will be prioritised (on the top) in the results.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the search was successful."
          },
          "401": {
            "description": "Returned when the user is not logged in."
          },
          "403": {
            "description": "Returned when the user does not have a valid license."
          }
        },
        "deprecated": false,
        "x-experimental": true,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/epic/{epicIdOrKey}": {
      "get": {
        "tags": [
          "Epic"
        ],
        "summary": "Get epic",
        "description": "Returns the epic for a given epic ID. This epic will only be returned if the user has permission to view it.\n\n <b>Note:</b> This operation does not work for epics in next-gen projects. ",
        "operationId": "getEpic",
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "description": "The id or key of the requested epic.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested epic.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Epic"
        ],
        "summary": "Partially update epic",
        "description": "Performs a partial update of the epic.\n A partial update means that fields not present in the request JSON will not be updated.\n Valid values for color are <code>color_1</code> to <code>color_9</code>.\n\n <b>Note:</b> This operation does not work for epics in next-gen projects. ",
        "operationId": "partiallyUpdateEpic",
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "description": "The id or key of the epic to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "color": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "enum": [
                          "color_1",
                          "color_2",
                          "color_3",
                          "color_4",
                          "color_5",
                          "color_6",
                          "color_7",
                          "color_8",
                          "color_9",
                          "color_10",
                          "color_11",
                          "color_12",
                          "color_13",
                          "color_14"
                        ]
                      }
                    }
                  },
                  "done": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"name\":\"epic 2\",\"summary\":\"epic 2 summary\",\"color\":{\"key\":\"color_6\"},\"done\":true}"
          }
        },
        "responses": {
          "200": {
            "description": "Updated epic",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or edit issue permission."
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/epic/{epicIdOrKey}/issue": {
      "get": {
        "tags": [
          "Epic"
        ],
        "summary": "Get issues for epic",
        "description": "Returns all issues that belong to the epic, for the given epic ID.\n This only includes issues that the user has permission to view.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic.\n By default, the returned issues are ordered by rank.\n\n <b>Note:</b> If you are querying a next-gen project, do not use this operation.\n Instead, search for issues that belong to an epic by using the\n <a href=\"https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-search-get\">Search for issues using JQL</a>\n operation in the Jira platform REST API. Build your JQL query using the <code>parent</code> clause.\n For more information on the <code>parent</code> JQL field, see <a href=\"https://confluence.atlassian.com/x/dAiiLQ#Advancedsearching-fieldsreference-Parent\">Advanced searching</a>. ",
        "operationId": "getIssuesForEpic",
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "description": "The id or key of the epic that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. Default: 50. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\":50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Epic"
        ],
        "summary": "Move issues to epic",
        "description": "Moves issues to an epic, for a given epic id.\n Issues can be only in a single epic at the same time.\n That means that already assigned issues to an epic, will not be assigned to the previous epic anymore.\n The user needs to have the edit issue permission for all issue they want to move and to the epic.\n The maximum number of issues that can be moved in one operation is 50.\n\n <b>Note:</b> This operation does not work for epics in next-gen projects. ",
        "operationId": "moveIssuesToEpic",
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "description": "The id or key of the epic that you want to assign issues to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"]}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have edit issue permission for all issues to assign or for the epic."
          },
          "404": {
            "description": "Returned if the epic does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/epic/{epicIdOrKey}/rank": {
      "put": {
        "tags": [
          "Epic"
        ],
        "summary": "Rank epics",
        "description": "Moves (ranks) an epic before or after a given epic.\n\n <p>\n If rankCustomFieldId is not defined, the default rank field will be used.\n </p>\n\n <b>Note:</b> This operation does not work for epics in next-gen projects. ",
        "operationId": "rankEpics",
        "parameters": [
          {
            "name": "epicIdOrKey",
            "in": "path",
            "description": "The id or key of the epic to rank.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rankBeforeEpic": {
                    "type": "string"
                  },
                  "rankAfterEpic": {
                    "type": "string"
                  },
                  "rankCustomFieldId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "description": "bean which contains the information where the given epic should be ranked.",
          "required": true,
          "x-examples": {
            "application/json": "{\"rankBeforeEpic\":\"10000\",\"rankCustomFieldId\":10521}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to rank. To rank issues user have to have schedule issue permission for epics that they want to rank."
          },
          "404": {
            "description": "Returned when the given epics in the path parameter or the request body do not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/issue/rank": {
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Rank issues",
        "description": "Moves (ranks) issues before or after a given issue. At most 50 issues may be ranked at once.\n\n <p>\n This operation may fail for some issues, although this will be rare.\n In that case the 207 status code is returned for the whole response and\n detailed information regarding each issue is available in the response body.\n </p>\n <p>\n If rankCustomFieldId is not defined, the default rank field will be used.\n </p> ",
        "operationId": "rankIssues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rankBeforeIssue": {
                    "type": "string"
                  },
                  "rankAfterIssue": {
                    "type": "string"
                  },
                  "rankCustomFieldId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "description": "bean which contains list of issues to rank and information where it should be ranked.",
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"],\"rankBeforeIssue\":\"PR-4\",\"rankCustomFieldId\":10521}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "207": {
            "description": "Returns the list of issue with status of rank operation.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"entries\":[{\"issueId\":10000,\"issueKey\":\"PR-1\",\"status\":200},{\"issueId\":10001,\"issueKey\":\"PR-2\",\"status\":200},{\"issueId\":10002,\"issueKey\":\"PR-3\",\"status\":503,\"errors\":[\"JIRA Agile cannot execute the rank operation at this time. Please try again later.\"]}]}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to rank. To rank issues user has to have schedule issue permission for issues that they want to rank."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/issue/{issueIdOrKey}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get issue",
        "description": "Returns a single issue, for a given issue ID or issue key.\n Issues returned from this resource include Agile fields, like sprint, closedSprints, flagged, and epic. ",
        "operationId": "getIssue",
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "description": "The ID or key of the requested issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateHistory",
            "in": "query",
            "description": "A boolean indicating whether the issue retrieved by this method should be added to the current user's issue history",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issue.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned in these cases:\n <ul>\n <li>the issue does not exist</li>\n <li>the user does not have permission to view issue</li>\n </ul>"
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/issue/{issueIdOrKey}/estimation": {
      "get": {
        "tags": [
          "Issue"
        ],
        "summary": "Get issue estimation for board",
        "description": "Returns the estimation of the issue and a fieldId of the field that is used for it.\n <code>boardId</code> param is required. This param determines which field will be updated on a issue.\n <p>\n Original time internally stores and returns the estimation as a number of seconds.\n </p>\n <p>\n The field used for estimation on the given board can be obtained from <a href=\"#agile/1.0/board-getConfiguration\">board configuration resource</a>.\n More information about the field are returned by\n <a href=\"#api-rest-api-<ver>-issue-getEditIssueMeta\">edit meta resource</a>\n or <a href=\"#api-rest-api-<ver>-field-get\">field resource</a>.\n </p> ",
        "operationId": "getIssueEstimationForBoard",
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "description": "The ID or key of the requested issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "boardId",
            "in": "query",
            "description": "The ID of the board required to determine which field is used for estimation.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the estimation of the issue and a fieldId of the field that is used for it.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"fieldId\":\"customfield_12532\",\"value\":\"8.0\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the boardId was not provided, field does not exists or value was in wrong format."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to edit issue."
          },
          "404": {
            "description": "Returned in these cases:\n <ul>\n <li>the issue does not exist</li>\n <li>the user does not have permission to view issue</li>\n <li>the board does not exist</li>\n <li>the user does not have permission to view board</li>\n <li>the issue does not belong to the board</li>\n </ul>"
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "tags": [
          "Issue"
        ],
        "summary": "Estimate issue for board",
        "description": "Updates the estimation of the issue.\n boardId param is required. This param determines which field will be updated on a issue.\n <p>\n Note that this resource changes the estimation field of the issue regardless of appearance the field on the screen.\n </p>\n <p>\n Original time tracking estimation field accepts estimation in formats like \"1w\", \"2d\", \"3h\", \"20m\" or number which represent number of minutes.\n However, internally the field stores and returns the estimation as a number of seconds.\n </p>\n <p>\n The field used for estimation on the given board can be obtained from <a href=\"#agile/1.0/board-getConfiguration\">board configuration resource</a>.\n More information about the field are returned by\n <a href=\"#api-rest-api-<ver>-issue-issueIdOrKey-editmeta-get\">edit meta resource</a>\n or <a href=\"#api-rest-api-<ver>-field-get\">field resource</a>.\n </p> ",
        "operationId": "estimateIssueForBoard",
        "parameters": [
          {
            "name": "issueIdOrKey",
            "in": "path",
            "description": "The ID or key of the requested issue.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "boardId",
            "in": "query",
            "description": "The ID of the board required to determine which field is used for estimation.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "bean that contains value of a new estimation.",
          "required": true,
          "x-examples": {
            "application/json": "{\"value\":\"8.0\"}"
          }
        },
        "responses": {
          "200": {
            "description": "Returns the estimation of the issue and a fieldId of the field that is used for it.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"fieldId\":\"customfield_12532\",\"value\":\"8.0\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the boardId was not provided, field does not exists or value was in wrong format."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if user does not a have valid license or does not have permission to edit issue."
          },
          "404": {
            "description": "Returned in these cases:\n <ul>\n <li>the issue does not exist</li>\n <li>the user does not have permission to view issue</li>\n <li>the board does not exist</li>\n <li>the user does not have permission to view board</li>\n <li>the issue does not belong to the board</li>\n </ul>"
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/project/{projectIdOrKey}/features": {
      "get": {
        "summary": "Get features for project",
        "description": " ",
        "operationId": "getFeaturesForProject",
        "parameters": [
          {
            "name": "projectIdOrKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "boardFeature": {
                            "type": "string",
                            "enum": [
                              "SIMPLE_ROADMAP",
                              "BACKLOG",
                              "SPRINTS",
                              "DEVTOOLS",
                              "REPORTS",
                              "ESTIMATION",
                              "PAGES",
                              "CODE",
                              "RELEASES",
                              "DEPLOYMENTS",
                              "ISSUE_NAVIGATOR",
                              "ON_CALL_SCHEDULE",
                              "BOARD"
                            ]
                          },
                          "boardId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "ENABLED",
                              "DISABLED",
                              "COMING_SOON"
                            ]
                          },
                          "localisedName": {
                            "type": "string"
                          },
                          "localisedDescription": {
                            "type": "string"
                          },
                          "learnMoreLink": {
                            "type": "string"
                          },
                          "imageUri": {
                            "type": "string"
                          },
                          "toggleLocked": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/sprint": {
      "post": {
        "tags": [
          "Sprint"
        ],
        "summary": "Create sprint",
        "description": "Creates a future sprint. Sprint name and origin board id are required. Start date, end date, and goal are optional.\n\n <p>\n Note that the sprint name is trimmed. Also, when starting sprints from the UI, the \"endDate\" set through this\n call is ignored and instead the last sprint's duration is used to fill the form.\n </p> ",
        "operationId": "createSprint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "originBoardId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "goal": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
          }
        },
        "responses": {
          "201": {
            "description": "Created sprint",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"future\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the board does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/sprint/{sprintId}": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get sprint",
        "description": "Returns the sprint for a given sprint ID. The sprint will only be returned if the user can view the board\n that the sprint was created on, or view at least one of the issues in the sprint. ",
        "operationId": "getSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the requested sprint.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested sprint.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the sprint does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Sprint"
        ],
        "summary": "Partially update sprint",
        "description": "Performs a partial update of a sprint.\n A partial update means that fields not present in the request JSON will not be updated.\n <p>Notes:</p>\n <ul>\n <li>Sprints that are in a closed state cannot be updated.</li>\n <li>A sprint can be started by updating the state to 'active'. This requires the sprint to\n be in the 'future' state and have a startDate and endDate set.</li>\n <li>A sprint can be completed by updating the state to 'closed'. This action requires the sprint to be in the 'active' state.\n This sets the completeDate to the time of the request.</li>\n <li>Other changes to state are not allowed.</li>\n <li>The completeDate field cannot be updated manually.</li>\n </ul> ",
        "operationId": "partiallyUpdateSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "self": {
                    "type": "string",
                    "format": "uri"
                  },
                  "state": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "completeDate": {
                    "type": "string"
                  },
                  "originBoardId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "goal": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"name\":\"new name\"}"
          }
        },
        "responses": {
          "200": {
            "description": "Updated sprint",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the sprint does not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      },
      "put": {
        "tags": [
          "Sprint"
        ],
        "summary": "Update sprint",
        "description": "Performs a full update of a sprint.\n A full update means that the result will be exactly the same as the request body.\n Any fields not present in the request JSON will be set to null.\n <p>Notes:</p>\n <ul>\n <li>Sprints that are in a closed state cannot be updated.</li>\n <li>A sprint can be started by updating the state to 'active'. This requires the sprint to\n be in the 'future' state and have a startDate and endDate set.</li>\n <li>A sprint can be completed by updating the state to 'closed'. This action requires the sprint to be in the 'active' state.\n This sets the completeDate to the time of the request.</li>\n <li>Other changes to state are not allowed.</li>\n <li>The completeDate field cannot be updated manually.</li>\n </ul> ",
        "operationId": "updateSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "the ID of the sprint to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "self": {
                    "type": "string",
                    "format": "uri"
                  },
                  "state": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "completeDate": {
                    "type": "string"
                  },
                  "originBoardId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "goal": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:36:00.000+10:00\",\"endDate\":\"2015-04-16T14:01:00.000+10:00\",\"completeDate\":\"2015-04-20T11:11:28.008+10:00\",\"goal\":\"sprint 1 goal\"}"
          }
        },
        "responses": {
          "200": {
            "description": "Updated sprint",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"originBoardId\":5,\"goal\":\"sprint 1 goal\"}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if the sprint does not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      },
      "delete": {
        "tags": [
          "Sprint"
        ],
        "summary": "Delete sprint",
        "description": "Deletes a sprint. Once a sprint is deleted, all open issues in the sprint will be moved to the backlog. ",
        "operationId": "deleteSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the sprint was deleted successfully"
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to delete sprints."
          },
          "404": {
            "description": "Returned if the sprint does not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/agile/1.0/sprint/{sprintId}/issue": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get issues for sprint",
        "description": "Returns all issues in a sprint, for a given sprint ID. This only includes issues that the user has permission to view.\n By default, the returned issues are ordered by rank. ",
        "operationId": "getIssuesForSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint that contains the requested issues.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startAt",
            "in": "query",
            "description": "The starting index of the returned issues. Base index: 0. See the 'Pagination' section at the top of this page for more details.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "The maximum number of issues to return per page. See the 'Pagination' section at the top of this page for more details. Note, the total number of issues returned is limited by the property 'jira.search.views.default.max' in your Jira instance. If you exceed this limit, your results will be truncated.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "jql",
            "in": "query",
            "description": "Filters results using a JQL query. If you define an order in your JQL query,\n                      it will override the default order of the returned issues.<br>\n                      Note that <code>username</code> and <code>userkey</code> can't be used as search terms for\n                      this parameter due to privacy reasons. Use <code>accountId</code> instead.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateQuery",
            "in": "query",
            "description": "Specifies whether to validate the JQL query or not. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The list of fields to return for each issue. By default, all navigable and Agile fields are returned.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "A comma-separated list of the parameters to expand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested issues, at the specified page of the results.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": "{\"expand\":\"\",\"id\":\"10001\",\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/board/92/issue/10001\",\"key\":\"HSP-1\",\"fields\":{\"flagged\":true,\"sprint\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/13\",\"state\":\"future\",\"name\":\"sprint 2\",\"goal\":\"sprint 2 goal\"},\"closedSprints\":[{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/sprint/23\",\"state\":\"closed\",\"name\":\"sprint 1\",\"startDate\":\"2015-04-11T15:22:00.000+10:00\",\"endDate\":\"2015-04-20T01:22:00.000+10:00\",\"completeDate\":\"2015-04-20T11:04:00.000+10:00\",\"goal\":\"sprint 1 goal\"}],\"description\":\"example bug report\",\"project\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/project/EX\",\"id\":\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\",\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\",\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\",\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"},\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/projectCategory/10000\",\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\":{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2021-09-27T01:40:48.769+0000\"}},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/comment/10000\",\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"2021-09-27T01:40:48.931+0000\",\"updated\":\"2021-09-27T01:40:48.931+0000\",\"visibility\":{\"type\":\"role\",\"value\":\"Administrators\"}}],\"epic\":{\"id\":37,\"self\":\"https://your-domain.atlassian.net/rest/agile/1.0/epic/23\",\"name\":\"epic 1\",\"summary\":\"epic 1 summary\",\"color\":{\"key\":\"color_4\"},\"done\":true},\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/issue/10010/worklog/10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/~ver~/user?accountId=5b10a2844c20165700ede21g\",\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-09-27T01:40:48.935+0000\",\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"},\"started\":\"2021-09-27T01:40:48.935+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\":12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\":\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\":200,\"timeSpentSeconds\":400}}}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license."
          },
          "404": {
            "description": "Returned if sprint does not exist or the user cannot view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "post": {
        "tags": [
          "Sprint"
        ],
        "summary": "Move issues to sprint and rank",
        "description": "Moves issues to a sprint, for a given sprint ID.\n Issues can only be moved to open or active sprints.\n The maximum number of issues that can be moved in one operation is 50. ",
        "operationId": "moveIssuesToSprintAndRank",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint that you want to assign issues to.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rankBeforeIssue": {
                    "type": "string"
                  },
                  "rankAfterIssue": {
                    "type": "string"
                  },
                  "rankCustomFieldId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"],\"rankBeforeIssue\":\"PR-4\",\"rankCustomFieldId\":10521}"
          }
        },
        "responses": {
          "204": {
            "description": "Empty response is returned if operation was successful."
          },
          "400": {
            "description": "Returned if the request is invalid."
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to assign issues."
          },
          "404": {
            "description": "Returned if the sprint does not exist or the user does not have permission to view it."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/agile/1.0/sprint/{sprintId}/properties": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get properties keys",
        "description": "Returns the keys of all properties for the sprint identified by the id.\n The user who retrieves the property keys is required to have permissions to view the sprint. ",
        "operationId": "getPropertiesKeys",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "the ID of the sprint from which property keys will be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the sprint with given id exists."
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "403": {
            "description": "Returned if the calling user does not have permission to view the sprint."
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/agile/1.0/sprint/{sprintId}/properties/{propertyKey}": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get property",
        "description": "Returns the value of the property with a given key from the sprint identified by the provided id.\n The user who retrieves the property is required to have permissions to view the sprint. ",
        "operationId": "getProperty",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "the ID of the sprint from which the property will be returned.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the property to return.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the sprint exists and the property was found."
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "403": {
            "description": "Returned if the calling user does not have permission to view the sprint."
          },
          "404": {
            "description": "Returned if the sprint with a given id does not exist or if the property with given key is not found."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "tags": [
          "Sprint"
        ],
        "summary": "Set property",
        "description": "Sets the value of the specified sprint's property.\n <p>\n     You can use this resource to store a custom data against the sprint identified by the id. The user\n     who stores the data is required to have permissions to modify the sprint.\n </p> ",
        "operationId": "setProperty",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "the ID of the sprint on which the property will be set.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the sprint's property. The maximum length of the key is 255 bytes.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the sprint property is successfully updated."
          },
          "201": {
            "description": "Returned if the sprint property is successfully created."
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "403": {
            "description": "Returned if the calling user does not have permission to edit the sprint"
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      },
      "delete": {
        "tags": [
          "Sprint"
        ],
        "summary": "Delete property",
        "description": "Removes the property from the sprint identified by the id. Ths user removing the property is required\n to have permissions to modify the sprint. ",
        "operationId": "deleteProperty",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "the ID of the sprint from which the property will be removed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyKey",
            "in": "path",
            "description": "the key of the property to remove.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned if the sprint property was removed successfully."
          },
          "400": {
            "description": "Returned if the sprintId is invalid (negative or not a number)."
          },
          "401": {
            "description": "Returned if the calling user is not authenticated."
          },
          "403": {
            "description": "Returned if the calling user does not have permission to modify the sprint."
          },
          "404": {
            "description": "Returned if the sprint with given id does not exist or if the property with given key is not found."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/agile/1.0/sprint/{sprintId}/swap": {
      "post": {
        "tags": [
          "Sprint"
        ],
        "summary": "Swap sprint",
        "description": "Swap the position of the sprint with the second sprint. ",
        "operationId": "swapSprint",
        "parameters": [
          {
            "name": "sprintId",
            "in": "path",
            "description": "The ID of the sprint to swap.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sprintToSwapWith": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "required": true,
          "x-examples": {
            "application/json": "{\"sprintToSwapWith\":3}"
          }
        },
        "responses": {
          "204": {
            "description": "Returned if the sprint swap was performed successfully"
          },
          "401": {
            "description": "Returned if the user is not logged in."
          },
          "403": {
            "description": "Returned if the user does not a have valid license or does not have permission to at least one sprint."
          },
          "404": {
            "description": "Returned if at least one sprint does not exist or user does not have permission to view to at least one sprint."
          }
        },
        "deprecated": false,
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/devinfo/0.10/bulk": {
      "post": {
        "tags": [
          "Development Information"
        ],
        "summary": "Store development information",
        "description": "Stores development information provided in the request to make it available when viewing issues in Jira. Existing repository and entity data for the same ID will be replaced if the updateSequenceId of existing data is less than the incoming data. Submissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and/or maintenance times.",
        "operationId": "storeDevelopmentInformation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "DevInformation",
                "type": "object",
                "required": [
                  "repositories"
                ],
                "properties": {
                  "repositories": {
                    "type": "array",
                    "maxItems": 100,
                    "description": "List of repositories containing development information. Must not contain duplicates. Maximum number of entities across all repositories is 1000.",
                    "items": {
                      "title": "Repository",
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "updateSequenceId",
                        "url"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "atlassian-connect-jira-example",
                          "description": "The name of this repository. Max length is 255 characters.",
                          "maxLength": 255
                        },
                        "description": {
                          "type": "string",
                          "example": "The repository which stores code of the Atlassian Connect Add-on Devinfo application.",
                          "description": "Description of this repository. Max length is 1024 characters.",
                          "maxLength": 1024
                        },
                        "forkOf": {
                          "type": "string",
                          "example": "56c7c750-cee2-48e2-b920-d7706dfd11f7",
                          "description": "The ID of the repository this repository was forked from, if it's a fork. Max length is 255 characters.",
                          "maxLength": 255
                        },
                        "url": {
                          "type": "string",
                          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example",
                          "description": "The URL of this repository. Max length is 1024 characters.",
                          "maxLength": 1024
                        },
                        "commits": {
                          "type": "array",
                          "description": "List of commits to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
                          "items": {
                            "title": "Commit",
                            "type": "object",
                            "required": [
                              "id",
                              "issueKeys",
                              "updateSequenceId",
                              "author",
                              "authorTimestamp",
                              "displayId",
                              "fileCount",
                              "hash",
                              "message",
                              "url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                                "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                              },
                              "issueKeys": {
                                "type": "array",
                                "example": "[\"ISSUE-1\",\"TEST-2\"]",
                                "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                                "minItems": 1,
                                "maxItems": 100,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "updateSequenceId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1523494301248,
                                "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                              },
                              "hash": {
                                "type": "string",
                                "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
                                "description": "The hash of the commit. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "flags": {
                                "type": "array",
                                "example": "[MERGE_COMMIT]",
                                "description": "The set of flags for this commit",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "MERGE_COMMIT"
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "example": "README.md edited online with Bitbucket",
                                "description": "The commit message. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "author": {
                                "title": "Author",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Jane Doe",
                                    "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "jane_doe@atlassian.com",
                                    "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "username": {
                                    "type": "string",
                                    "example": "jdoe",
                                    "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe",
                                    "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  },
                                  "avatar": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                    "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  }
                                },
                                "description": "Describes the author of a particular entity"
                              },
                              "fileCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 1,
                                "description": "The total number of files added, removed, or modified by this commit",
                                "minimum": 0
                              },
                              "url": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
                                "description": "The URL of this commit. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "files": {
                                "type": "array",
                                "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice.",
                                "maxItems": 10,
                                "items": {
                                  "title": "File",
                                  "type": "object",
                                  "required": [
                                    "changeType",
                                    "linesAdded",
                                    "linesRemoved",
                                    "path",
                                    "url"
                                  ],
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "example": "/home/user/src/atlassian-connect-jira-example/README.md",
                                      "description": "The path of the file. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    },
                                    "url": {
                                      "type": "string",
                                      "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/src/a7727ee6350c33cdf90826dc21abaa26a5704370/README.md",
                                      "description": "The URL of this file. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    },
                                    "changeType": {
                                      "type": "string",
                                      "example": "MODIFIED",
                                      "description": "The operation performed on this file",
                                      "enum": [
                                        "ADDED",
                                        "COPIED",
                                        "DELETED",
                                        "MODIFIED",
                                        "MOVED",
                                        "UNKNOWN"
                                      ]
                                    },
                                    "linesAdded": {
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 0,
                                      "description": "Number of lines added to the file",
                                      "minimum": 0
                                    },
                                    "linesRemoved": {
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 1,
                                      "description": "Number of lines removed from the file",
                                      "minimum": 0
                                    }
                                  },
                                  "description": "Describes changes to a file"
                                }
                              },
                              "authorTimestamp": {
                                "type": "string",
                                "example": "2016-10-31T23:27:25+00:00",
                                "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format."
                              },
                              "displayId": {
                                "type": "string",
                                "example": "a7727ee",
                                "description": "Shortened identifier for this commit, used for display. Max length is 255 characters.",
                                "maxLength": 255
                              }
                            },
                            "description": "Represents a commit in the version control system."
                          },
                          "minItems": 0,
                          "maxItems": 400
                        },
                        "branches": {
                          "type": "array",
                          "description": "List of branches to update in this repository. Must not contain duplicate entity IDs. Maximum number of branches is 400.",
                          "items": {
                            "title": "Branch",
                            "type": "object",
                            "required": [
                              "id",
                              "issueKeys",
                              "updateSequenceId",
                              "lastCommit",
                              "name",
                              "url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                                "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "issueKeys": {
                                "type": "array",
                                "example": "[\"ISSUE-1\",\"TEST-2\"]",
                                "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                                "minItems": 1,
                                "maxItems": 100,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "updateSequenceId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1523494301248,
                                "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                              },
                              "name": {
                                "type": "string",
                                "example": "master",
                                "description": "The name of the branch. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "lastCommit": {
                                "title": "Commit",
                                "type": "object",
                                "required": [
                                  "id",
                                  "issueKeys",
                                  "updateSequenceId",
                                  "author",
                                  "authorTimestamp",
                                  "displayId",
                                  "fileCount",
                                  "hash",
                                  "message",
                                  "url"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                                    "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                                  },
                                  "issueKeys": {
                                    "type": "array",
                                    "example": "[\"ISSUE-1\",\"TEST-2\"]",
                                    "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                                    "minItems": 1,
                                    "maxItems": 100,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "updateSequenceId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1523494301248,
                                    "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                                  },
                                  "hash": {
                                    "type": "string",
                                    "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
                                    "description": "The hash of the commit. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "flags": {
                                    "type": "array",
                                    "example": "[MERGE_COMMIT]",
                                    "description": "The set of flags for this commit",
                                    "uniqueItems": true,
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "MERGE_COMMIT"
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "README.md edited online with Bitbucket",
                                    "description": "The commit message. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  },
                                  "author": {
                                    "title": "Author",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Jane Doe",
                                        "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                        "maxLength": 255
                                      },
                                      "email": {
                                        "type": "string",
                                        "example": "jane_doe@atlassian.com",
                                        "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                        "maxLength": 255
                                      },
                                      "username": {
                                        "type": "string",
                                        "example": "jdoe",
                                        "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                        "maxLength": 255
                                      },
                                      "url": {
                                        "type": "string",
                                        "example": "https://atlassian.com/account/jane_doe",
                                        "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                        "maxLength": 1024
                                      },
                                      "avatar": {
                                        "type": "string",
                                        "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                        "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                        "maxLength": 1024
                                      }
                                    },
                                    "description": "Describes the author of a particular entity"
                                  },
                                  "fileCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 1,
                                    "description": "The total number of files added, removed, or modified by this commit",
                                    "minimum": 0
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
                                    "description": "The URL of this commit. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  },
                                  "files": {
                                    "type": "array",
                                    "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice.",
                                    "maxItems": 10,
                                    "items": {
                                      "title": "File",
                                      "type": "object",
                                      "required": [
                                        "changeType",
                                        "linesAdded",
                                        "linesRemoved",
                                        "path",
                                        "url"
                                      ],
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "example": "/home/user/src/atlassian-connect-jira-example/README.md",
                                          "description": "The path of the file. Max length is 1024 characters.",
                                          "maxLength": 1024
                                        },
                                        "url": {
                                          "type": "string",
                                          "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/src/a7727ee6350c33cdf90826dc21abaa26a5704370/README.md",
                                          "description": "The URL of this file. Max length is 1024 characters.",
                                          "maxLength": 1024
                                        },
                                        "changeType": {
                                          "type": "string",
                                          "example": "MODIFIED",
                                          "description": "The operation performed on this file",
                                          "enum": [
                                            "ADDED",
                                            "COPIED",
                                            "DELETED",
                                            "MODIFIED",
                                            "MOVED",
                                            "UNKNOWN"
                                          ]
                                        },
                                        "linesAdded": {
                                          "type": "integer",
                                          "format": "int32",
                                          "example": 0,
                                          "description": "Number of lines added to the file",
                                          "minimum": 0
                                        },
                                        "linesRemoved": {
                                          "type": "integer",
                                          "format": "int32",
                                          "example": 1,
                                          "description": "Number of lines removed from the file",
                                          "minimum": 0
                                        }
                                      },
                                      "description": "Describes changes to a file"
                                    }
                                  },
                                  "authorTimestamp": {
                                    "type": "string",
                                    "example": "2016-10-31T23:27:25+00:00",
                                    "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format."
                                  },
                                  "displayId": {
                                    "type": "string",
                                    "example": "a7727ee",
                                    "description": "Shortened identifier for this commit, used for display. Max length is 255 characters.",
                                    "maxLength": 255
                                  }
                                },
                                "description": "Represents a commit in the version control system."
                              },
                              "createPullRequestUrl": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/new",
                                "description": "The URL of the page for creating a pull request from this branch. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "url": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/master",
                                "description": "The URL of the branch. Max length is 1024 characters.",
                                "maxLength": 1024
                              }
                            },
                            "description": "Represents a branch in the version control system"
                          },
                          "minItems": 0,
                          "maxItems": 400
                        },
                        "pullRequests": {
                          "type": "array",
                          "description": "List of pull requests to update in this repository. Must not contain duplicate entity IDs. Maximum number of pull requests is 400",
                          "items": {
                            "title": "PullRequest",
                            "type": "object",
                            "required": [
                              "id",
                              "issueKeys",
                              "updateSequenceId",
                              "author",
                              "commentCount",
                              "displayId",
                              "lastUpdate",
                              "sourceBranch",
                              "status",
                              "title",
                              "url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                                "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                              },
                              "issueKeys": {
                                "type": "array",
                                "example": "[\"ISSUE-1\",\"TEST-2\"]",
                                "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                                "minItems": 1,
                                "maxItems": 100,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "updateSequenceId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1523494301248,
                                "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                              },
                              "status": {
                                "type": "string",
                                "example": "OPEN",
                                "description": "The status of the pull request. In the case of concurrent updates, priority is given in the order OPEN, MERGED, DECLINED, UNKNOWN",
                                "enum": [
                                  "OPEN",
                                  "MERGED",
                                  "DECLINED",
                                  "UNKNOWN"
                                ]
                              },
                              "title": {
                                "type": "string",
                                "example": "Pull request 2, fixing all the issues caused by pull request #1",
                                "description": "Title of the pull request. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "author": {
                                "title": "Author",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Jane Doe",
                                    "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "jane_doe@atlassian.com",
                                    "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "username": {
                                    "type": "string",
                                    "example": "jdoe",
                                    "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe",
                                    "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  },
                                  "avatar": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                    "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  }
                                },
                                "description": "Describes the author of a particular entity"
                              },
                              "commentCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 42,
                                "description": "The number of comments on the pull request"
                              },
                              "sourceBranch": {
                                "type": "string",
                                "example": "ISSUE-1-feature-branch",
                                "description": "The name of the source branch of this PR. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "sourceBranchUrl": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/ISSUE-1-feature-branch",
                                "description": "The url of the source branch of this PR. This is used to match this PR against the branch. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "lastUpdate": {
                                "type": "string",
                                "example": "2016-10-31T23:27:25+00:00",
                                "description": "The most recent update to this PR. Formatted as a UTC ISO 8601 date time format."
                              },
                              "destinationBranch": {
                                "type": "string",
                                "example": "master",
                                "description": "The name of destination branch of this PR. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "reviewers": {
                                "type": "array",
                                "description": "The list of reviewers of this pull request",
                                "items": {
                                  "title": "Reviewer",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "Jane Doe",
                                      "description": "The name of this reviewer. Max length is 255 characters.",
                                      "maxLength": 255
                                    },
                                    "approvalStatus": {
                                      "type": "string",
                                      "example": "APPROVED",
                                      "description": "The approval status of this reviewer, default is UNAPPROVED.",
                                      "enum": [
                                        "APPROVED",
                                        "UNAPPROVED"
                                      ]
                                    },
                                    "url": {
                                      "type": "string",
                                      "example": "https://atlassian.com/account/jane_doe",
                                      "description": "The URL of the profile for this reviewer. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    },
                                    "avatar": {
                                      "type": "string",
                                      "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                      "description": "The URL of the avatar for this reviewer. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    }
                                  },
                                  "description": "The reviewer of a pull request"
                                }
                              },
                              "url": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/2",
                                "description": "The URL of this pull request. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "displayId": {
                                "type": "string",
                                "example": "Pull request 2",
                                "description": "Shortened identifier for this pull request, used for display. Max length is 255 characters.",
                                "maxLength": 255
                              }
                            },
                            "description": "Represents a pull request"
                          },
                          "minItems": 0,
                          "maxItems": 400
                        },
                        "avatar": {
                          "type": "string",
                          "example": "http://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/avatar/32",
                          "description": "The URL of the avatar for this repository. Max length is 1024 characters.",
                          "maxLength": 1024
                        },
                        "avatarDescription": {
                          "type": "string",
                          "example": "Avatar description",
                          "description": "Description of the avatar for this repository. Max length is 1024 characters.",
                          "maxLength": 1024
                        },
                        "id": {
                          "type": "string",
                          "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                          "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters.",
                          "maxLength": 1024
                        },
                        "updateSequenceId": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1523494301248,
                          "description": " An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                        }
                      },
                      "description": "Represents a repository, containing development information such as commits, pull requests, and branches."
                    }
                  },
                  "preventTransitions": {
                    "type": "boolean",
                    "description": "Flag to prevent automatic issue transitions and smart commits being fired, default is false."
                  },
                  "properties": {
                    "type": "object",
                    "description": "Arbitrary properties to tag the submitted repositories with. These properties can be used for delete operations to e.g. clean up all development information associated with an account in the event that the account is removed from the provider system. Note that these properties will never be returned with repository or entity data. They are not intended for use as metadata to associate with a repository. Maximum length of each key or value is 255 characters. Maximum allowed number of properties key/value pairs is 5. Properties keys cannot start with '_' character. Properties keys cannot contain ':' character. ",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "providerMetadata": {
                    "title": "ProviderMetadata",
                    "description": "Information about the provider. This is useful for auditing, logging, debugging, and other internal uses. It is not considered private information. Hence, it may not contain personally identifiable information.",
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "An optional name of the source of the development information data.",
                        "example": "Bitbucket Server 6.7.2"
                      }
                    }
                  }
                },
                "description": "Request object for development information push operations, entities are grouped by repository"
              }
            }
          },
          "description": "Request object, which contains development information",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted repository and entity that is of a valid format will be eventually available in Jira.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "StoreDevinfoResult",
                  "type": "object",
                  "properties": {
                    "acceptedDevinfoEntities": {
                      "type": "object",
                      "description": "The IDs of devinfo entities that have been accepted for submission grouped by their repository IDs. Note that a devinfo entity that isn't updated due to it's updateSequenceId being out of order is not considered a failed submission.",
                      "additionalProperties": {
                        "title": "EntityIds",
                        "type": "object",
                        "properties": {
                          "commits": {
                            "type": "array",
                            "description": "Commits IDs",
                            "items": {
                              "type": "string"
                            }
                          },
                          "branches": {
                            "type": "array",
                            "description": "Branch IDs",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pullRequests": {
                            "type": "array",
                            "description": "Pull request IDs",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "IDs of entities grouped by entity type"
                      }
                    },
                    "failedDevinfoEntities": {
                      "type": "object",
                      "description": "IDs of devinfo entities that have not been accepted for submission and caused error descriptions, usually due to a problem with the request data. The entities (if present) will be grouped by their repository id and type. Entity IDs are listed with errors associated with that devinfo entity that have prevented it being submitted. ",
                      "additionalProperties": {
                        "title": "RepositoryErrors",
                        "type": "object",
                        "properties": {
                          "errorMessages": {
                            "type": "array",
                            "description": "Repository errors",
                            "items": {
                              "title": "ErrorMessage",
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable message describing the error."
                                },
                                "errorTraceId": {
                                  "type": "string",
                                  "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                }
                              },
                              "description": "A message supplied in the case of an error."
                            }
                          },
                          "commits": {
                            "type": "array",
                            "description": "Commits errors",
                            "items": {
                              "title": "EntityError",
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Entity id"
                                },
                                "errorMessages": {
                                  "type": "array",
                                  "description": "Error message",
                                  "items": {
                                    "title": "ErrorMessage",
                                    "type": "object",
                                    "required": [
                                      "message"
                                    ],
                                    "properties": {
                                      "message": {
                                        "type": "string",
                                        "description": "A human-readable message describing the error."
                                      },
                                      "errorTraceId": {
                                        "type": "string",
                                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                      }
                                    },
                                    "description": "A message supplied in the case of an error."
                                  }
                                }
                              },
                              "description": "Represents an error that happened with particular entity."
                            }
                          },
                          "branches": {
                            "type": "array",
                            "description": "Branches errors",
                            "items": {
                              "title": "EntityError",
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Entity id"
                                },
                                "errorMessages": {
                                  "type": "array",
                                  "description": "Error message",
                                  "items": {
                                    "title": "ErrorMessage",
                                    "type": "object",
                                    "required": [
                                      "message"
                                    ],
                                    "properties": {
                                      "message": {
                                        "type": "string",
                                        "description": "A human-readable message describing the error."
                                      },
                                      "errorTraceId": {
                                        "type": "string",
                                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                      }
                                    },
                                    "description": "A message supplied in the case of an error."
                                  }
                                }
                              },
                              "description": "Represents an error that happened with particular entity."
                            }
                          },
                          "pullRequests": {
                            "type": "array",
                            "description": "Pull requests errors",
                            "items": {
                              "title": "EntityError",
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Entity id"
                                },
                                "errorMessages": {
                                  "type": "array",
                                  "description": "Error message",
                                  "items": {
                                    "title": "ErrorMessage",
                                    "type": "object",
                                    "required": [
                                      "message"
                                    ],
                                    "properties": {
                                      "message": {
                                        "type": "string",
                                        "description": "A human-readable message describing the error."
                                      },
                                      "errorTraceId": {
                                        "type": "string",
                                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                      }
                                    },
                                    "description": "A message supplied in the case of an error."
                                  }
                                }
                              },
                              "description": "Represents an error that happened with particular entity."
                            }
                          }
                        },
                        "description": "Represents errors related to a particular repository and its entities"
                      }
                    },
                    "unknownIssueKeys": {
                      "type": "array",
                      "description": "Issue keys that are not known on this Jira instance (if any). These may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist. If a devinfo entity has been associated with issue keys other than those in this array it will still be stored against those valid keys. ",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The result of a successful store development information request"
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no repositories or development information entities were provided, or  more than 5 properties were submitted, or there are one or more properties with leading underscore '_' symbol in their keys.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'WRITE' scope"
          },
          "413": {
            "description": "Data is too large. Submit fewer devinfo entities in each payload.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "WRITE"
      }
    },
    "/devinfo/0.10/repository/{repositoryId}": {
      "get": {
        "tags": [
          "Development Information"
        ],
        "summary": "Get repository",
        "description": "For the specified repository ID, retrieves the repository and the most recent 400 development information entities. The result will be what is currently stored, ignoring any pending updates or deletes.",
        "operationId": "getRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "description": "The ID of repository to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The repository data currently stored for the given ID.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Repository",
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "updateSequenceId",
                    "url"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "atlassian-connect-jira-example",
                      "description": "The name of this repository. Max length is 255 characters.",
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "example": "The repository which stores code of the Atlassian Connect Add-on Devinfo application.",
                      "description": "Description of this repository. Max length is 1024 characters.",
                      "maxLength": 1024
                    },
                    "forkOf": {
                      "type": "string",
                      "example": "56c7c750-cee2-48e2-b920-d7706dfd11f7",
                      "description": "The ID of the repository this repository was forked from, if it's a fork. Max length is 255 characters.",
                      "maxLength": 255
                    },
                    "url": {
                      "type": "string",
                      "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example",
                      "description": "The URL of this repository. Max length is 1024 characters.",
                      "maxLength": 1024
                    },
                    "commits": {
                      "type": "array",
                      "description": "List of commits to update in this repository. Must not contain duplicate entity IDs. Maximum number of commits is 400",
                      "items": {
                        "title": "Commit",
                        "type": "object",
                        "required": [
                          "id",
                          "issueKeys",
                          "updateSequenceId",
                          "author",
                          "authorTimestamp",
                          "displayId",
                          "fileCount",
                          "hash",
                          "message",
                          "url"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                            "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                          },
                          "issueKeys": {
                            "type": "array",
                            "example": "[\"ISSUE-1\",\"TEST-2\"]",
                            "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                            "minItems": 1,
                            "maxItems": 100,
                            "items": {
                              "type": "string"
                            }
                          },
                          "updateSequenceId": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1523494301248,
                            "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                          },
                          "hash": {
                            "type": "string",
                            "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
                            "description": "The hash of the commit. Max length is 255 characters.",
                            "maxLength": 255
                          },
                          "flags": {
                            "type": "array",
                            "example": "[MERGE_COMMIT]",
                            "description": "The set of flags for this commit",
                            "uniqueItems": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "MERGE_COMMIT"
                              ]
                            }
                          },
                          "message": {
                            "type": "string",
                            "example": "README.md edited online with Bitbucket",
                            "description": "The commit message. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "author": {
                            "title": "Author",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Jane Doe",
                                "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "email": {
                                "type": "string",
                                "example": "jane_doe@atlassian.com",
                                "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "username": {
                                "type": "string",
                                "example": "jdoe",
                                "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "url": {
                                "type": "string",
                                "example": "https://atlassian.com/account/jane_doe",
                                "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "avatar": {
                                "type": "string",
                                "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                "maxLength": 1024
                              }
                            },
                            "description": "Describes the author of a particular entity"
                          },
                          "fileCount": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1,
                            "description": "The total number of files added, removed, or modified by this commit",
                            "minimum": 0
                          },
                          "url": {
                            "type": "string",
                            "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
                            "description": "The URL of this commit. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "files": {
                            "type": "array",
                            "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice.",
                            "maxItems": 10,
                            "items": {
                              "title": "File",
                              "type": "object",
                              "required": [
                                "changeType",
                                "linesAdded",
                                "linesRemoved",
                                "path",
                                "url"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "example": "/home/user/src/atlassian-connect-jira-example/README.md",
                                  "description": "The path of the file. Max length is 1024 characters.",
                                  "maxLength": 1024
                                },
                                "url": {
                                  "type": "string",
                                  "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/src/a7727ee6350c33cdf90826dc21abaa26a5704370/README.md",
                                  "description": "The URL of this file. Max length is 1024 characters.",
                                  "maxLength": 1024
                                },
                                "changeType": {
                                  "type": "string",
                                  "example": "MODIFIED",
                                  "description": "The operation performed on this file",
                                  "enum": [
                                    "ADDED",
                                    "COPIED",
                                    "DELETED",
                                    "MODIFIED",
                                    "MOVED",
                                    "UNKNOWN"
                                  ]
                                },
                                "linesAdded": {
                                  "type": "integer",
                                  "format": "int32",
                                  "example": 0,
                                  "description": "Number of lines added to the file",
                                  "minimum": 0
                                },
                                "linesRemoved": {
                                  "type": "integer",
                                  "format": "int32",
                                  "example": 1,
                                  "description": "Number of lines removed from the file",
                                  "minimum": 0
                                }
                              },
                              "description": "Describes changes to a file"
                            }
                          },
                          "authorTimestamp": {
                            "type": "string",
                            "example": "2016-10-31T23:27:25+00:00",
                            "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format."
                          },
                          "displayId": {
                            "type": "string",
                            "example": "a7727ee",
                            "description": "Shortened identifier for this commit, used for display. Max length is 255 characters.",
                            "maxLength": 255
                          }
                        },
                        "description": "Represents a commit in the version control system."
                      },
                      "minItems": 0,
                      "maxItems": 400
                    },
                    "branches": {
                      "type": "array",
                      "description": "List of branches to update in this repository. Must not contain duplicate entity IDs. Maximum number of branches is 400.",
                      "items": {
                        "title": "Branch",
                        "type": "object",
                        "required": [
                          "id",
                          "issueKeys",
                          "updateSequenceId",
                          "lastCommit",
                          "name",
                          "url"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                            "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "issueKeys": {
                            "type": "array",
                            "example": "[\"ISSUE-1\",\"TEST-2\"]",
                            "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                            "minItems": 1,
                            "maxItems": 100,
                            "items": {
                              "type": "string"
                            }
                          },
                          "updateSequenceId": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1523494301248,
                            "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                          },
                          "name": {
                            "type": "string",
                            "example": "master",
                            "description": "The name of the branch. Max length is 255 characters.",
                            "maxLength": 255
                          },
                          "lastCommit": {
                            "title": "Commit",
                            "type": "object",
                            "required": [
                              "id",
                              "issueKeys",
                              "updateSequenceId",
                              "author",
                              "authorTimestamp",
                              "displayId",
                              "fileCount",
                              "hash",
                              "message",
                              "url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                                "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                              },
                              "issueKeys": {
                                "type": "array",
                                "example": "[\"ISSUE-1\",\"TEST-2\"]",
                                "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                                "minItems": 1,
                                "maxItems": 100,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "updateSequenceId": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1523494301248,
                                "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                              },
                              "hash": {
                                "type": "string",
                                "example": "a7727ee6350c33cdf90826dc21abaa26a5704370",
                                "description": "The hash of the commit. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "flags": {
                                "type": "array",
                                "example": "[MERGE_COMMIT]",
                                "description": "The set of flags for this commit",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "MERGE_COMMIT"
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "example": "README.md edited online with Bitbucket",
                                "description": "The commit message. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "author": {
                                "title": "Author",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Jane Doe",
                                    "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "email": {
                                    "type": "string",
                                    "example": "jane_doe@atlassian.com",
                                    "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "username": {
                                    "type": "string",
                                    "example": "jdoe",
                                    "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                    "maxLength": 255
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe",
                                    "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  },
                                  "avatar": {
                                    "type": "string",
                                    "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                    "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                    "maxLength": 1024
                                  }
                                },
                                "description": "Describes the author of a particular entity"
                              },
                              "fileCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 1,
                                "description": "The total number of files added, removed, or modified by this commit",
                                "minimum": 0
                              },
                              "url": {
                                "type": "string",
                                "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/commits/a7727ee6350c33cdf90826dc21abaa26a5704370",
                                "description": "The URL of this commit. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "files": {
                                "type": "array",
                                "description": "List of file changes. Max number of files is 10. Currently, only the first 5 files are shown (sorted by path) in the UI. This UI behavior may change without notice.",
                                "maxItems": 10,
                                "items": {
                                  "title": "File",
                                  "type": "object",
                                  "required": [
                                    "changeType",
                                    "linesAdded",
                                    "linesRemoved",
                                    "path",
                                    "url"
                                  ],
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "example": "/home/user/src/atlassian-connect-jira-example/README.md",
                                      "description": "The path of the file. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    },
                                    "url": {
                                      "type": "string",
                                      "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/src/a7727ee6350c33cdf90826dc21abaa26a5704370/README.md",
                                      "description": "The URL of this file. Max length is 1024 characters.",
                                      "maxLength": 1024
                                    },
                                    "changeType": {
                                      "type": "string",
                                      "example": "MODIFIED",
                                      "description": "The operation performed on this file",
                                      "enum": [
                                        "ADDED",
                                        "COPIED",
                                        "DELETED",
                                        "MODIFIED",
                                        "MOVED",
                                        "UNKNOWN"
                                      ]
                                    },
                                    "linesAdded": {
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 0,
                                      "description": "Number of lines added to the file",
                                      "minimum": 0
                                    },
                                    "linesRemoved": {
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 1,
                                      "description": "Number of lines removed from the file",
                                      "minimum": 0
                                    }
                                  },
                                  "description": "Describes changes to a file"
                                }
                              },
                              "authorTimestamp": {
                                "type": "string",
                                "example": "2016-10-31T23:27:25+00:00",
                                "description": "The author timestamp of this commit. Formatted as a UTC ISO 8601 date time format."
                              },
                              "displayId": {
                                "type": "string",
                                "example": "a7727ee",
                                "description": "Shortened identifier for this commit, used for display. Max length is 255 characters.",
                                "maxLength": 255
                              }
                            },
                            "description": "Represents a commit in the version control system."
                          },
                          "createPullRequestUrl": {
                            "type": "string",
                            "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/new",
                            "description": "The URL of the page for creating a pull request from this branch. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "url": {
                            "type": "string",
                            "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/master",
                            "description": "The URL of the branch. Max length is 1024 characters.",
                            "maxLength": 1024
                          }
                        },
                        "description": "Represents a branch in the version control system"
                      },
                      "minItems": 0,
                      "maxItems": 400
                    },
                    "pullRequests": {
                      "type": "array",
                      "description": "List of pull requests to update in this repository. Must not contain duplicate entity IDs. Maximum number of pull requests is 400",
                      "items": {
                        "title": "PullRequest",
                        "type": "object",
                        "required": [
                          "id",
                          "issueKeys",
                          "updateSequenceId",
                          "author",
                          "commentCount",
                          "displayId",
                          "lastUpdate",
                          "sourceBranch",
                          "status",
                          "title",
                          "url"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                            "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters"
                          },
                          "issueKeys": {
                            "type": "array",
                            "example": "[\"ISSUE-1\",\"TEST-2\"]",
                            "description": "List of issues keys that this entity is associated with. They must be valid Jira issue keys. Minimum number of issue keys is 1. Maximum number of issue keys is 100.",
                            "minItems": 1,
                            "maxItems": 100,
                            "items": {
                              "type": "string"
                            }
                          },
                          "updateSequenceId": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1523494301248,
                            "description": "An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                          },
                          "status": {
                            "type": "string",
                            "example": "OPEN",
                            "description": "The status of the pull request. In the case of concurrent updates, priority is given in the order OPEN, MERGED, DECLINED, UNKNOWN",
                            "enum": [
                              "OPEN",
                              "MERGED",
                              "DECLINED",
                              "UNKNOWN"
                            ]
                          },
                          "title": {
                            "type": "string",
                            "example": "Pull request 2, fixing all the issues caused by pull request #1",
                            "description": "Title of the pull request. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "author": {
                            "title": "Author",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Jane Doe",
                                "description": "The name of this user in a format suitable for display. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "email": {
                                "type": "string",
                                "example": "jane_doe@atlassian.com",
                                "description": "The email address of the user. Used to associate the user with a Jira user. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "username": {
                                "type": "string",
                                "example": "jdoe",
                                "description": "The username of the user. Used to associate the user with a Jira user if there are multiple users for a given email. Max length is 255 characters.",
                                "maxLength": 255
                              },
                              "url": {
                                "type": "string",
                                "example": "https://atlassian.com/account/jane_doe",
                                "description": "The URL of the profile for this user. Max length is 1024 characters.",
                                "maxLength": 1024
                              },
                              "avatar": {
                                "type": "string",
                                "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                "description": "The URL of the avatar for this user. Max length is 1024 characters.",
                                "maxLength": 1024
                              }
                            },
                            "description": "Describes the author of a particular entity"
                          },
                          "commentCount": {
                            "type": "integer",
                            "format": "int32",
                            "example": 42,
                            "description": "The number of comments on the pull request"
                          },
                          "sourceBranch": {
                            "type": "string",
                            "example": "ISSUE-1-feature-branch",
                            "description": "The name of the source branch of this PR. Max length is 255 characters.",
                            "maxLength": 255
                          },
                          "sourceBranchUrl": {
                            "type": "string",
                            "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/branch/ISSUE-1-feature-branch",
                            "description": "The url of the source branch of this PR. This is used to match this PR against the branch. Max length is 255 characters.",
                            "maxLength": 255
                          },
                          "lastUpdate": {
                            "type": "string",
                            "example": "2016-10-31T23:27:25+00:00",
                            "description": "The most recent update to this PR. Formatted as a UTC ISO 8601 date time format."
                          },
                          "destinationBranch": {
                            "type": "string",
                            "example": "master",
                            "description": "The name of destination branch of this PR. Max length is 255 characters.",
                            "maxLength": 255
                          },
                          "reviewers": {
                            "type": "array",
                            "description": "The list of reviewers of this pull request",
                            "items": {
                              "title": "Reviewer",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "Jane Doe",
                                  "description": "The name of this reviewer. Max length is 255 characters.",
                                  "maxLength": 255
                                },
                                "approvalStatus": {
                                  "type": "string",
                                  "example": "APPROVED",
                                  "description": "The approval status of this reviewer, default is UNAPPROVED.",
                                  "enum": [
                                    "APPROVED",
                                    "UNAPPROVED"
                                  ]
                                },
                                "url": {
                                  "type": "string",
                                  "example": "https://atlassian.com/account/jane_doe",
                                  "description": "The URL of the profile for this reviewer. Max length is 1024 characters.",
                                  "maxLength": 1024
                                },
                                "avatar": {
                                  "type": "string",
                                  "example": "https://atlassian.com/account/jane_doe/avatar/32",
                                  "description": "The URL of the avatar for this reviewer. Max length is 1024 characters.",
                                  "maxLength": 1024
                                }
                              },
                              "description": "The reviewer of a pull request"
                            }
                          },
                          "url": {
                            "type": "string",
                            "example": "https://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/pull-requests/2",
                            "description": "The URL of this pull request. Max length is 1024 characters.",
                            "maxLength": 1024
                          },
                          "displayId": {
                            "type": "string",
                            "example": "Pull request 2",
                            "description": "Shortened identifier for this pull request, used for display. Max length is 255 characters.",
                            "maxLength": 255
                          }
                        },
                        "description": "Represents a pull request"
                      },
                      "minItems": 0,
                      "maxItems": 400
                    },
                    "avatar": {
                      "type": "string",
                      "example": "http://bitbucket.org/atlassianlabs/atlassian-connect-jira-example/avatar/32",
                      "description": "The URL of the avatar for this repository. Max length is 1024 characters.",
                      "maxLength": 1024
                    },
                    "avatarDescription": {
                      "type": "string",
                      "example": "Avatar description",
                      "description": "Description of the avatar for this repository. Max length is 1024 characters.",
                      "maxLength": 1024
                    },
                    "id": {
                      "type": "string",
                      "example": "c6c7c750-cee2-48e2-b920-d7706dfd11f9",
                      "description": "The ID of this entity. Will be used for cross entity linking. Must be unique by entity type within a repository, i.e., only one commit can have ID 'X' in repository 'Y'. But adding, e.g., a branch with ID 'X' to repository 'Y' is acceptable. Only alphanumeric characters, and '~.-_', are allowed. Max length is 1024 characters.",
                      "maxLength": 1024
                    },
                    "updateSequenceId": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1523494301248,
                      "description": " An ID used to apply an ordering to updates for this entity in the case of out-of-order receipt of update requests. This can be any monotonically increasing number. A suggested implementation is to use epoch millis from the provider system, but other alternatives are valid (e.g. a provider could store a counter against each entity and increment that on each update to Jira). Updates for an entity that are received with an updateSqeuenceId lower than what is currently stored will be ignored."
                    }
                  },
                  "description": "Represents a repository, containing development information such as commits, pull requests, and branches."
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'READ' scope"
          },
          "404": {
            "description": "No data found for the given repository ID."
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "tags": [
          "Development Information"
        ],
        "summary": "Delete repository",
        "description": "Deletes the repository data stored by the given ID and all related development information entities. Deletion is performed asynchronously.",
        "operationId": "deleteRepository",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "description": "The ID of repository to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together. ",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request has been accepted. Data will eventually be removed from Jira if it exists."
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope"
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/devinfo/0.10/bulkByProperties": {
      "delete": {
        "tags": [
          "Development Information"
        ],
        "summary": "Delete development information by properties",
        "description": "Deletes development information entities which have all the provided properties. Entities will be deleted that match ALL of the properties (i.e. treated as an AND). For example if request is `DELETE bulk?accountId=123&projectId=ABC` entities which have properties `accountId=123` and `projectId=ABC` will be deleted. Special property `_updateSequenceId` can be used to delete all entities with updateSequenceId less or equal than the value specified. In addition to the optional `_updateSequenceId`, one or more query params must be supplied to specify properties to delete by. Deletion is performed asynchronously: specified entities will eventually be removed from Jira. ",
        "operationId": "deleteByProperties",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together. ",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira. "
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no query properties are specified. If `_updateSequenceId` is not a numeric value. If multiple values of the same property key are specified. Deleting data for many property values, for the same property key, requires multiple requests to this resource. ",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope"
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/devinfo/0.10/existsByProperties": {
      "get": {
        "tags": [
          "Development Information"
        ],
        "summary": "Check if data exists for the supplied properties",
        "description": "Checks if development information which have all the provided properties exists. For example, if request is `GET existsByProperties?accountId=123&projectId=ABC` then result will be positive only if there is at least one entity or repository with both properties `accountId=123` and `projectId=ABC`. Special property `_updateSequenceId` can be used to filter all entities with updateSequenceId less or equal than the value specified. In addition to the optional `_updateSequenceId`, one or more query params must be supplied to specify properties to search by. ",
        "operationId": "existsByProperties",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "description": "An optional property. Filters out entities and repositories which have updateSequenceId greater than specified. ",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns whether data exists for the specified properties. ",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ExistsForPropertiesResponse",
                  "type": "object",
                  "properties": {
                    "hasDataMatchingProperties": {
                      "type": "boolean",
                      "description": "Whether there is data matching the query",
                      "readOnly": true
                    }
                  },
                  "description": "Whether there is data for the properties supplied in a query"
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format. It will fail in the following cases: If no query properties are specified. If `_updateSequenceId` is not a numeric value. If multiple values of the same property key are specified. ",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'READ' scope"
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/devinfo/0.10/repository/{repositoryId}/{entityType}/{entityId}": {
      "delete": {
        "tags": [
          "Development Information"
        ],
        "summary": "Delete development information entity",
        "description": "Deletes particular development information entity. Deletion is performed asynchronously.",
        "operationId": "deleteEntity",
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "commit",
                "branch",
                "pull_request"
              ]
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "description": "An optional property to use to control deletion. Only stored data with an updateSequenceId less than or equal to that provided will be deleted. This can be used to help ensure submit/delete requests are applied correctly if they are issued close together. ",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira. If the JWT token corresponds to a Connect app that does not define the jiraDevelopmentTool module it will be rejected with a 403. See https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens. See https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request has been accepted. Data will eventually be removed from Jira if it exists."
          },
          "400": {
            "description": "Wrong entity type specified",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid."
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the jiraDevelopmentTool module, or the app does not define the 'DELETE' scope"
          },
          "429": {
            "description": "API rate limit has been exceeded."
          },
          "500": {
            "description": "An unknown error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "type": "object",
                  "required": [
                    "errorMessages"
                  ],
                  "properties": {
                    "errorMessages": {
                      "type": "array",
                      "description": "List of errors occurred.",
                      "items": {
                        "title": "ErrorMessage",
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "A human-readable message describing the error."
                          },
                          "errorTraceId": {
                            "type": "string",
                            "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                          }
                        },
                        "description": "A message supplied in the case of an error."
                      }
                    }
                  },
                  "description": "A response returned in the case of an error."
                }
              }
            }
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons."
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      }
    },
    "/featureflags/0.1/bulk": {
      "post": {
        "operationId": "submitFeatureFlags",
        "summary": "Submit Feature Flag data",
        "tags": [
          "Feature Flags"
        ],
        "description": "Update / insert Feature Flag data.\n\nFeature Flags are identified by their ID, and existing Feature Flag data for the same ID will be replaced if it exists and the updateSequenceId of existing data is less than the incoming data.\n\nSubmissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are available within a short period of time, but may take some time during peak load and/or maintenance times. The getFeatureFlagById operation can be used to confirm that data has been stored successfully (if needed).\n\nIn the case of multiple Feature Flags being submitted in one request, each is validated individually prior to submission. Details of which Feature Flags failed submission (if any) are available in the response object.\n\nOnly apps that define the Feature Flags module can access this resource. This resource requires the 'WRITE' scope.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SubmitFeatureFlagRequest",
                "description": "The payload used to submit (update / insert) Feature Flag data.",
                "required": [
                  "flags"
                ],
                "properties": {
                  "properties": {
                    "title": "Properties",
                    "description": "Properties assigned to Feature Flag data that can then be used for delete / query operations.\n\nExamples might be an account or user ID that can then be used to clean up data if an account is removed from the Provider system.\n\nNote that these properties will never be returned with Feature Flag data. They are not intended for use as metadata to associate with a Feature Flag. Internally they are stored as a hash so that personal information etc. is never stored within Jira.\n\nProperties are supplied as key/value pairs, a maximum of 5 properties can be supplied, and keys must not contain ':' or start with '_'.\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "maxProperties": 5,
                    "example": {
                      "accountId": "account-234",
                      "projectId": "project-123"
                    }
                  },
                  "flags": {
                    "description": "A list of Feature Flags to submit to Jira.\n\nEach Feature Flag may be associated with 1 or more Jira issue keys, and will be associated with any properties included in this request.\n",
                    "type": "array",
                    "items": {
                      "title": "FeatureFlagData",
                      "description": "Data related to a single Feature Flag, across any Environment that the flag is present in.\n",
                      "required": [
                        "id",
                        "key",
                        "issueKeys",
                        "summary",
                        "details",
                        "updateSequenceId"
                      ],
                      "properties": {
                        "schemaVersion": {
                          "description": "The FeatureFlagData schema version used for this flag data. \n\nPlaceholder to support potential schema changes in the future.\n",
                          "type": "string",
                          "enum": [
                            "1.0"
                          ],
                          "default": "1.0",
                          "example": "1.0"
                        },
                        "id": {
                          "description": "The identifier for the Feature Flag. Must be unique for a given Provider.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "111-222-333"
                        },
                        "key": {
                          "description": "The identifier that users would use to reference the Feature Flag in their source code etc.\n\nWill be made available via the UI for users to copy into their source code etc.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "my-awesome-feature"
                        },
                        "updateSequenceId": {
                          "description": "An ID used to apply an ordering to updates for this Feature Flag in the case of out-of-order receipt of update requests.\n\nThis can be any monotonically increasing number. A suggested implementation is to use epoch millis from the Provider system, but other alternatives are valid (e.g. a Provider could store a counter against each Feature Flag and increment that on each update to Jira).\n\nUpdates for a Feature Flag that are received with an updateSqeuenceId lower than what is currently stored will be ignored.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 1523494301448
                        },
                        "displayName": {
                          "description": "The human-readable name for the Feature Flag. Will be shown in the UI.\n\nIf not provided, will use the ID for display.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Enable awesome feature"
                        },
                        "issueKeys": {
                          "description": "The Jira issue keys to associate the Feature Flag information with.\n",
                          "type": "array",
                          "items": {
                            "title": "IssueKey",
                            "description": "An issue key that references an issue in Jira.\n",
                            "type": "string",
                            "pattern": "^\\w{1,255}-\\d{1,255}$",
                            "example": "ISSUE-123"
                          },
                          "minItems": 1,
                          "maxItems": 100
                        },
                        "summary": {
                          "title": "FeatureFlagSummary",
                          "description": "Summary information for a single Feature Flag.\n\nProviders may elect to provide information from a specific environment, or they may choose to 'roll up' information from across multiple environments - whatever makes most sense in the Provider system.\n\nThis is the summary information that will be presented to the user on e.g. the Jira issue screen.\n",
                          "required": [
                            "status",
                            "lastUpdated"
                          ],
                          "properties": {
                            "url": {
                              "description": "A URL users can use to link to a summary view of this flag, if appropriate.\n\nThis could be any location that makes sense in the Provider system (e.g. if the summary information comes from a specific environment, it might make sense to link the user to the flag in that environment).\n",
                              "type": "string",
                              "format": "uri",
                              "maxLength": 2000,
                              "example": "https://example.com/project/feature-123/summary"
                            },
                            "status": {
                              "title": "FeatureFlagStatus",
                              "description": "Status information about a single Feature Flag.\n",
                              "required": [
                                "enabled"
                              ],
                              "properties": {
                                "enabled": {
                                  "description": "Whether the Feature Flag is enabled in the given environment (or in summary).\n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.\n",
                                  "type": "boolean"
                                },
                                "defaultValue": {
                                  "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.\n",
                                  "type": "string",
                                  "maxLength": 255,
                                  "example": "Disabled"
                                },
                                "rollout": {
                                  "title": "FeatureFlagRollout",
                                  "description": "Information about the rollout of a Feature Flag in an environment (or in summary).\n\nOnly one of 'percentage', 'text', or 'rules' should be provided. They will be used in that order if multiple are present.\n\nThis information may be presented to the user in the UI.\n",
                                  "properties": {
                                    "percentage": {
                                      "description": "If the Feature Flag rollout is a simple percentage rollout\n",
                                      "type": "number",
                                      "minimum": 0,
                                      "maximum": 100
                                    },
                                    "text": {
                                      "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.\n",
                                      "type": "string",
                                      "maxLength": 255
                                    },
                                    "rules": {
                                      "description": "A count of the number of rules active for this Feature Flag in an environment.\n",
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  },
                                  "example": {
                                    "percentage": 80
                                  }
                                }
                              }
                            },
                            "lastUpdated": {
                              "description": "The last-updated timestamp to present to the user as a summary of the state of the Feature Flag.\n\nProviders may choose to supply the last-updated timestamp from a specific environment, or the 'most recent' last-updated timestamp across all environments - whatever makes sense in the Provider system.\n\nExpected format is an RFC3339 formatted string.\n",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-01-20T23:27:25.000Z"
                            }
                          }
                        },
                        "details": {
                          "description": "Detail information for this Feature Flag.\n\nThis may be information for each environment the Feature Flag is defined in or a selection of environments made by the user, as appropriate.\n",
                          "type": "array",
                          "items": {
                            "title": "FeatureFlagDetails",
                            "description": "Details of a Feature Flag for a single environment.",
                            "required": [
                              "url",
                              "lastUpdated",
                              "environment",
                              "status"
                            ],
                            "properties": {
                              "url": {
                                "description": "A URL users can use to link to this Feature Flag, in this environment.\n",
                                "type": "string",
                                "format": "uri",
                                "maxLength": 2000,
                                "example": "https://example.com/project/feature-123/production"
                              },
                              "lastUpdated": {
                                "description": "The last-updated timestamp for this Feature Flag, in this environment.\n\nExpected format is an RFC3339 formatted string.\n",
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-01-20T23:27:25.000Z"
                              },
                              "environment": {
                                "title": "EnvironmentDetails",
                                "description": "Details of a single environment.\n\nAt the simplest this must be the name of the environment.\n\nIdeally there is also type information which may be used to group data from multiple Feature Flags and other entities for visualisation in the UI.\n",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the environment.",
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "type": {
                                    "description": "The 'type' or 'category' of environment this environment belongs to.",
                                    "type": "string",
                                    "enum": [
                                      "development",
                                      "testing",
                                      "staging",
                                      "production"
                                    ]
                                  }
                                },
                                "example": {
                                  "name": "prod-us-west",
                                  "type": "production"
                                }
                              },
                              "status": {
                                "title": "FeatureFlagStatus",
                                "description": "Status information about a single Feature Flag.\n",
                                "required": [
                                  "enabled"
                                ],
                                "properties": {
                                  "enabled": {
                                    "description": "Whether the Feature Flag is enabled in the given environment (or in summary).\n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.\n",
                                    "type": "boolean"
                                  },
                                  "defaultValue": {
                                    "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.\n",
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Disabled"
                                  },
                                  "rollout": {
                                    "title": "FeatureFlagRollout",
                                    "description": "Information about the rollout of a Feature Flag in an environment (or in summary).\n\nOnly one of 'percentage', 'text', or 'rules' should be provided. They will be used in that order if multiple are present.\n\nThis information may be presented to the user in the UI.\n",
                                    "properties": {
                                      "percentage": {
                                        "description": "If the Feature Flag rollout is a simple percentage rollout\n",
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "text": {
                                        "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.\n",
                                        "type": "string",
                                        "maxLength": 255
                                      },
                                      "rules": {
                                        "description": "A count of the number of rules active for this Feature Flag in an environment.\n",
                                        "type": "integer",
                                        "minimum": 0
                                      }
                                    },
                                    "example": {
                                      "percentage": 80
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "minItems": 1
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "providerMetadata": {
                    "title": "ProviderMetadata",
                    "description": "Information about the provider. This is useful for auditing, logging, debugging,\nand other internal uses. It is not considered private information. Hence, it may not contain personally\nidentifiable information.\n",
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "An optional name of the source of the feature flags.",
                        "example": "Atlassian Release Platform 2.1.0"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Feature Flag data to submit.\n",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted Feature Flag that is of a valid format will be eventually available in Jira.\n\nDetails of which Feature Flags were submitted and which failed submission (due to data format problems etc.) are available in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SubmitFeatureFlagsResponse",
                  "description": "The result of a successful submitFeatureFlags request.\n",
                  "properties": {
                    "acceptedFeatureFlags": {
                      "description": "The IDs of Feature Flags that have been accepted for submission.\n\nA Feature Flag may be rejected if it was only associated with unknown issue keys.\n\nNote that a Feature Flag that isn't updated due to it's updateSequenceId being out of order is not considered a failed submission.\n",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "111-222-333",
                        "444-555-666"
                      ]
                    },
                    "failedFeatureFlags": {
                      "description": "Details of Feature Flags that have not been accepted for submission, usually due to a problem with the request data.\n\nThe object (if present) will be keyed by Feature Flag ID and include any errors associated with that Feature Flag that have prevented it being submitted.\n",
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "title": "ErrorMessage",
                          "description": "A message supplied in the case of an error.",
                          "required": [
                            "message"
                          ],
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "A human-readable message describing the error."
                            },
                            "errorTraceId": {
                              "type": "string",
                              "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                            }
                          }
                        }
                      }
                    },
                    "unknownIssueKeys": {
                      "description": "Issue keys that are not known on this Jira instance (if any). \n\nThese may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist.\n\nIf a Feature Flag has been associated with issue keys other than those in this array it will still be stored against those valid keys.\nIf a Feature Flag was only associated with issue keys deemed to be invalid it won't be persisted.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ISSUE-123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format.\n\nNote that in the case of an individual Feature Flag having an invalid format (rather than the request as a whole) the response for the request will be a 202 and details of the invalid Feature Flag will be contained in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module,\nor the app does not define the 'WRITE' scope.\n"
          },
          "413": {
            "description": "Data is too large. Submit fewer Feature Flags in each payload.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "WRITE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/featureflags/0.1/bulkByProperties": {
      "delete": {
        "operationId": "deleteFeatureFlagsByProperty",
        "summary": "Delete Feature Flags by Property",
        "tags": [
          "Feature Flags"
        ],
        "description": "Bulk delete all Feature Flags that match the given request.\n\nOne or more query params must be supplied to specify Properties to delete by. Optional param `_updateSequenceId` is no longer supported.\nIf more than one Property is provided, data will be deleted that matches ALL of the Properties (e.g. treated as an AND).\nSee the documentation for the submitFeatureFlags operation for more details.\n\ne.g. DELETE /bulkByProperties?accountId=account-123&createdBy=user-456\n\nDeletion is performed asynchronously. The getFeatureFlagById operation can be used to confirm that data has been deleted successfully (if needed).\n\nOnly apps that define the Feature Flags module can access this resource. This resource requires the 'DELETE' scope.\n",
        "parameters": [
          {
            "name": "_updateSequenceId",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceId` to use to control deletion.\n\nOnly stored data with an `updateSequenceId` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n\nIf not provided, all stored data that matches the request will be deleted.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.\n"
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/featureflags/0.1/flag/{featureFlagId}": {
      "get": {
        "operationId": "getFeatureFlagById",
        "summary": "Get a Feature Flag by ID",
        "tags": [
          "Feature Flags"
        ],
        "description": "Retrieve the currently stored Feature Flag data for the given ID.\n\nThe result will be what is currently stored, ignoring any pending updates or deletes.\n\nOnly apps that define the Feature Flags module can access this resource. This resource requires the 'READ' scope.\n",
        "parameters": [
          {
            "name": "featureFlagId",
            "in": "path",
            "description": "The ID of the Feature Flag to fetch.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Feature Flag data currently stored for the given ID.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FeatureFlagData",
                  "description": "Data related to a single Feature Flag, across any Environment that the flag is present in.\n",
                  "required": [
                    "id",
                    "key",
                    "issueKeys",
                    "summary",
                    "details",
                    "updateSequenceId"
                  ],
                  "properties": {
                    "schemaVersion": {
                      "description": "The FeatureFlagData schema version used for this flag data. \n\nPlaceholder to support potential schema changes in the future.\n",
                      "type": "string",
                      "enum": [
                        "1.0"
                      ],
                      "default": "1.0",
                      "example": "1.0"
                    },
                    "id": {
                      "description": "The identifier for the Feature Flag. Must be unique for a given Provider.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "111-222-333"
                    },
                    "key": {
                      "description": "The identifier that users would use to reference the Feature Flag in their source code etc.\n\nWill be made available via the UI for users to copy into their source code etc.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "my-awesome-feature"
                    },
                    "updateSequenceId": {
                      "description": "An ID used to apply an ordering to updates for this Feature Flag in the case of out-of-order receipt of update requests.\n\nThis can be any monotonically increasing number. A suggested implementation is to use epoch millis from the Provider system, but other alternatives are valid (e.g. a Provider could store a counter against each Feature Flag and increment that on each update to Jira).\n\nUpdates for a Feature Flag that are received with an updateSqeuenceId lower than what is currently stored will be ignored.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 1523494301448
                    },
                    "displayName": {
                      "description": "The human-readable name for the Feature Flag. Will be shown in the UI.\n\nIf not provided, will use the ID for display.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "Enable awesome feature"
                    },
                    "issueKeys": {
                      "description": "The Jira issue keys to associate the Feature Flag information with.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ISSUE-123"
                      },
                      "minItems": 1,
                      "maxItems": 100
                    },
                    "summary": {
                      "title": "FeatureFlagSummary",
                      "description": "Summary information for a single Feature Flag.\n\nProviders may elect to provide information from a specific environment, or they may choose to 'roll up' information from across multiple environments - whatever makes most sense in the Provider system.\n\nThis is the summary information that will be presented to the user on e.g. the Jira issue screen.\n",
                      "required": [
                        "status",
                        "lastUpdated"
                      ],
                      "properties": {
                        "url": {
                          "description": "A URL users can use to link to a summary view of this flag, if appropriate.\n\nThis could be any location that makes sense in the Provider system (e.g. if the summary information comes from a specific environment, it might make sense to link the user to the flag in that environment).\n",
                          "type": "string",
                          "format": "uri",
                          "maxLength": 2000,
                          "example": "https://example.com/project/feature-123/summary"
                        },
                        "status": {
                          "title": "FeatureFlagStatus",
                          "description": "Status information about a single Feature Flag.\n",
                          "required": [
                            "enabled"
                          ],
                          "properties": {
                            "enabled": {
                              "description": "Whether the Feature Flag is enabled in the given environment (or in summary).\n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.\n",
                              "type": "boolean"
                            },
                            "defaultValue": {
                              "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "Disabled"
                            },
                            "rollout": {
                              "title": "FeatureFlagRollout",
                              "description": "Information about the rollout of a Feature Flag in an environment (or in summary).\n\nOnly one of 'percentage', 'text', or 'rules' should be provided. They will be used in that order if multiple are present.\n\nThis information may be presented to the user in the UI.\n",
                              "properties": {
                                "percentage": {
                                  "description": "If the Feature Flag rollout is a simple percentage rollout\n",
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "text": {
                                  "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.\n",
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "rules": {
                                  "description": "A count of the number of rules active for this Feature Flag in an environment.\n",
                                  "type": "integer",
                                  "minimum": 0
                                }
                              },
                              "example": {
                                "percentage": 80
                              }
                            }
                          }
                        },
                        "lastUpdated": {
                          "description": "The last-updated timestamp to present to the user as a summary of the state of the Feature Flag.\n\nProviders may choose to supply the last-updated timestamp from a specific environment, or the 'most recent' last-updated timestamp across all environments - whatever makes sense in the Provider system.\n\nExpected format is an RFC3339 formatted string.\n",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-20T23:27:25.000Z"
                        }
                      }
                    },
                    "details": {
                      "description": "Detail information for this Feature Flag.\n\nThis may be information for each environment the Feature Flag is defined in or a selection of environments made by the user, as appropriate.\n",
                      "type": "array",
                      "items": {
                        "title": "FeatureFlagDetails",
                        "description": "Details of a Feature Flag for a single environment.",
                        "required": [
                          "url",
                          "lastUpdated",
                          "environment",
                          "status"
                        ],
                        "properties": {
                          "url": {
                            "description": "A URL users can use to link to this Feature Flag, in this environment.\n",
                            "type": "string",
                            "format": "uri",
                            "maxLength": 2000,
                            "example": "https://example.com/project/feature-123/production"
                          },
                          "lastUpdated": {
                            "description": "The last-updated timestamp for this Feature Flag, in this environment.\n\nExpected format is an RFC3339 formatted string.\n",
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-01-20T23:27:25.000Z"
                          },
                          "environment": {
                            "title": "EnvironmentDetails",
                            "description": "Details of a single environment.\n\nAt the simplest this must be the name of the environment.\n\nIdeally there is also type information which may be used to group data from multiple Feature Flags and other entities for visualisation in the UI.\n",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the environment.",
                                "type": "string",
                                "maxLength": 255
                              },
                              "type": {
                                "description": "The 'type' or 'category' of environment this environment belongs to.",
                                "type": "string",
                                "enum": [
                                  "development",
                                  "testing",
                                  "staging",
                                  "production"
                                ]
                              }
                            },
                            "example": {
                              "name": "prod-us-west",
                              "type": "production"
                            }
                          },
                          "status": {
                            "title": "FeatureFlagStatus",
                            "description": "Status information about a single Feature Flag.\n",
                            "required": [
                              "enabled"
                            ],
                            "properties": {
                              "enabled": {
                                "description": "Whether the Feature Flag is enabled in the given environment (or in summary).\n\nEnabled may imply a partial rollout, which can be described using the 'rollout' field.\n",
                                "type": "boolean"
                              },
                              "defaultValue": {
                                "description": "The value served by this Feature Flag when it is disabled. This could be the actual value or an alias, as appropriate.\n\nThis value may be presented to the user in the UI.\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "Disabled"
                              },
                              "rollout": {
                                "title": "FeatureFlagRollout",
                                "description": "Information about the rollout of a Feature Flag in an environment (or in summary).\n\nOnly one of 'percentage', 'text', or 'rules' should be provided. They will be used in that order if multiple are present.\n\nThis information may be presented to the user in the UI.\n",
                                "properties": {
                                  "percentage": {
                                    "description": "If the Feature Flag rollout is a simple percentage rollout\n",
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "text": {
                                    "description": "A text status to display that represents the rollout. This could be e.g. a named cohort.\n",
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "rules": {
                                    "description": "A count of the number of rules active for this Feature Flag in an environment.\n",
                                    "type": "integer",
                                    "minimum": 0
                                  }
                                },
                                "example": {
                                  "percentage": 80
                                }
                              }
                            }
                          }
                        }
                      },
                      "minItems": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module,\nor the app does not define the 'READ' scope.\n"
          },
          "404": {
            "description": "No data found for the given Feature Flag ID.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "operationId": "deleteFeatureFlagById",
        "summary": "Delete a Feature Flag by ID",
        "tags": [
          "Feature Flags"
        ],
        "description": "Delete the Feature Flag data currently stored for the given ID.\n\nDeletion is performed asynchronously. The getFeatureFlagById operation can be used to confirm that data has been deleted successfully (if needed).\n\nOnly apps that define the Feature Flags module can access this resource. This resource requires the 'DELETE' scope.\n",
        "parameters": [
          {
            "name": "featureFlagId",
            "in": "path",
            "description": "The ID of the Feature Flag to delete.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "_updateSequenceId",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceId` to use to control deletion.\n\nOnly stored data with an `updateSequenceId` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.\n"
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the Feature Flags module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with a Connect JWT token that corresponds to the Provider app installed in Jira.\n\nIf the JWT token corresponds to an app that does not define Feature Flags module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/deployments/0.1/bulk": {
      "post": {
        "operationId": "submitDeployments",
        "summary": "Submit deployment data",
        "tags": [
          "Deployments"
        ],
        "description": "Update / insert deployment data.\n\nDeployments are identified by the combination of `pipelineId`, `environmentId` and `deploymentSequenceNumber`, and existing deployment data for the same deployment will be replaced if it exists and the `updateSequenceNumber` of existing data is less than the incoming data.\n\nSubmissions are processed asynchronously. Submitted data will eventually be available in Jira. Most updates are available within a short period of time, but may take some time during peak load and/or maintenance times. The `getDeploymentByKey` operation can be used to confirm that data has been stored successfully (if needed).\n\nIn the case of multiple deployments being submitted in one request, each is validated individually prior to submission. Details of which deployments failed submission (if any) are available in the response object.\n\nOnly Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SubmitDeploymentRequest",
                "description": "The payload used to submit (update / insert) deployment data.",
                "required": [
                  "deployments"
                ],
                "properties": {
                  "properties": {
                    "title": "Properties",
                    "description": "Properties assigned to deployment data that can then be used for delete / query operations.\n\nExamples might be an account or user ID that can then be used to clean up data if an account is removed from the Provider system.\n\nProperties are supplied as key/value pairs, and a maximum of 5 properties can be supplied, keys cannot contain ':' or start with '_'.\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "maxProperties": 5,
                    "example": {
                      "accountId": "account-234",
                      "projectId": "project-123"
                    }
                  },
                  "deployments": {
                    "description": "A list of deployments to submit to Jira.\n\nEach deployment may be associated with one or more Jira issue keys, and will be associated with any properties included in this request.\n",
                    "type": "array",
                    "items": {
                      "title": "DeploymentData",
                      "description": "Data related to a specific deployment in a specific environment that the deployment is present in.\nMust specify one of `issueKeys` or `associations`.\n",
                      "required": [
                        "deploymentSequenceNumber",
                        "updateSequenceNumber",
                        "displayName",
                        "url",
                        "description",
                        "lastUpdated",
                        "state",
                        "pipeline",
                        "environment"
                      ],
                      "properties": {
                        "deploymentSequenceNumber": {
                          "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 100
                        },
                        "updateSequenceNumber": {
                          "description": "A number used to apply an order to the updates to the deployment, as identified by the deploymentSequenceNumber, in the case of out-of-order receipt of update requests. It must be a monotonically increasing number. For example, epoch time could be one way to generate the updateSequenceNumber.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "issueKeys": {
                          "deprecated": true,
                          "description": "Deprecated. The Jira issue keys to associate the Deployment information with.\nShould replace this field with the \"associations\" field to associate Deployment information with issueKeys or other types of associations.\n",
                          "type": "array",
                          "items": {
                            "title": "IssueKey",
                            "description": "An issue key that references an issue in Jira.\n",
                            "type": "string",
                            "pattern": "^\\w{1,255}-\\d{1,255}$",
                            "example": "ABC-123"
                          },
                          "minItems": 1,
                          "maxItems": 100
                        },
                        "associations": {
                          "description": "The entities to associate the Deployment information with.\n",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "description": "An association type referencing issues in Jira.\n",
                                "type": "object",
                                "required": [
                                  "associationType",
                                  "values"
                                ],
                                "properties": {
                                  "associationType": {
                                    "description": "Defines the asssociation type.\n",
                                    "type": "string",
                                    "enum": [
                                      "issueKeys",
                                      "issueIdOrKeys"
                                    ],
                                    "example": "issueIdOrKeys"
                                  },
                                  "values": {
                                    "description": "The Jira issue keys to associate the Deployment information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                    "type": "array",
                                    "items": {
                                      "description": "An issue key or ID that references an issue in Jira.\n",
                                      "type": "string",
                                      "pattern": "(\\w{1,255}-\\d{1,255}|\\d{1,255})",
                                      "example": "ABC-123"
                                    },
                                    "minItems": 1,
                                    "maxItems": 500
                                  }
                                },
                                "example": {
                                  "associationType": "issueIdOrKeys",
                                  "values": [
                                    "ABC-123",
                                    "ABC-456"
                                  ]
                                }
                              },
                              {
                                "description": "An association type referencing service id or keys.\n",
                                "type": "object",
                                "required": [
                                  "associationType",
                                  "values"
                                ],
                                "properties": {
                                  "associationType": {
                                    "description": "Defines the asssociation type.\n",
                                    "type": "string",
                                    "enum": [
                                      "serviceIdOrKeys"
                                    ],
                                    "example": "serviceIdOrKeys"
                                  },
                                  "values": {
                                    "description": "The service id or keys to associate the Deployment information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                    "type": "array",
                                    "items": {
                                      "description": "A service id or service key.\n",
                                      "type": "string",
                                      "maxLength": 255,
                                      "example": "some-service-key"
                                    },
                                    "minItems": 1,
                                    "maxItems": 500
                                  }
                                },
                                "example": {
                                  "associationType": "serviceIdOrKeys",
                                  "values": [
                                    "some-service-key"
                                  ]
                                }
                              }
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 2
                        },
                        "displayName": {
                          "description": "The human-readable name for the deployment. Will be shown in the UI.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Deployment number 16 of Data Depot"
                        },
                        "url": {
                          "description": "A URL users can use to link to this deployment, in this environment.\n",
                          "type": "string",
                          "format": "uri",
                          "maxLength": 2000,
                          "example": "http://mydeployer.com/project1/1111-222-333/prod-east"
                        },
                        "description": {
                          "description": "A short description of the deployment\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "The bits are being transferred"
                        },
                        "lastUpdated": {
                          "description": "The last-updated timestamp to present to the user as a summary of the state of the deployment.\n",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-20T23:27:25.000Z"
                        },
                        "label": {
                          "description": "An (optional) additional label that may be displayed with deployment information. Can be used to display version information etc. for the deployment.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Release 2018-01-20_08-47-bc2421a"
                        },
                        "state": {
                          "description": "The state of the deployment\n",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "pending",
                            "in_progress",
                            "cancelled",
                            "failed",
                            "rolled_back",
                            "successful"
                          ],
                          "example": "in_progress"
                        },
                        "pipeline": {
                          "title": "Pipeline",
                          "description": "This object models the Continuous Delivery (CD) Pipeline concept, an automated process (usually comprised of multiple stages)\n\nfor getting software from version control right through to the production environment.\n",
                          "required": [
                            "id",
                            "displayName",
                            "url"
                          ],
                          "properties": {
                            "id": {
                              "description": "The identifier of this pipeline, must be unique for the provider.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c"
                            },
                            "displayName": {
                              "description": "The name of the pipeline to present to the user.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "Data Depot Deployment"
                            },
                            "url": {
                              "description": "A URL users can use to link to this deployment pipeline.\n",
                              "type": "string",
                              "format": "uri",
                              "maxLength": 2000,
                              "example": "http://mydeployer.com/project1"
                            }
                          }
                        },
                        "environment": {
                          "title": "Environment",
                          "description": "The environment that the deployment is present in.\n",
                          "required": [
                            "id",
                            "displayName",
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "description": "The identifier of this environment, must be unique for the provider so that it can be shared across pipelines.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba"
                            },
                            "displayName": {
                              "description": "The name of the environment to present to the user.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "US East"
                            },
                            "type": {
                              "description": "The type of the environment.\n",
                              "type": "string",
                              "enum": [
                                "unmapped",
                                "development",
                                "testing",
                                "staging",
                                "production"
                              ],
                              "example": "production"
                            }
                          }
                        },
                        "commands": {
                          "title": "Commands",
                          "description": "A list of commands to be actioned for this Deployment\n",
                          "type": "array",
                          "items": {
                            "title": "Command",
                            "description": "A command to be actioned for this Deployment\n- command\n",
                            "properties": {
                              "command": {
                                "description": "The command name.\n",
                                "type": "string",
                                "example": "initiate_deployment_gating"
                              }
                            }
                          }
                        },
                        "schemaVersion": {
                          "description": "The DeploymentData schema version used for this deployment data.\n\nPlaceholder to support potential schema changes in the future.\n",
                          "type": "string",
                          "enum": [
                            "1.0"
                          ],
                          "default": "1.0",
                          "example": "1.0"
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "providerMetadata": {
                    "title": "ProviderMetadata",
                    "description": "Information about the provider. This is useful for auditing, logging, debugging,\nand other internal uses. It is not considered private information. Hence, it may not contain personally\nidentifiable information.\n",
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "An optional name of the source of the deployments data.",
                        "example": "Bamboo 6.10.2"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Deployment data to submit.\n",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted deployment that is of a valid format will eventually be available in Jira.\n\nDetails of which deployments were submitted and which failed submission (due to data format problems etc.) are available in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SubmitDeploymentsResponse",
                  "description": "The result of a successful submitDeployments request.\n",
                  "properties": {
                    "acceptedDeployments": {
                      "description": "The keys of deployments that have been accepted for submission. A deployment key is a composite key that consists of `pipelineId`, `environmentId` and `deploymentSequenceNumber`.\n\nA deployment may be rejected if it was only associated with unknown issue keys.\n\nNote that a deployment that isn't updated due to it's updateSequenceNumber being out of order is not considered a failed submission.\n",
                      "type": "array",
                      "items": {
                        "title": "DeploymentKey",
                        "description": "Fields that uniquely reference a deployment.\n",
                        "required": [
                          "pipelineId",
                          "environmentId",
                          "deploymentSequenceNumber"
                        ],
                        "properties": {
                          "pipelineId": {
                            "description": "The identifier of a pipeline, must be unique for the provider.\n",
                            "type": "string",
                            "maxLength": 255,
                            "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c"
                          },
                          "environmentId": {
                            "description": "The identifier of an environment, must be unique for the provider so that it can be shared across pipelines.\n",
                            "type": "string",
                            "maxLength": 255,
                            "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba"
                          },
                          "deploymentSequenceNumber": {
                            "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.\n",
                            "type": "integer",
                            "format": "int64",
                            "example": 100
                          }
                        }
                      }
                    },
                    "rejectedDeployments": {
                      "description": "Details of deployments that have not been accepted for submission, usually due to a problem with the request data.\n\nThe object will contain the deployment key and any errors associated with that deployment that have prevented it being submitted.\n",
                      "type": "array",
                      "items": {
                        "title": "RejectedDeployment",
                        "description": "A deployment that has not been accepted for submission, usually due to a problem with the request data.\n\nThe object is comprised of the key of the rejected deployment and the corresponding error messages.\n",
                        "required": [
                          "key",
                          "errors"
                        ],
                        "properties": {
                          "key": {
                            "title": "DeploymentKey",
                            "description": "Fields that uniquely reference a deployment.\n",
                            "required": [
                              "pipelineId",
                              "environmentId",
                              "deploymentSequenceNumber"
                            ],
                            "properties": {
                              "pipelineId": {
                                "description": "The identifier of a pipeline, must be unique for the provider.\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c"
                              },
                              "environmentId": {
                                "description": "The identifier of an environment, must be unique for the provider so that it can be shared across pipelines.\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba"
                              },
                              "deploymentSequenceNumber": {
                                "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.\n",
                                "type": "integer",
                                "format": "int64",
                                "example": 100
                              }
                            }
                          },
                          "errors": {
                            "description": "The error messages for the rejected deployment",
                            "type": "array",
                            "items": {
                              "title": "ErrorMessage",
                              "description": "A message supplied in the case of an error.",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable message describing the error."
                                },
                                "errorTraceId": {
                                  "type": "string",
                                  "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "unknownIssueKeys": {
                      "description": "Issue keys that are not known on this Jira instance (if any).\n\nThese may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they may be for projects that no longer exist.\n\nIf a deployment has been associated with issue keys other than those in this array it will still be stored against those valid keys.\nIf a deployment was only associated with issue keys deemed to be invalid it won't be persisted.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ABC-123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format.\n\nNote that in the case of an individual deployment having an invalid format (rather than the request as a whole) the response for the request will be a 202 and details of the invalid deployment will be contained in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module,\nor the app does not define the 'WRITE' scope.\n"
          },
          "413": {
            "description": "Data is too large. Submit fewer deployments in each payload.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "WRITE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/deployments/0.1/bulkByProperties": {
      "delete": {
        "operationId": "deleteDeploymentsByProperty",
        "summary": "Delete deployments by Property",
        "tags": [
          "Deployments"
        ],
        "description": "Bulk delete all deployments that match the given request.\n\nOne or more query params must be supplied to specify the Properties to delete by. Optional param `_updateSequenceNumber` is no longer supported.\nIf more than one Property is provided, data will be deleted that matches ALL of the Properties (i.e. treated as AND).\nSee the documentation for the `submitDeployments` operation for more details.\n\nExample operation: DELETE /bulkByProperties?accountId=account-123&createdBy=user-456\n\nDeletion is performed asynchronously. The `getDeploymentByKey` operation can be used to confirm that data has been deleted successfully (if needed).\n\nOnly Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'DELETE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n\nIf not provided, all stored data that matches the request will be deleted.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.\n"
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module,\nor the app does not define the 'DELETE' scope for Connect apps.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/deployments/0.1/pipelines/{pipelineId}/environments/{environmentId}/deployments/{deploymentSequenceNumber}": {
      "get": {
        "operationId": "getDeploymentByKey",
        "summary": "Get a deployment by key",
        "tags": [
          "Deployments"
        ],
        "description": "Retrieve the currently stored deployment data for the given `pipelineId`, `environmentId` and `deploymentSequenceNumber` combination.\n\nThe result will be what is currently stored, ignoring any pending updates or deletes.\n\nOnly Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'READ' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "The ID of the deployment's pipeline.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "The ID of the deployment's environment.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "deploymentSequenceNumber",
            "in": "path",
            "description": "The deployment's deploymentSequenceNumber.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The deployment data currently stored for the given ID.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DeploymentData",
                  "description": "Data related to a specific deployment in a specific environment that the deployment is present in.\nMust specify one of `issueKeys` or `associations`.\n",
                  "required": [
                    "deploymentSequenceNumber",
                    "updateSequenceNumber",
                    "displayName",
                    "url",
                    "description",
                    "lastUpdated",
                    "state",
                    "pipeline",
                    "environment"
                  ],
                  "properties": {
                    "deploymentSequenceNumber": {
                      "description": "This is the identifier for the deployment. It must be unique for the specified pipeline and environment. It must be a monotonically increasing number, as this is used to sequence the deployments.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 100
                    },
                    "updateSequenceNumber": {
                      "description": "A number used to apply an order to the updates to the deployment, as identified by the deploymentSequenceNumber, in the case of out-of-order receipt of update requests. It must be a monotonically increasing number. For example, epoch time could be one way to generate the updateSequenceNumber.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "issueKeys": {
                      "deprecated": true,
                      "description": "Deprecated. The Jira issue keys to associate the Deployment information with.\nShould replace this field with the \"associations\" field to associate Deployment information with issueKeys or other types of associations.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ABC-123"
                      },
                      "minItems": 1,
                      "maxItems": 100
                    },
                    "associations": {
                      "description": "The entities to associate the Deployment information with.\n",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "description": "An association type referencing issues in Jira.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "issueKeys",
                                  "issueIdOrKeys"
                                ],
                                "example": "issueIdOrKeys"
                              },
                              "values": {
                                "description": "The Jira issue keys to associate the Deployment information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "description": "An issue key or ID that references an issue in Jira.\n",
                                  "type": "string",
                                  "pattern": "(\\w{1,255}-\\d{1,255}|\\d{1,255})",
                                  "example": "ABC-123"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "issueIdOrKeys",
                              "values": [
                                "ABC-123",
                                "ABC-456"
                              ]
                            }
                          },
                          {
                            "description": "An association type referencing service id or keys.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "serviceIdOrKeys"
                                ],
                                "example": "serviceIdOrKeys"
                              },
                              "values": {
                                "description": "The service id or keys to associate the Deployment information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "description": "A service id or service key.\n",
                                  "type": "string",
                                  "maxLength": 255,
                                  "example": "some-service-key"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "serviceIdOrKeys",
                              "values": [
                                "some-service-key"
                              ]
                            }
                          }
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 2
                    },
                    "displayName": {
                      "description": "The human-readable name for the deployment. Will be shown in the UI.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "Deployment number 16 of Data Depot"
                    },
                    "url": {
                      "description": "A URL users can use to link to this deployment, in this environment.\n",
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000,
                      "example": "http://mydeployer.com/project1/1111-222-333/prod-east"
                    },
                    "description": {
                      "description": "A short description of the deployment\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "The bits are being transferred"
                    },
                    "lastUpdated": {
                      "description": "The last-updated timestamp to present to the user as a summary of the state of the deployment.\n",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-01-20T23:27:25.000Z"
                    },
                    "label": {
                      "description": "An (optional) additional label that may be displayed with deployment information. Can be used to display version information etc. for the deployment.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "Release 2018-01-20_08-47-bc2421a"
                    },
                    "state": {
                      "description": "The state of the deployment\n",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "pending",
                        "in_progress",
                        "cancelled",
                        "failed",
                        "rolled_back",
                        "successful"
                      ],
                      "example": "in_progress"
                    },
                    "pipeline": {
                      "title": "Pipeline",
                      "description": "This object models the Continuous Delivery (CD) Pipeline concept, an automated process (usually comprised of multiple stages)\n\nfor getting software from version control right through to the production environment.\n",
                      "required": [
                        "id",
                        "displayName",
                        "url"
                      ],
                      "properties": {
                        "id": {
                          "description": "The identifier of this pipeline, must be unique for the provider.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c"
                        },
                        "displayName": {
                          "description": "The name of the pipeline to present to the user.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Data Depot Deployment"
                        },
                        "url": {
                          "description": "A URL users can use to link to this deployment pipeline.\n",
                          "type": "string",
                          "format": "uri",
                          "maxLength": 2000,
                          "example": "http://mydeployer.com/project1"
                        }
                      }
                    },
                    "environment": {
                      "title": "Environment",
                      "description": "The environment that the deployment is present in.\n",
                      "required": [
                        "id",
                        "displayName",
                        "type"
                      ],
                      "properties": {
                        "id": {
                          "description": "The identifier of this environment, must be unique for the provider so that it can be shared across pipelines.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba"
                        },
                        "displayName": {
                          "description": "The name of the environment to present to the user.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "US East"
                        },
                        "type": {
                          "description": "The type of the environment.\n",
                          "type": "string",
                          "enum": [
                            "unmapped",
                            "development",
                            "testing",
                            "staging",
                            "production"
                          ],
                          "example": "production"
                        }
                      }
                    },
                    "commands": {
                      "title": "Commands",
                      "description": "A list of commands to be actioned for this Deployment\n",
                      "type": "array",
                      "items": {
                        "title": "Command",
                        "description": "A command to be actioned for this Deployment\n- command\n",
                        "properties": {
                          "command": {
                            "description": "The command name.\n",
                            "type": "string",
                            "example": "initiate_deployment_gating"
                          }
                        }
                      }
                    },
                    "schemaVersion": {
                      "description": "The DeploymentData schema version used for this deployment data.\n\nPlaceholder to support potential schema changes in the future.\n",
                      "type": "string",
                      "enum": [
                        "1.0"
                      ],
                      "default": "1.0",
                      "example": "1.0"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module,\n\nor the app does not define the 'READ' scope.\n"
          },
          "404": {
            "description": "No data found for the given deployment ID.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "operationId": "deleteDeploymentByKey",
        "summary": "Delete a deployment by key",
        "tags": [
          "Deployments"
        ],
        "description": "Delete the currently stored deployment data for the given `pipelineId`, `environmentId` and `deploymentSequenceNumber` combination.\n\nDeletion is performed asynchronously. The `getDeploymentByKey` operation can be used to confirm that data has been deleted successfully (if needed).\n\nOnly Connect apps that define the `jiraDeploymentInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'DELETE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "The ID of the deployment's pipeline.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "The ID of the deployment's environment.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "deploymentSequenceNumber",
            "in": "path",
            "description": "The deployment's deploymentSequenceNumber.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.\n"
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraDeploymentInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/deployments/0.1/pipelines/{pipelineId}/environments/{environmentId}/deployments/{deploymentSequenceNumber}/gating-status": {
      "get": {
        "operationId": "getDeploymentGatingStatusByKey",
        "summary": "Get deployment gating status by key",
        "tags": [
          "Deployments"
        ],
        "description": "Retrieve the  Deployment gating status for the given `pipelineId + environmentId + deploymentSequenceNumber` combination. Only apps that define the `jiraDeploymentInfoProvider` module can access this resource. This resource requires the 'READ' scope.\n",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "The ID of the Deployment's pipeline.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "The ID of the Deployment's environment.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "deploymentSequenceNumber",
            "in": "path",
            "description": "The Deployment's deploymentSequenceNumber.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The current gating status for the given Deployment\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SubmitDeploymentsResponse",
                  "description": "The current gating status for the given Deployment.\n",
                  "properties": {
                    "deploymentSequenceNumber": {
                      "description": "This is the identifier for the Deployment.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 100
                    },
                    "pipelineId": {
                      "description": "The ID of the Deployment's pipeline.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "e9c906a7-451f-4fa6-ae1a-c389e2e2d87c"
                    },
                    "environmentId": {
                      "description": "The ID of the Deployment's environment.\n",
                      "type": "string",
                      "example": "8ec94d72-a4fc-4ac0-b31d-c5a595f373ba"
                    },
                    "updatedTimestamp": {
                      "description": "Time the deployment gating status was updated.\n",
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-08-25T06:04:50.239Z"
                    },
                    "gatingStatus": {
                      "description": "The gating status\n",
                      "type": "string",
                      "enum": [
                        "allowed",
                        "prevented",
                        "awaiting",
                        "invalid"
                      ],
                      "example": "allowed"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "description": "Details related to the gating status\n",
                        "required": [
                          "type",
                          "issueKey",
                          "issueLink"
                        ],
                        "properties": {
                          "type": {
                            "description": "The type of the gating status details.\n",
                            "type": "string",
                            "enum": [
                              "issue"
                            ],
                            "example": "issue"
                          },
                          "issueKey": {
                            "title": "IssueKey",
                            "description": "An issue key that references an issue in Jira.\n",
                            "type": "string",
                            "pattern": "^\\w{1,255}-\\d{1,255}$",
                            "example": "ABC-123"
                          },
                          "issueLink": {
                            "description": "A full HTTPS link to the Jira issue for the change request gating this Deployment. This field is provided if the details type is issue.\n",
                            "type": "string",
                            "format": "uri",
                            "maxLength": 2000,
                            "example": "https://your-domain.atlassian.net/servicedesk/customer/portal/1/ZAINA-123"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraDeploymentInfoProvider` module,\n"
          },
          "404": {
            "description": "No data found for the given deployment ID.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "READ"
      }
    },
    "/builds/0.1/bulk": {
      "post": {
        "operationId": "submitBuilds",
        "summary": "Submit build data",
        "tags": [
          "Builds"
        ],
        "description": "Update / insert builds data.\n\nBuilds are identified by the combination of `pipelineId` and `buildNumber`, and existing build data for the same\nbuild will be replaced if it exists and the `updateSequenceNumber` of the existing data is less than the\nincoming data.\n\nSubmissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are\navailable within a short period of time, but may take some time during peak load and/or maintenance times.\nThe `getBuildByKey` operation can be used to confirm that data has been stored successfully (if needed).\n\nIn the case of multiple builds being submitted in one request, each is validated individually prior to\nsubmission. Details of which build failed submission (if any) are available in the response object.\n\nOnly Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SubmitBuildsRequest",
                "description": "The payload used to submit (update / insert) build data.",
                "type": "object",
                "required": [
                  "builds"
                ],
                "properties": {
                  "properties": {
                    "title": "Properties",
                    "description": "Properties assigned to build data that can then be used for delete / query operations.\n\nExamples might be an account or user ID that can then be used to clean up data if an account is removed from\nthe Provider system.\n\nNote that these properties will never be returned with build data. They are not intended for use as\nmetadata to associate with a build. Internally they are stored as a hash so that personal information etc.\nis never stored within Jira.\n\nProperties are supplied as key/value pairs, a maximum of 5 properties can be supplied, and keys must not\ncontain ':' or start with '_'.\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "maxProperties": 5,
                    "example": {
                      "accountId": "account-234",
                      "projectId": "project-123"
                    }
                  },
                  "builds": {
                    "description": "A list of builds to submit to Jira.\n\nEach build may be associated with one or more Jira issue keys, and will be associated with any properties\nincluded in this request.\n",
                    "type": "array",
                    "items": {
                      "title": "BuildData",
                      "description": "Data related to a single build\n",
                      "required": [
                        "pipelineId",
                        "buildNumber",
                        "displayName",
                        "url",
                        "state",
                        "lastUpdated",
                        "updateSequenceNumber",
                        "issueKeys"
                      ],
                      "properties": {
                        "schemaVersion": {
                          "description": "The schema version used for this data.\n\nPlaceholder to support potential schema changes in the future.\n",
                          "type": "string",
                          "enum": [
                            "1.0"
                          ],
                          "default": "1.0",
                          "example": "1.0"
                        },
                        "pipelineId": {
                          "description": "An ID that relates a sequence of builds. Depending on your use case this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "my-build-plan"
                        },
                        "buildNumber": {
                          "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 16
                        },
                        "updateSequenceNumber": {
                          "description": "A number used to apply an order to the updates to the build, as identified by `pipelineId` and `buildNumber`,\nin the case of out-of-order receipt of update requests.\n\nIt must be a monotonically increasing number. For example, epoch time could be one way to generate the\n`updateSequenceNumber`.\n\nUpdates for a build that is received with an `updateSqeuenceNumber` less than or equal to what is currently\nstored will be ignored.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 1523494301448
                        },
                        "displayName": {
                          "description": "The human-readable name for the build.\n\nWill be shown in the UI.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "My Project build #16"
                        },
                        "description": {
                          "description": "An optional description to attach to this build.\n\nThis may be anything that makes sense in your system.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "My Project build #16: Failed"
                        },
                        "label": {
                          "description": "A human-readable string that to provide information about the build.\n",
                          "type": "string",
                          "maxLength": 255
                        },
                        "url": {
                          "description": "The URL to this build in your system.\n",
                          "type": "string",
                          "maxLength": 2000,
                          "format": "URL"
                        },
                        "state": {
                          "title": "BuildState",
                          "description": "The state of a build.\n\n* `pending` - The build is queued, or some manual action is required.\n* `in_progress` - The build is currently running.\n* `successful` - The build completed successfully.\n* `failed` - The build failed.\n* `cancelled` - The build has been cancelled or stopped.\n* `unknown` - The build is in an unknown state.\n",
                          "type": "string",
                          "enum": [
                            "pending",
                            "in_progress",
                            "successful",
                            "failed",
                            "cancelled",
                            "unknown"
                          ],
                          "example": "failed"
                        },
                        "lastUpdated": {
                          "description": "The last-updated timestamp to present to the user as a summary of the state of the build.\n",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-20T23:27:25.000Z"
                        },
                        "issueKeys": {
                          "description": "The Jira issue keys to associate the build information with.\n\nYou are free to associate issue keys in any way you like. However, we recommend that you use the name\nof the branch the build was executed on, and extract issue keys from that name using a simple regex. This has\nthe advantage that it provides an intuitive association of builds to issue keys.\n",
                          "type": "array",
                          "items": {
                            "title": "IssueKey",
                            "description": "An issue key that references an issue in Jira.\n",
                            "type": "string",
                            "pattern": "^\\w{1,255}-\\d{1,255}$",
                            "example": "ISSUE-123"
                          },
                          "minItems": 1,
                          "maxItems": 100
                        },
                        "testInfo": {
                          "title": "TestInfo",
                          "description": "Information about tests that were executed during a build.\n",
                          "type": "object",
                          "required": [
                            "totalNumber",
                            "numberPassed",
                            "numberFailed"
                          ],
                          "properties": {
                            "totalNumber": {
                              "description": "The total number of tests considered during a build.\n",
                              "type": "integer",
                              "format": "int64",
                              "example": 150
                            },
                            "numberPassed": {
                              "description": "The number of tests that passed during a build.\n",
                              "type": "integer",
                              "format": "int64",
                              "example": 145
                            },
                            "numberFailed": {
                              "description": "The number of tests that failed during a build.\n",
                              "type": "integer",
                              "format": "int64",
                              "example": 5
                            },
                            "numberSkipped": {
                              "description": "The number of tests that were skipped during a build.\n",
                              "type": "integer",
                              "format": "int64",
                              "default": 0,
                              "example": 0
                            }
                          }
                        },
                        "references": {
                          "description": "Optional information that links a build to a commit, branch etc.\n",
                          "type": "array",
                          "items": {
                            "title": "BuildReferences",
                            "description": "Information that links a build to a commit, branch etc.\n\nUsed to provide a richer user experience by enabling us to associate builds from your system with e.g.\nbranches / commits / tags etc. supplied by another app in the Jira UI.\n",
                            "type": "object",
                            "properties": {
                              "commit": {
                                "title": "BuildCommitReference",
                                "description": "Details about the commit the build was run against.\n",
                                "type": "object",
                                "required": [
                                  "id",
                                  "repositoryUri"
                                ],
                                "properties": {
                                  "id": {
                                    "description": "The ID of the commit. E.g. for a Git repository this would be the SHA1 hash.\n",
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "08cd9c26b2b8d7cf6e6af6b49da8895d065c259f"
                                  },
                                  "repositoryUri": {
                                    "description": "An identifier for the repository containing the commit.\n\nIn most cases this should be the URL of the repository in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be some identifier that is\nunique to that repository.\n",
                                    "type": "string",
                                    "maxLength": 2000,
                                    "example": "https://bitbucket.org/atlassian/biij-vendor-api"
                                  }
                                }
                              },
                              "ref": {
                                "title": "BuildRefReference",
                                "description": "Details about the ref the build was run on.\n",
                                "type": "object",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the ref the build ran on\n",
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "feature/ISSUE-123-some-work"
                                  },
                                  "uri": {
                                    "description": "An identifer for the ref.\n\nIn most cases this should be the URL of the tag/branch etc. in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be something that uniquely\nidentifies the ref.\n",
                                    "type": "string",
                                    "maxLength": 2000,
                                    "example": "https://bitbucket.org/atlassian/biij-vendor-api/refs/feature/ISSUE-123-some-work"
                                  }
                                }
                              }
                            }
                          },
                          "minItems": 1,
                          "maxItems": 5
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "providerMetadata": {
                    "title": "ProviderMetadata",
                    "description": "Information about the provider. This is useful for auditing, logging, debugging,\nand other internal uses. It is not considered private information. Hence, it may not contain personally\nidentifiable information.\n",
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "An optional name of the source of the builds data.",
                        "example": "Bamboo 6.10.2"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Builds data to submit.\n",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted build that is of a valid format will be eventually available in Jira.\n\nDetails of which builds were submitted and which failed submission (due to data format problems etc.)\nare available in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SubmitBuildsResponse",
                  "description": "The result of a successful `submitBuilds` request.\n",
                  "type": "object",
                  "properties": {
                    "acceptedBuilds": {
                      "description": "The keys of builds that have been accepted for submission. A build key is a composite key that consists of\n`pipelineId` and `buildNumber`.\n\nA build may be rejected if it was only associated with unknown issue keys, or if the submitted data for that\nbuild does not match the required schema.\n\nNote that a build that isn't updated due to it's `updateSequenceNumber` being out of order is not\nconsidered a failed submission.\n",
                      "type": "array",
                      "items": {
                        "title": "BuildKey",
                        "description": "Fields that uniquely reference a build.\n",
                        "required": [
                          "pipelineId",
                          "buildNumber"
                        ],
                        "type": "object",
                        "properties": {
                          "pipelineId": {
                            "description": "An ID that relates a sequence of builds. Depending on your system this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.\n",
                            "type": "string",
                            "maxLength": 255,
                            "example": "my-build-plan"
                          },
                          "buildNumber": {
                            "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.\n",
                            "type": "integer",
                            "format": "int64",
                            "example": 16
                          }
                        }
                      }
                    },
                    "rejectedBuilds": {
                      "description": "Details of builds that have not been accepted for submission.\n\nA build may be rejected if it was only associated with unknown issue keys, or if the submitted data for the\nbuild does not match the required schema.\n",
                      "type": "array",
                      "items": {
                        "title": "RejectedBuild",
                        "description": "A build that has not been accepted for submission, usually due to a problem with the request data.\n\nThe object is comprised of the key of the rejected build and the corresponding error messages.\n",
                        "type": "object",
                        "required": [
                          "key",
                          "errors"
                        ],
                        "properties": {
                          "key": {
                            "title": "BuildKey",
                            "description": "Fields that uniquely reference a build.\n",
                            "required": [
                              "pipelineId",
                              "buildNumber"
                            ],
                            "type": "object",
                            "properties": {
                              "pipelineId": {
                                "description": "An ID that relates a sequence of builds. Depending on your system this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "my-build-plan"
                              },
                              "buildNumber": {
                                "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify the build.\n",
                                "type": "integer",
                                "format": "int64",
                                "example": 16
                              }
                            }
                          },
                          "errors": {
                            "description": "The error messages for the rejected build",
                            "type": "array",
                            "items": {
                              "title": "ErrorMessage",
                              "description": "A message supplied in the case of an error.",
                              "type": "object",
                              "required": [
                                "message"
                              ],
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "description": "A human-readable message describing the error."
                                },
                                "errorTraceId": {
                                  "type": "string",
                                  "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "unknownIssueKeys": {
                      "description": "Issue keys that are not known on this Jira instance (if any).\n\nThese may be invalid keys (e.g. `UTF-8` is sometimes incorrectly identified as a Jira issue key), or they\nmay be for projects that no longer exist.\n\nIf a build has been associated with issue keys other than those in this array it will still be stored against\nthose valid keys. If a build was only associated with issue keys deemed to be invalid it won't be persisted.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ISSUE-123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format.\n\nNote that in the case of an individual build having an invalid format (rather than the request as a whole)\nthe response for the request will be a 202 and details of the invalid build will be contained in the\nresponse object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module,\nor the app does not define the 'WRITE' scope.\n"
          },
          "413": {
            "description": "Data is too large. Submit fewer builds in each payload.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "WRITE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/builds/0.1/bulkByProperties": {
      "delete": {
        "operationId": "deleteBuildsByProperty",
        "summary": "Delete builds by Property",
        "tags": [
          "Builds"
        ],
        "description": "Bulk delete all builds data that match the given request.\n\nOne or more query params must be supplied to specify Properties to delete by.\nOptional param `_updateSequenceNumber` is no longer supported.\nIf more than one Property is provided, data will be deleted that matches ALL of the\nProperties (e.g. treated as an AND).\n\nSee the documentation for the `submitBuilds` operation for more details.\n\ne.g. DELETE /bulkByProperties?accountId=account-123&repoId=repo-345\n\nDeletion is performed asynchronously. The `getBuildByKey` operation can be used to confirm that data has been\ndeleted successfully (if needed).\n\nOnly Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n\nIf not provided, all stored data that matches the request will be deleted.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.\n"
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/builds/0.1/pipelines/{pipelineId}/builds/{buildNumber}": {
      "get": {
        "operationId": "getBuildByKey",
        "summary": "Get a build by key",
        "tags": [
          "Builds"
        ],
        "description": "Retrieve the currently stored build data for the given `pipelineId` and `buildNumber` combination.\n\nThe result will be what is currently stored, ignoring any pending updates or deletes.\n\nOnly Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "The `pipelineId` of the build.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "buildNumber",
            "in": "path",
            "description": "The `buildNumber` of the build.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The build data currently stored for the given key.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BuildData",
                  "description": "Data related to a single build\n",
                  "required": [
                    "pipelineId",
                    "buildNumber",
                    "displayName",
                    "url",
                    "state",
                    "lastUpdated",
                    "updateSequenceNumber",
                    "issueKeys"
                  ],
                  "properties": {
                    "schemaVersion": {
                      "description": "The schema version used for this data.\n\nPlaceholder to support potential schema changes in the future.\n",
                      "type": "string",
                      "enum": [
                        "1.0"
                      ],
                      "default": "1.0",
                      "example": "1.0"
                    },
                    "pipelineId": {
                      "description": "An ID that relates a sequence of builds. Depending on your use case this might be a project ID, pipeline ID,\nplan key etc. - whatever logical unit you use to group a sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "my-build-plan"
                    },
                    "buildNumber": {
                      "description": "Identifies a build within the sequence of builds identified by the build `pipelineId`.\n\nUsed to identify the 'most recent' build in that sequence of builds.\n\nThe combination of `pipelineId` and `buildNumber` must uniquely identify a build you have provided.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 16
                    },
                    "updateSequenceNumber": {
                      "description": "A number used to apply an order to the updates to the build, as identified by `pipelineId` and `buildNumber`,\nin the case of out-of-order receipt of update requests.\n\nIt must be a monotonically increasing number. For example, epoch time could be one way to generate the\n`updateSequenceNumber`.\n\nUpdates for a build that is received with an `updateSqeuenceNumber` less than or equal to what is currently\nstored will be ignored.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 1523494301448
                    },
                    "displayName": {
                      "description": "The human-readable name for the build.\n\nWill be shown in the UI.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "My Project build #16"
                    },
                    "description": {
                      "description": "An optional description to attach to this build.\n\nThis may be anything that makes sense in your system.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "My Project build #16: Failed"
                    },
                    "label": {
                      "description": "A human-readable string that to provide information about the build.\n",
                      "type": "string",
                      "maxLength": 255
                    },
                    "url": {
                      "description": "The URL to this build in your system.\n",
                      "type": "string",
                      "maxLength": 2000,
                      "format": "URL"
                    },
                    "state": {
                      "title": "BuildState",
                      "description": "The state of a build.\n\n* `pending` - The build is queued, or some manual action is required.\n* `in_progress` - The build is currently running.\n* `successful` - The build completed successfully.\n* `failed` - The build failed.\n* `cancelled` - The build has been cancelled or stopped.\n* `unknown` - The build is in an unknown state.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "in_progress",
                        "successful",
                        "failed",
                        "cancelled",
                        "unknown"
                      ],
                      "example": "failed"
                    },
                    "lastUpdated": {
                      "description": "The last-updated timestamp to present to the user as a summary of the state of the build.\n",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-01-20T23:27:25.000Z"
                    },
                    "issueKeys": {
                      "description": "The Jira issue keys to associate the build information with.\n\nYou are free to associate issue keys in any way you like. However, we recommend that you use the name\nof the branch the build was executed on, and extract issue keys from that name using a simple regex. This has\nthe advantage that it provides an intuitive association of builds to issue keys.\n",
                      "type": "array",
                      "items": {
                        "title": "IssueKey",
                        "description": "An issue key that references an issue in Jira.\n",
                        "type": "string",
                        "pattern": "^\\w{1,255}-\\d{1,255}$",
                        "example": "ISSUE-123"
                      },
                      "minItems": 1,
                      "maxItems": 100
                    },
                    "testInfo": {
                      "title": "TestInfo",
                      "description": "Information about tests that were executed during a build.\n",
                      "type": "object",
                      "required": [
                        "totalNumber",
                        "numberPassed",
                        "numberFailed"
                      ],
                      "properties": {
                        "totalNumber": {
                          "description": "The total number of tests considered during a build.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 150
                        },
                        "numberPassed": {
                          "description": "The number of tests that passed during a build.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 145
                        },
                        "numberFailed": {
                          "description": "The number of tests that failed during a build.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 5
                        },
                        "numberSkipped": {
                          "description": "The number of tests that were skipped during a build.\n",
                          "type": "integer",
                          "format": "int64",
                          "default": 0,
                          "example": 0
                        }
                      }
                    },
                    "references": {
                      "description": "Optional information that links a build to a commit, branch etc.\n",
                      "type": "array",
                      "items": {
                        "title": "BuildReferences",
                        "description": "Information that links a build to a commit, branch etc.\n\nUsed to provide a richer user experience by enabling us to associate builds from your system with e.g.\nbranches / commits / tags etc. supplied by another app in the Jira UI.\n",
                        "type": "object",
                        "properties": {
                          "commit": {
                            "title": "BuildCommitReference",
                            "description": "Details about the commit the build was run against.\n",
                            "type": "object",
                            "required": [
                              "id",
                              "repositoryUri"
                            ],
                            "properties": {
                              "id": {
                                "description": "The ID of the commit. E.g. for a Git repository this would be the SHA1 hash.\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "08cd9c26b2b8d7cf6e6af6b49da8895d065c259f"
                              },
                              "repositoryUri": {
                                "description": "An identifier for the repository containing the commit.\n\nIn most cases this should be the URL of the repository in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be some identifier that is\nunique to that repository.\n",
                                "type": "string",
                                "maxLength": 2000,
                                "example": "https://bitbucket.org/atlassian/biij-vendor-api"
                              }
                            }
                          },
                          "ref": {
                            "title": "BuildRefReference",
                            "description": "Details about the ref the build was run on.\n",
                            "type": "object",
                            "required": [
                              "name",
                              "uri"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the ref the build ran on\n",
                                "type": "string",
                                "maxLength": 255,
                                "example": "feature/ISSUE-123-some-work"
                              },
                              "uri": {
                                "description": "An identifer for the ref.\n\nIn most cases this should be the URL of the tag/branch etc. in the SCM provider.\n\nFor cases where the build was executed against a local repository etc. this should be something that uniquely\nidentifies the ref.\n",
                                "type": "string",
                                "maxLength": 2000,
                                "example": "https://bitbucket.org/atlassian/biij-vendor-api/refs/feature/ISSUE-123-some-work"
                              }
                            }
                          }
                        }
                      },
                      "minItems": 1,
                      "maxItems": 5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module,\nor the app does not define the 'READ' scope.\n"
          },
          "404": {
            "description": "No build data found for the given key.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "operationId": "deleteBuildByKey",
        "summary": "Delete a build by key",
        "tags": [
          "Builds"
        ],
        "description": "Delete the build data currently stored for the given `pipelineId` and `buildNumber` combination.\n\nDeletion is performed asynchronously. The `getBuildByKey` operation can be used to confirm that data has been\ndeleted successfully (if needed).\n\nOnly Connect apps that define the `jiraBuildInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "The `pipelineId` of the build to delete.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "buildNumber",
            "in": "path",
            "description": "The `buildNumber` of the build to delete.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.\n"
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraBuildInfoProvider` module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ErrorMessages",
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "title": "ErrorMessage",
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraBuildInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/remotelinks/1.0/bulk": {
      "post": {
        "operationId": "submitRemoteLinks",
        "summary": "Submit Remote Link data",
        "tags": [
          "Remote Links"
        ],
        "description": "Update / insert Remote Link data.\n\nRemote Links are identified by their ID, existing Remote Link data for the same ID will be replaced if it\nexists and the updateSequenceId of existing data is less than the incoming data.\n\nSubmissions are performed asynchronously. Submitted data will eventually be available in Jira; most updates are\navailable within a short period of time, but may take some time during peak load and/or maintenance times.\nThe `getRemoteLinkById` operation can be used to confirm that data has been stored successfully (if needed).\n\nIn the case of multiple Remote Links being submitted in one request, each is validated individually prior to\nsubmission. Details of which Remote LInk failed submission (if any) are available in the response object.\n\nOnly Connect apps that define the `jiraRemoteLinkInfoProvider` module can access this resource. This resource\nrequires the 'WRITE' scope for Connect apps.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SubmitRemoteLinksRequest",
                "description": "The payload used to submit (update / insert) Remote Link data.",
                "type": "object",
                "required": [
                  "remoteLinks"
                ],
                "properties": {
                  "properties": {
                    "title": "Properties",
                    "description": "Properties assigned to Remote Link data that can then be used for delete / query operations.\n\nExamples might be an account or user ID that can then be used to clean up data if an account is removed from\nthe Provider system.\n\nProperties are supplied as key/value pairs, a maximum of 5 properties can be supplied, and keys must not\ncontain ':' or start with '_'.\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "maxProperties": 5,
                    "example": {
                      "accountId": "account-234",
                      "projectId": "project-123"
                    }
                  },
                  "remoteLinks": {
                    "description": "A list of Remote Links to submit to Jira.\n\nEach Remote Link may be associated with one or more Jira issue keys, and will be associated with any properties\nincluded in this request.\n",
                    "type": "array",
                    "items": {
                      "title": "RemoteLinkData",
                      "description": "Data related to a single Remote Link.\n",
                      "required": [
                        "id",
                        "updateSequenceNumber",
                        "displayName",
                        "url",
                        "type",
                        "lastUpdated"
                      ],
                      "properties": {
                        "schemaVersion": {
                          "description": "The schema version used for this data.\n\nPlaceholder to support potential schema changes in the future.\n",
                          "type": "string",
                          "enum": [
                            "1.0"
                          ],
                          "default": "1.0",
                          "example": "1.0"
                        },
                        "id": {
                          "description": "The identifier for the Remote Link. Must be unique for a given Provider.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "111-222-333"
                        },
                        "updateSequenceNumber": {
                          "description": "An ID used to apply an ordering to updates for this Remote Link in the case of out-of-order receipt of\nupdate requests.\n\nIt must be a monotonically increasing number. For example, epoch time could be one way to generate the\n`updateSequenceNumber`.\n\nUpdates for a Remote Link that is received with an `updateSqeuenceNumber` less than or equal to what is currently\nstored will be ignored.\n",
                          "type": "integer",
                          "format": "int64",
                          "example": 1523494301448
                        },
                        "displayName": {
                          "description": "The human-readable name for the Remote Link.\n\nWill be shown in the UI.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Remote Link #42"
                        },
                        "url": {
                          "description": "The URL to this Remote Link in your system.\n",
                          "type": "string",
                          "maxLength": 2000,
                          "format": "uri"
                        },
                        "type": {
                          "description": "The type of the Remote Link. The current supported types are 'document', 'alert', 'test',\n'security', 'logFile', 'prototype', 'coverage', 'bugReport' and 'other'\n",
                          "type": "string",
                          "enum": [
                            "document",
                            "alert",
                            "test",
                            "security",
                            "logFile",
                            "prototype",
                            "coverage",
                            "bugReport",
                            "other"
                          ],
                          "example": "security"
                        },
                        "description": {
                          "description": "An optional description to attach to this Remote Link.\n\nThis may be anything that makes sense in your system.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "Remote Link #42 with more information in this description"
                        },
                        "lastUpdated": {
                          "description": "The last-updated timestamp to present to the user as a summary of when Remote Link was last updated.\n",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-20T23:27:25.000Z"
                        },
                        "associations": {
                          "description": "The entities to associate the Remote Link information with.\n",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "title": "IssueKeysAssociation",
                                "description": "An association type referencing issues in Jira.\n",
                                "type": "object",
                                "required": [
                                  "associationType",
                                  "values"
                                ],
                                "properties": {
                                  "associationType": {
                                    "description": "Defines the asssociation type.\n",
                                    "type": "string",
                                    "enum": [
                                      "issueKeys"
                                    ],
                                    "example": "issueKeys"
                                  },
                                  "values": {
                                    "description": "The Jira issue keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                    "type": "array",
                                    "items": {
                                      "title": "IssueKey",
                                      "description": "An issue key that references an issue in Jira.\n",
                                      "type": "string",
                                      "pattern": "^\\w{1,255}-\\d{1,255}$",
                                      "example": "ABC-123"
                                    },
                                    "minItems": 1,
                                    "maxItems": 500
                                  }
                                },
                                "example": {
                                  "associationType": "issueKeys",
                                  "values": [
                                    "ABC-123",
                                    "ABC-456"
                                  ]
                                }
                              },
                              {
                                "title": "ServiceIdOrKeysAssociation",
                                "description": "An association type referencing service id or keys.\n",
                                "type": "object",
                                "required": [
                                  "associationType",
                                  "values"
                                ],
                                "properties": {
                                  "associationType": {
                                    "description": "Defines the asssociation type.\n",
                                    "type": "string",
                                    "enum": [
                                      "serviceIdOrKeys"
                                    ],
                                    "example": "serviceIdOrKeys"
                                  },
                                  "values": {
                                    "description": "The service id or keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                    "type": "array",
                                    "items": {
                                      "title": "ServiceIdOrKeys",
                                      "description": "A service id or service key.\n",
                                      "type": "string",
                                      "maxLength": 255,
                                      "example": "some-service-key"
                                    },
                                    "minItems": 1,
                                    "maxItems": 500
                                  }
                                },
                                "example": {
                                  "associationType": "serviceIdOrKeys",
                                  "values": [
                                    "some-service-key"
                                  ]
                                }
                              }
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 2
                        },
                        "status": {
                          "title": "RemoteLinkStatus",
                          "description": "The status of a Remote Link.\n",
                          "type": "object",
                          "required": [
                            "appearance",
                            "label"
                          ],
                          "properties": {
                            "appearance": {
                              "description": "Appearance is a fixed set of appearance types affecting the colour\nof the status lozenge in the UI. The colours they correspond to are\nequivalent to atlaskit's [Lozenge](https://atlaskit.atlassian.com/packages/core/lozenge) component.\n",
                              "type": "string",
                              "enum": [
                                "default",
                                "inprogress",
                                "moved",
                                "new",
                                "removed",
                                "prototype",
                                "success"
                              ],
                              "example": "inprogress"
                            },
                            "label": {
                              "description": "The human-readable description for the Remote Link status.\n\nWill be shown in the UI.\n",
                              "type": "string",
                              "maxLength": 255,
                              "example": "ANOMALOUS"
                            }
                          }
                        },
                        "actionIds": {
                          "description": "Optional list of actionIds. They are associated with the actions the provider is able to provide when they\nregistered. Indicates which actions this Remote Link has.\n\nIf any actions have a templateUrl that requires string substitution, then `attributeMap` must be passed in.\n",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "action-111-222-333",
                            "action-444-555-666"
                          ],
                          "maxItems": 10
                        },
                        "attributeMap": {
                          "description": "Map of key/values (string to string mapping). This is used to build the urls for actions from the\ntemplateUrl the provider registered their available actions with.\n",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "providerMetadata": {
                    "title": "ProviderMetadata",
                    "description": "Information about the provider. This is useful for auditing, logging, debugging, and other internal uses. It is\nnot considered private information. Hence, it may not contain personally identifiable information.\n",
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "description": "An optional name of the source of the Remote Links data.",
                        "example": "Opsgenie 6.10.2"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Remote Links data to submit.\n",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submission accepted. Each submitted Remote Link that is of a valid format will be eventually available in\nJira.\n\nDetails of which Remote Links were submitted and which failed submission (due to data format problems etc.)\nare available in the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The result of a successful `submitRemoteLinks` request.\n",
                  "type": "object",
                  "properties": {
                    "acceptedRemoteLinks": {
                      "description": "The IDs of Remote Links that have been accepted for submission.\n\nA Remote Link may be rejected if it was only associated with unknown issue keys, unknown service IDs, or if\nthe submitted data for that Remote Link does not match the required schema.\n\nNote that a Remote Link that isn't updated due to it's `updateSequenceNumber` being out of order is not\nconsidered a failed submission.\n",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "111-222-333",
                        "444-555-666"
                      ]
                    },
                    "rejectedRemoteLinks": {
                      "description": "Details of Remote Links that have not been accepted for submission, usually due to a problem with the request data.\n\nA Remote Link may be rejected if it was only associated with unknown issue keys, unknown service IDs, or\nif the submitted data for the Remote Link does not match the required schema.\n\nThe object (if present) will be keyed by Remote Link ID and include any errors associated with that\nRemote Link that have prevented it being submitted.\n",
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "description": "A message supplied in the case of an error.",
                          "type": "object",
                          "required": [
                            "message"
                          ],
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "A human-readable message describing the error."
                            },
                            "errorTraceId": {
                              "type": "string",
                              "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                            }
                          }
                        }
                      }
                    },
                    "unknownAssociations": {
                      "description": "Issue keys or services IDs or keys that are not known on this Jira instance (if any).\n",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "IssueKeysAssociation",
                            "description": "An association type referencing issues in Jira.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "issueKeys"
                                ],
                                "example": "issueKeys"
                              },
                              "values": {
                                "description": "The Jira issue keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "title": "IssueKey",
                                  "description": "An issue key that references an issue in Jira.\n",
                                  "type": "string",
                                  "pattern": "^\\w{1,255}-\\d{1,255}$",
                                  "example": "ABC-123"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "issueKeys",
                              "values": [
                                "ABC-123",
                                "ABC-456"
                              ]
                            }
                          },
                          {
                            "title": "ServiceIdOrKeysAssociation",
                            "description": "An association type referencing service id or keys.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "serviceIdOrKeys"
                                ],
                                "example": "serviceIdOrKeys"
                              },
                              "values": {
                                "description": "The service id or keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "title": "ServiceIdOrKeys",
                                  "description": "A service id or service key.\n",
                                  "type": "string",
                                  "maxLength": 255,
                                  "example": "some-service-key"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "serviceIdOrKeys",
                              "values": [
                                "some-service-key"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request has incorrect format.\n\nNote that in the case of an individual Remote Link having an invalid format (rather than the request as a\nwhole) the response for the request will be a 202 and details of the invalid Remote Link will be contained\nin the response object.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraRemoteLinkInfoProvider` module,\nor the app does not define the 'WRITE' scope.\n"
          },
          "413": {
            "description": "Data is too large. Submit fewer Remote Links in each payload.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "WRITE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with a Connect JWT token that corresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraRemoteLinkInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/remotelinks/1.0/bulkByProperties": {
      "delete": {
        "operationId": "deleteRemoteLinksByProperty",
        "summary": "Delete Remote Links by Property",
        "tags": [
          "Remote Links"
        ],
        "description": "Bulk delete all Remote Links data that match the given request.\n\nOne or more query params must be supplied to specify Properties to delete by.\nOptional param `_updateSequenceNumber` is no longer supported. If more than one Property is provided,\ndata will be deleted that matches ALL of the Properties (e.g. treated as an AND).\n\nSee the documentation for the `submitRemoteLinks` operation for more details.\n\ne.g. DELETE /bulkByProperties?accountId=account-123&repoId=repo-345\n\nDeletion is performed asynchronously. The `getRemoteLinkById` operation can be used to confirm that data has been\ndeleted successfully (if needed).\n\nOnly Connect apps that define the `jiraRemoteLinkInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n\nIf not provided, all stored data that matches the request will be deleted.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "params",
            "in": "query",
            "description": "Free-form query parameters to specify which properties to delete by. Properties refer to the arbitrary\ninformation the provider tagged Remote Links with previously.\n\nFor example, if the provider previously tagged a remote link with accountId:\n  \"properties\": {\n    \"accountId\": \"account-123\"\n  }\n\nAnd now they want to delete Remote Links in bulk by that specific accountId as follows:\ne.g. DELETE /bulkByProperties?accountId=account-123\n",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete accepted. Data will eventually be removed from Jira.\n"
          },
          "400": {
            "description": "Request has incorrect format (e.g. missing at least one Property param).\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraRemoteLinkInfoProvider` module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that\ncorresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraRemoteLinkInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    },
    "/remotelinks/1.0/remotelink/{remoteLinkId}": {
      "get": {
        "operationId": "getRemoteLinkById",
        "summary": "Get a Remote Link by ID",
        "tags": [
          "Remote Links"
        ],
        "description": "Retrieve the currently stored Remote Link data for the given ID.\n\nThe result will be what is currently stored, ignoring any pending updates or deletes.\n\nOnly Connect apps that define the `jiraRemoteLinkInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "remoteLinkId",
            "in": "path",
            "description": "The ID of the Remote Link to fetch.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Remote Link data currently stored for the given ID.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RemoteLinkData",
                  "description": "Data related to a single Remote Link.\n",
                  "required": [
                    "id",
                    "updateSequenceNumber",
                    "displayName",
                    "url",
                    "type",
                    "lastUpdated"
                  ],
                  "properties": {
                    "schemaVersion": {
                      "description": "The schema version used for this data.\n\nPlaceholder to support potential schema changes in the future.\n",
                      "type": "string",
                      "enum": [
                        "1.0"
                      ],
                      "default": "1.0",
                      "example": "1.0"
                    },
                    "id": {
                      "description": "The identifier for the Remote Link. Must be unique for a given Provider.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "111-222-333"
                    },
                    "updateSequenceNumber": {
                      "description": "An ID used to apply an ordering to updates for this Remote Link in the case of out-of-order receipt of\nupdate requests.\n\nIt must be a monotonically increasing number. For example, epoch time could be one way to generate the\n`updateSequenceNumber`.\n\nUpdates for a Remote Link that is received with an `updateSqeuenceNumber` less than or equal to what is currently\nstored will be ignored.\n",
                      "type": "integer",
                      "format": "int64",
                      "example": 1523494301448
                    },
                    "displayName": {
                      "description": "The human-readable name for the Remote Link.\n\nWill be shown in the UI.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "Remote Link #42"
                    },
                    "url": {
                      "description": "The URL to this Remote Link in your system.\n",
                      "type": "string",
                      "maxLength": 2000,
                      "format": "uri"
                    },
                    "type": {
                      "description": "The type of the Remote Link. The current supported types are 'document', 'alert', 'test',\n'security', 'logFile', 'prototype', 'coverage', 'bugReport' and 'other'\n",
                      "type": "string",
                      "enum": [
                        "document",
                        "alert",
                        "test",
                        "security",
                        "logFile",
                        "prototype",
                        "coverage",
                        "bugReport",
                        "other"
                      ],
                      "example": "security"
                    },
                    "description": {
                      "description": "An optional description to attach to this Remote Link.\n\nThis may be anything that makes sense in your system.\n",
                      "type": "string",
                      "maxLength": 255,
                      "example": "Remote Link #42 with more information in this description"
                    },
                    "lastUpdated": {
                      "description": "The last-updated timestamp to present to the user as a summary of when Remote Link was last updated.\n",
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-01-20T23:27:25.000Z"
                    },
                    "associations": {
                      "description": "The entities to associate the Remote Link information with.\n",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "IssueKeysAssociation",
                            "description": "An association type referencing issues in Jira.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "issueKeys"
                                ],
                                "example": "issueKeys"
                              },
                              "values": {
                                "description": "The Jira issue keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "title": "IssueKey",
                                  "description": "An issue key that references an issue in Jira.\n",
                                  "type": "string",
                                  "pattern": "^\\w{1,255}-\\d{1,255}$",
                                  "example": "ABC-123"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "issueKeys",
                              "values": [
                                "ABC-123",
                                "ABC-456"
                              ]
                            }
                          },
                          {
                            "title": "ServiceIdOrKeysAssociation",
                            "description": "An association type referencing service id or keys.\n",
                            "type": "object",
                            "required": [
                              "associationType",
                              "values"
                            ],
                            "properties": {
                              "associationType": {
                                "description": "Defines the asssociation type.\n",
                                "type": "string",
                                "enum": [
                                  "serviceIdOrKeys"
                                ],
                                "example": "serviceIdOrKeys"
                              },
                              "values": {
                                "description": "The service id or keys to associate the Remote Link information with.\n\nThe number of values counted across all associationTypes (issueKeys,\nissueIdOrKeys and serviceIdOrKeys) must not exceed a limit of 500.\n",
                                "type": "array",
                                "items": {
                                  "title": "ServiceIdOrKeys",
                                  "description": "A service id or service key.\n",
                                  "type": "string",
                                  "maxLength": 255,
                                  "example": "some-service-key"
                                },
                                "minItems": 1,
                                "maxItems": 500
                              }
                            },
                            "example": {
                              "associationType": "serviceIdOrKeys",
                              "values": [
                                "some-service-key"
                              ]
                            }
                          }
                        ]
                      },
                      "minItems": 1,
                      "maxItems": 2
                    },
                    "status": {
                      "title": "RemoteLinkStatus",
                      "description": "The status of a Remote Link.\n",
                      "type": "object",
                      "required": [
                        "appearance",
                        "label"
                      ],
                      "properties": {
                        "appearance": {
                          "description": "Appearance is a fixed set of appearance types affecting the colour\nof the status lozenge in the UI. The colours they correspond to are\nequivalent to atlaskit's [Lozenge](https://atlaskit.atlassian.com/packages/core/lozenge) component.\n",
                          "type": "string",
                          "enum": [
                            "default",
                            "inprogress",
                            "moved",
                            "new",
                            "removed",
                            "prototype",
                            "success"
                          ],
                          "example": "inprogress"
                        },
                        "label": {
                          "description": "The human-readable description for the Remote Link status.\n\nWill be shown in the UI.\n",
                          "type": "string",
                          "maxLength": 255,
                          "example": "ANOMALOUS"
                        }
                      }
                    },
                    "actionIds": {
                      "description": "Optional list of actionIds. They are associated with the actions the provider is able to provide when they\nregistered. Indicates which actions this Remote Link has.\n\nIf any actions have a templateUrl that requires string substitution, then `attributeMap` must be passed in.\n",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "action-111-222-333",
                        "action-444-555-666"
                      ],
                      "maxItems": 10
                    },
                    "attributeMap": {
                      "description": "Map of key/values (string to string mapping). This is used to build the urls for actions from the\ntemplateUrl the provider registered their available actions with.\n",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraRemoteLinkInfoProvider` module,\nor the app does not define the 'READ' scope.\n"
          },
          "404": {
            "description": "No Remote Link data found for the given ID.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "delete": {
        "operationId": "deleteRemoteLinkById",
        "summary": "Delete a Remote Link by ID",
        "tags": [
          "Remote Links"
        ],
        "description": "Delete the Remote Link data currently stored for the given ID.\n\nDeletion is performed asynchronously. The `getRemoteLinkById` operation can be used to confirm that data has been\ndeleted successfully (if needed).\n\nOnly Connect apps that define the `jiraRemoteLinkInfoProvider` module, and on-premise integrations, can access this resource.\nThis resource requires the 'WRITE' scope for Connect apps.\n",
        "parameters": [
          {
            "name": "remoteLinkId",
            "in": "path",
            "description": "The ID of the Remote Link to fetch.\n",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "_updateSequenceNumber",
            "in": "query",
            "deprecated": true,
            "description": "This parameter usage is no longer supported.\n\nAn optional `_updateSequenceNumber` to use to control deletion.\n\nOnly stored data with an `updateSequenceNumber` less than or equal to that provided will be deleted.\nThis can be used help ensure submit/delete requests are applied correctly if issued close together.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete has been accepted. Data will eventually be removed from Jira if it exists.\n"
          },
          "401": {
            "description": "Missing a JWT token, or token is invalid.\n"
          },
          "403": {
            "description": "The JWT token used does not correspond to an app that defines the `jiraRemoteLinkInfoProvider` module,\nor the app does not define the 'DELETE' scope.\n"
          },
          "429": {
            "description": "API rate limit has been exceeded.\n"
          },
          "503": {
            "description": "Service is unavailable due to maintenance or other reasons.\n"
          },
          "default": {
            "description": "An unknown error has occurred.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Messages supplied in the case of an error.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "description": "A message supplied in the case of an error.",
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "A human-readable message describing the error."
                      },
                      "errorTraceId": {
                        "type": "string",
                        "description": "An optional trace ID that can be used by Jira developers to locate the source of the error."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      },
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "All requests must be signed with either a Connect JWT token or OAuth token for an on-premise integration that\ncorresponds to an app installed in Jira.\n\nIf the Connect JWT token corresponds to an app that does not define `jiraRemoteLinkInfoProvider` module it will be rejected with a 403.\n\nSee https://developer.atlassian.com/blog/2015/01/understanding-jwt/ for more details about Connect JWT tokens.\nSee https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/ for details about on-premise integrations.\n",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "JWT \\S+"
          }
        }
      ]
    }
  },
  "externalDocs": {
    "description": "Find out more about Atlassian things",
    "url": "https://www.atlassian.com"
  },
  "x-atlassian-narrative": {
    "documents": [
      {
        "title": "Introduction",
        "anchor": "introduction",
        "body": "Welcome to the Jira Software Cloud REST API reference. You can use this REST API to build add-ons for Jira Software,\ndevelop integrations between Jira Software and other applications, or script interactions with Jira Software. This page\ndocuments the REST resources available in Jira Software Cloud, along with expected HTTP response codes and sample\nrequests.\n\nJira Software is built on the Jira platform. As such, there is an overlap in functionality\nbetween what is provided by Jira Software and what is provided by the Jira platform. The REST API reference for the\nJira Cloud platform is here: [Jira Cloud platform REST API](https://developer.atlassian.com/cloud/jira/platform/rest).\n\n## Authentication\n\n### Authentication for Atlassian Connect add-ons\n\nIf you are integrating with the Jira REST APIs via an Atlassian Connect add-on, API calls are authenticated via JWT\n(JSON Web Tokens). This is built into the supported Atlassian Connect libraries. At a high level, authentication works\nby the add-on exchanging a security context with the application. This context is used to create and validate JWT\ntokens, embedded in API calls. To learn more, read the [Atlassian Connect authentication documentation](https://developer.atlassian.com/cloud/jira/platform/authentication-for-apps/).\n\nSome integration APIs such as [Feature Flags](#api-group-Feature-Flags) are only available to Atlassian Connect apps that\ndefine the relevant [module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) related to that API.\nOther APIs, such as the [Development Information](#api-group-Development-Information), [Builds](#api-group-Builds), and [Deployments](#api-group-Deployments) APIs\nare available to both Atlassian Connect apps and on-premises tools using Jira Software's \n[OAuth credentials](https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/) for system-to-system integration.\n\n### Authentication for REST API requests\n\nIf you are integrating directly with the REST APIs, rather than via an Atlassian Connect add-on, use one of the\nauthentication methods listed below:\n\n * [OAuth (1.0a)](https://developer.atlassian.com/cloud/jira/platform/jira-rest-api-oauth-authentication) -\n This token-based method is the recommended method. It is more flexible and secure than other options.\n * [Basic HTTP](https://developer.atlassian.com/cloud/jira/platform/jira-rest-api-basic-authentication/) -\n This method is only recommended for tools like scripts or bots. It is easier to implement, but much less secure.\n\nNote, Jira itself uses cookie-based authentication in the browser, so you can call REST from Javascript on the page and\nrely on the authentication that the browser has established. To reproduce the behavior of the Jira log-in page (for\nexample, to display authentication error messages to users) can `POST` to the `/auth/1/session` [resource](https://docs.atlassian.com/jira/REST/cloud/#auth/1/session).\n\n### Authentication for on-premises integrations\n\nIf you are integrating an on-premises app with the Jira REST APIs, API calls are authenticated via an OAuth token. \nTo obtain a token, create a set of OAuth credentials with permissions for the APIs that app needs to access. \nUse the credentials to request a token by calling `https://api.atlassian.com/oauth/token`. \nSee [Integrating Jira Software Cloud with on-premises tools](https://developer.atlassian.com/cloud/jira/software/integrate-jsw-cloud-with-onpremises-tools/) for details. \nNote that only the [Development Information](#api-group-Development-Information), [Builds](#api-group-Builds), and [Deployments](#api-group-Deployments) APIs are currently available for on-premises integrations.\nTo simplify development, we have a separate [downloadable API spec](https://developer.atlassian.com/cloud/jira/software/on-premise-swagger.json).\n\nAtlassian has developed an [open source plugin for Jenkins](https://github.com/jenkinsci/atlassian-jira-software-cloud-plugin), which you can use to bootstrap development. \nThis plugin uses the authentication method described above and calls the Builds and Deployments APIs.\n\n\n#### Base URL differences\n\nWhen building an on-premises integration, the base URL for API operations is different to the base URL used for Connect apps. This is because requests from on-premises integrations (OAuth) need to be sent via the Atlassian API proxy at `https://api.atlassian.com`.\n\nThis document does not display the base URLs used by on-premises integrations. Therefore, when using an operation, you must replace `https://your-domain.atlassian.net/rest/{type}/{version}/{operation}`\nwith `https://api.atlassian.com/jira/{type}/{version}/cloud/{cloudId}/{operation}`.\n\nFor example:\n* Builds API: Change the path from `https://your-domain.atlassian.net/rest/builds/0.1/bulk` to `https://api.atlassian.com/jira/builds/0.1/cloud/{cloudId}/bulk`.\n* Development Information: Change the path from `https://your-domain.atlassian.net/rest/devinfo/0.10/bulk` to `https://api.atlassian.com/jira/devinfo/0.1/cloud/{cloudId}/bulk`. Note the version change.\n* Deployments: Change the path from `https://your-domain.atlassian.net/rest/deployments/0.1/bulk` to `https://api.atlassian.com/jira/deployments/0.1/cloud/{cloudId}/bulk`.\n\nNote, get the `cloudId` for a Jira instance by calling `https://your-domain.atlassian.net/_edge/tenant_info`.\n\n\n## URI structure\n\nJira Agile's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application\nwill make an HTTP request and parse the response. The Jira Agile REST API uses [JSON](http://en.wikipedia.org/wiki/JSON)\nas its communication format, and the standard HTTP methods like `GET`, `PUT`, `POST` and `DELETE` (see API descriptions\nbelow for which methods are available for each resource). URIs for Jira Agile's REST API resource have the following\nstructure:\n\n    http://host:port/context/rest/api-name/api-version/resource-name\n\nCurrently there are two API names available, which will be discussed further below:\n\n * `auth` - for authentication-related operations, and\n * `api` - for everything else.\n\nThe current API version is `1`. However, there is also a symbolic version, called `latest`, which resolves to the\nlatest version supported by the given Jira Software Cloud instance. For example, if you wanted to retrieve the JSON\nrepresentation of a board with `boardId=123`, from a Jira Software Cloud instance at `https://jira.atlassian.net`, you\nwould access:\n\n    https://jira.atlassian.net/rest/agile/latest/board/123\n\n## Pagination\n\nPagination is used for the Jira REST APIs to conserve server resources and limit response size for resources that\nreturn potentially large collection of items. A request to a pages API will result in a values array wrapped in a JSON\nobject with some paging metadata, like this:\n\n#### Request\n\n    http://host:port/context/rest/api-name/api-version/resource-name?startAt=0&maxResults=10\n\n#### Response\n\n```javascript\n{\n    \"startAt\" : 0,\n    \"maxResults\" : 10,\n    \"total\": 200,\n    \"values\": [\n        { /* result 0 */ },\n        { /* result 1 */ },\n        { /* result 2 */ }\n    ]\n}\n```\n\n * `startAt` - the item used as the first item in the page of results.\n * `maxResults` - how many results to return per page.\n * `total` - the number of items that the calling user has permissions for. This number *may change* while the client requests the next pages. A client should always assume that the requested page can be empty. REST API consumers should also consider the field to be optional. This value may not be included in the response, if it is too expensive to calculate.\n\nClients can use the `startAt`, `maxResults`, and `total` parameters to retrieve the desired number of results. Note,\neach API resource or method may have a different limit on the number of items returned, which means you can ask for\nmore than you are given. The actual number of items returned is an implementation detail and this can be changed over\ntime.\n\n## Experimental methods\n\nMethods marked as experimental may change without an earlier notice. We are looking for your feedback for these methods.\n\n## Query parameters\n\nAll query parameters for the resources described below are optional, unless specified otherwise.\n\n## Special Request and Response headers\n\n -   **X-Atlassian-Token** (request): Operations that accept multipart/form-data must include the `X-Atlassian-Token: no-check` header in requests. \nOtherwise the request will be blocked by XSRF protection.\n-   **X-AACCOUNTID** (response): This response header contains the Atlassian account ID of the authenticated user.\n\n## Jira Software field input formats\n\nJira Software provides a number of custom fields, which are made available in the Jira platform REST API. The custom\nfields are: `Sprint`, `Epic link`, `Epic name`, and `Story points`.\n\nYou can read and edit these custom fields via the [issue resource](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue)\nof the Jira Platform REST API. In order to identify the custom field that you want to read or edit, you'll need the\ncustom field id. To obtain the custom field id, retrieve the list of fields from the [fields resource](https://docs.atlassian.com/jira/REST/latest/#api/2/field-getFields)\nand search for the custom field. It's better to find the field based on the schema where possible (e.g. the Sprint\nfield is identified by \"`com.pyxis.greenhopper.jira:gh-sprint`\"), as custom field names are mutable. The custom field\nid will be in the id, (e.g. `id: customfield_10007`).\n\nIf you only need to get the value of the custom field for a single issue, you may want to use the [issue resource](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssue)\nprovided by the Jira Software REST API instead. This resource returns the issue with all Jira Software-specific fields,\nincluding the fields listed above. These fields will also be formatted as proper fields with keys, in the response.\n\nNote, Jira Software also has a number of internal custom fields, which are: `Epic Color`, `Epic Status`, `Flag`, `Rank`.\nThese internal fields shouldn't be read or updated using the REST API and are not documented below.\n\n##### Sprint custom field\n\nThe Sprint custom field contains a list of sprints for a given issue. This list includes the active/future sprint that\nthe issue is currently in, as well as any closed sprints that the issue was in previously.\n\nFor legacy reasons, the [Get issue (Jira platform) method](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getIssue)\nreturns the Sprint custom field with sprints in a `toString` format, which is difficult to parse. See the example below.\n\n_**Deprecation notice:** The `toString` representation of sprints in the Sprint custom field that is returned by Get\nissue (Jira platform) will soon be removed. See the [notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-tostring-representation-of-sprints-in-get-issue-response/)._\n\n###### Example - Get issue (Jira platform) response\n\n```javascript\ncustomfield_11458\": [\n    \"com.atlassian.greenhopper.service.sprint.Sprint@1bf75fd[id=1,rapidViewId=1,state=CLOSED,name=Sprint 1,goal=Sprint 1 goal,startDate=2016-06-06T21:30:53.537+10:00,endDate=2016-06-20T21:30:00.000+10:00,completeDate=2016-06-06T21:30:57.523+10:00,sequence=1]\",\n    \"com.atlassian.greenhopper.service.sprint.Sprint@1689feb[id=2,rapidViewId=1,state=FUTURE,name=Sprint 2,goal=Sprint 2 goal,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2]\"\n]\n```\n\nIf you want to parse the sprint information, use either the [Get issue (Jira Software) method](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-getIssue)\nor [Get issue (Jira platform) method](https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getIssue) with expanded\n`versionedRepresentations` instead, both of which return sprints in a proper format. See the example below.\n\n###### Example - Get issue (Jira platform) response with expanded versionedRepresentations\n\n```javascript\n\"customfield_10021\": {\n    \"1\": [\n        \"com.atlassian.greenhopper.service.sprint.Sprint@1bf75fd[id=1,rapidViewId=1,state=CLOSED,name=Sprint 1,goal=Sprint 1 goal,startDate=2016-06-06T21:30:53.537+10:00,endDate=2016-06-20T21:30:00.000+10:00,completeDate=2016-06-06T21:30:57.523+10:00,sequence=1]\",\n        \"com.atlassian.greenhopper.service.sprint.Sprint@1689feb[id=2,rapidViewId=1,state=FUTURE,name=Sprint 2,goal=Sprint 2 goal,startDate=<null>,endDate=<null>,completeDate=<null>,sequence=2]\"\n    ],\n    \"2\": [\n        {\n            \"id\": 1,\n            \"name\": \"Sprint 1\",\n            \"state\": \"closed\",\n            \"boardId\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Sprint 2\",\n            \"state\": \"future\",\n            \"boardId\": 1\n        }\n    ]\n}\n```\n\nIf you want to update a sprint, you need to know the sprint id, which is a number. See the example below. Note, an\nissue can only be in one active or future sprint at a time, and only the active/future sprint can edited.\n\n###### Example - Update issue request\n\n```javascript\n\"customfield_10021\": 2\n```\n\n##### Epic link custom field\n\nThe Epic link custom field contains the key of an epic that a given issue belongs to. Be aware that only the issue key\nof the existing epic can be set. Also, the Epic link cannot be set for sub-tasks and epics.\n\n###### Example\n\n```javascript\n\"customfield_11458\": \"EPIC-1\"\n```\n\n##### Epic Name\n\nThe Epic name custom field contains the name of an epic that a given issue belongs to. Be aware that only the issue key\nof the existing epic can be set. Also, the epic link cannot be set for sub-tasks and epics.\n\n###### Example\n\n```javascript\n\"customfield_11410\": \"Epic Name\"\n```\n\n##### Estimation\n\nJira Software provides a `Story Points` custom field, however the field is just a regular numeric field. The type of\nestimation and field used for estimation is determined by the board configuration. You can get this from the\n[board configuration resource](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/board-getConfiguration).\nNote that if the estimation field is not on a screen, it cannot be edited, and you should use the\n[Estimate issue for board method](https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-estimateIssueForBoard) instead.\n"
      }
    ]
  },
  "servers": [
    {
      "url": "//your-domain.atlassian.net/rest"
    }
  ],
  "components": {
    "requestBodies": {
      "IssueRankRequestBean": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "rankBeforeIssue": {
                  "type": "string"
                },
                "rankAfterIssue": {
                  "type": "string"
                },
                "rankCustomFieldId": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "required": true,
        "x-examples": {
          "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"],\"rankBeforeIssue\":\"PR-4\",\"rankCustomFieldId\":10521}"
        }
      },
      "IssueAssignRequestBean": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "issues": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": true,
        "x-examples": {
          "application/json": "{\"issues\":[\"PR-1\",\"10001\",\"PR-3\"]}"
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "description": "You can access this resource via basic auth.",
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "IssueRankRequestBean": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rankBeforeIssue": {
            "type": "string"
          },
          "rankAfterIssue": {
            "type": "string"
          },
          "rankCustomFieldId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FieldEditBean": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "IssueAssignRequestBean": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EpicRankRequestBean": {
        "type": "object",
        "properties": {
          "rankBeforeEpic": {
            "type": "string"
          },
          "rankAfterEpic": {
            "type": "string"
          },
          "rankCustomFieldId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ColorBean": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "color_1",
              "color_2",
              "color_3",
              "color_4",
              "color_5",
              "color_6",
              "color_7",
              "color_8",
              "color_9",
              "color_10",
              "color_11",
              "color_12",
              "color_13",
              "color_14"
            ]
          }
        }
      },
      "EpicUpdateBean": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "color": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "enum": [
                  "color_1",
                  "color_2",
                  "color_3",
                  "color_4",
                  "color_5",
                  "color_6",
                  "color_7",
                  "color_8",
                  "color_9",
                  "color_10",
                  "color_11",
                  "color_12",
                  "color_13",
                  "color_14"
                ]
              }
            }
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "SprintCreateBean": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "originBoardId": {
            "type": "integer",
            "format": "int64"
          },
          "goal": {
            "type": "string"
          }
        }
      },
      "SprintBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "self": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "completeDate": {
            "type": "string"
          },
          "originBoardId": {
            "type": "integer",
            "format": "int64"
          },
          "goal": {
            "type": "string"
          }
        }
      },
      "SprintSwapBean": {
        "type": "object",
        "properties": {
          "sprintToSwapWith": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FeatureResponseBean": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "boardFeature": {
                  "type": "string",
                  "enum": [
                    "SIMPLE_ROADMAP",
                    "BACKLOG",
                    "SPRINTS",
                    "DEVTOOLS",
                    "REPORTS",
                    "ESTIMATION",
                    "PAGES",
                    "CODE",
                    "RELEASES",
                    "DEPLOYMENTS",
                    "ISSUE_NAVIGATOR",
                    "ON_CALL_SCHEDULE",
                    "BOARD"
                  ]
                },
                "boardId": {
                  "type": "integer",
                  "format": "int64"
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "COMING_SOON"
                  ]
                },
                "localisedName": {
                  "type": "string"
                },
                "localisedDescription": {
                  "type": "string"
                },
                "learnMoreLink": {
                  "type": "string"
                },
                "imageUri": {
                  "type": "string"
                },
                "toggleLocked": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "FeatureBean": {
        "type": "object",
        "properties": {
          "boardFeature": {
            "type": "string",
            "enum": [
              "SIMPLE_ROADMAP",
              "BACKLOG",
              "SPRINTS",
              "DEVTOOLS",
              "REPORTS",
              "ESTIMATION",
              "PAGES",
              "CODE",
              "RELEASES",
              "DEPLOYMENTS",
              "ISSUE_NAVIGATOR",
              "ON_CALL_SCHEDULE",
              "BOARD"
            ]
          },
          "boardId": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED",
              "COMING_SOON"
            ]
          },
          "localisedName": {
            "type": "string"
          },
          "localisedDescription": {
            "type": "string"
          },
          "learnMoreLink": {
            "type": "string"
          },
          "imageUri": {
            "type": "string"
          },
          "toggleLocked": {
            "type": "boolean"
          }
        }
      },
      "FeatureToggleRequestBean": {
        "type": "object",
        "properties": {
          "boardId": {
            "type": "integer",
            "format": "int64"
          },
          "feature": {
            "type": "string"
          },
          "enabling": {
            "type": "boolean"
          }
        }
      },
      "PageBeanBoardBean": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "format": "int32"
          },
          "startAt": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "isLast": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "admins": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                            "readOnly": true
                          },
                          "self": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the user.",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                            "readOnly": true
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                            "readOnly": true
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Whether the user is active.",
                            "readOnly": true
                          },
                          "accountId": {
                            "type": "string",
                            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                          },
                          "avatarUrls": {
                            "type": "object",
                            "description": "The avatars of the user.",
                            "readOnly": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "24x24": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL of the user's 24x24 pixel avatar.",
                                    "readOnly": true
                                  },
                                  "16x16": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL of the user's 16x16 pixel avatar.",
                                    "readOnly": true
                                  },
                                  "32x32": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL of the user's 32x32 pixel avatar.",
                                    "readOnly": true
                                  },
                                  "48x48": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The URL of the user's 48x48 pixel avatar.",
                                    "readOnly": true
                                  }
                                },
                                "description": "Details of a user's avatars."
                              }
                            ]
                          }
                        },
                        "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "self": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "projectId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "userAccountId": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "projectName": {
                      "type": "string"
                    },
                    "projectKey": {
                      "type": "string"
                    },
                    "projectTypeKey": {
                      "type": "string"
                    },
                    "avatarURI": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "canEdit": {
                  "type": "boolean"
                },
                "isPrivate": {
                  "type": "boolean"
                },
                "favourite": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "BasicUser": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
            "readOnly": true
          },
          "self": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active.",
            "readOnly": true
          },
          "accountId": {
            "type": "string",
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
          },
          "avatarUrls": {
            "type": "object",
            "description": "The avatars of the user.",
            "readOnly": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "24x24": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the user's 24x24 pixel avatar.",
                    "readOnly": true
                  },
                  "16x16": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the user's 16x16 pixel avatar.",
                    "readOnly": true
                  },
                  "32x32": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the user's 32x32 pixel avatar.",
                    "readOnly": true
                  },
                  "48x48": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the user's 48x48 pixel avatar.",
                    "readOnly": true
                  }
                },
                "description": "Details of a user's avatars."
              }
            ]
          }
        },
        "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
      },
      "BoardAdminsBean": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                  "readOnly": true
                },
                "self": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the user.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                  "readOnly": true
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                  "readOnly": true
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether the user is active.",
                  "readOnly": true
                },
                "accountId": {
                  "type": "string",
                  "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                },
                "avatarUrls": {
                  "type": "object",
                  "description": "The avatars of the user.",
                  "readOnly": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "24x24": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the user's 24x24 pixel avatar.",
                          "readOnly": true
                        },
                        "16x16": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the user's 16x16 pixel avatar.",
                          "readOnly": true
                        },
                        "32x32": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the user's 32x32 pixel avatar.",
                          "readOnly": true
                        },
                        "48x48": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the user's 48x48 pixel avatar.",
                          "readOnly": true
                        }
                      },
                      "description": "Details of a user's avatars."
                    }
                  ]
                }
              },
              "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "BoardBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "self": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "admins": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The key of the user.",
                      "readOnly": true
                    },
                    "self": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URL of the user.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "This property is deprecated in favor of <code>accountId</code> because of privacy changes. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">migration guide</a> for details. <br>The username of the user. ",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.",
                      "readOnly": true
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the user is active.",
                      "readOnly": true
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                    },
                    "avatarUrls": {
                      "type": "object",
                      "description": "The avatars of the user.",
                      "readOnly": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "24x24": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URL of the user's 24x24 pixel avatar.",
                              "readOnly": true
                            },
                            "16x16": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URL of the user's 16x16 pixel avatar.",
                              "readOnly": true
                            },
                            "32x32": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URL of the user's 32x32 pixel avatar.",
                              "readOnly": true
                            },
                            "48x48": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URL of the user's 48x48 pixel avatar.",
                              "readOnly": true
                            }
                          },
                          "description": "Details of a user's avatars."
                        }
                      ]
                    }
                  },
                  "description": "Details of a user's active status, identifiers, name, and avatars as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:<ul><li>User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, <code>displayName</code> provides an indication and other parameters have default values or are blank (for example, email is blank).</li><li>User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, <code>accountId</code> returns <em>unknown</em> and all other parameters have fallback values.</li><li>User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.</li></ul>"
                }
              },
              "groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "projectId": {
                "type": "integer",
                "format": "int64"
              },
              "userId": {
                "type": "integer",
                "format": "int64"
              },
              "userAccountId": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "projectName": {
                "type": "string"
              },
              "projectKey": {
                "type": "string"
              },
              "projectTypeKey": {
                "type": "string"
              },
              "avatarURI": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "canEdit": {
            "type": "boolean"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "favourite": {
            "type": "boolean"
          }
        }
      },
      "BoardLocationBean": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userAccountId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "projectKey": {
            "type": "string"
          },
          "projectTypeKey": {
            "type": "string"
          },
          "avatarURI": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GroupBean": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "self": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PageBean": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "format": "int32"
          },
          "startAt": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "isLast": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {}
          }
        }
      },
      "UserAvatarUrls": {
        "type": "object",
        "properties": {
          "24x24": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's 24x24 pixel avatar.",
            "readOnly": true
          },
          "16x16": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's 16x16 pixel avatar.",
            "readOnly": true
          },
          "32x32": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's 32x32 pixel avatar.",
            "readOnly": true
          },
          "48x48": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the user's 48x48 pixel avatar.",
            "readOnly": true
          }
        },
        "description": "Details of a user's avatars."
      },
      "PageBeanBoardFilterBean": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "format": "int32"
          },
          "startAt": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "isLast": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "BoardFilterBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "self": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchResultsBean": {
        "type": "object",
        "properties": {
          "expand": {
            "type": "string",
            "description": "Expand options that include additional search result details in the response."
          },
          "startAt": {
            "type": "integer",
            "format": "int32",
            "description": "The index of the first item returned on the page."
          },
          "maxResults": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of results that could be on the page."
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "The number of results on the page."
          },
          "issues": {
            "type": "array",
            "description": "The list of issues found by the search.",
            "items": {
              "$ref": "#/components/schemas/IssueBean"
            }
          },
          "warningMessages": {
            "type": "array",
            "description": "Any warnings related to the JQL query.",
            "items": {
              "type": "string"
            }
          },
          "names": {
            "type": "object",
            "description": "The ID and name of each field in the search results.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "schema": {
            "type": "object",
            "description": "The schema describing the field types in the search results.",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The data type of the field."
                },
                "items": {
                  "type": "string",
                  "description": "When the data type is an array, the name of the field items within the array."
                },
                "system": {
                  "type": "string",
                  "description": "If the field is a system field, the name of the field."
                },
                "custom": {
                  "type": "string",
                  "description": "If the field is a custom field, the URI of the field."
                },
                "customId": {
                  "type": "integer",
                  "format": "int64",
                  "description": "If the field is a custom field, the custom ID of the field."
                },
                "configuration": {
                  "type": "object",
                  "description": "If the field is a custom field, the configuration of the field.",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      },
      "AvatarUrls": {
        "type": "object",
        "properties": {
          "16x16": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the item's 16x16 pixel avatar.",
            "readOnly": true
          },
          "24x24": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the item's 24x24 pixel avatar.",
            "readOnly": true
          },
          "32x32": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the item's 32x32 pixel avatar.",
            "readOnly": true
          },
          "48x48": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the item's 48x48 pixel avatar.",
            "readOnly": true
          }
        },
        "description": "Details about the avatars for an item."
      },
      "ChangeHistoryBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the changelog."
          },
          "author": {
            "type": "object",
            "description": "The user who made the change.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the user."
                  },
                  "name": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                  },
                  "key": {
                    "type": "string",
                    "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null."
                  },
                  "avatarUrls": {
                    "type": "object",
                    "description": "The avatars of the user.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "16x16": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the item's 16x16 pixel avatar.",
                            "readOnly": true
                          },
                          "24x24": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the item's 24x24 pixel avatar.",
                            "readOnly": true
                          },
                          "32x32": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the item's 32x32 pixel avatar.",
                            "readOnly": true
                          },
                          "48x48": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the item's 48x48 pixel avatar.",
                            "readOnly": true
                          }
                        },
                        "description": "Details about the avatars for an item."
                      }
                    ]
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value."
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Whether the user is active."
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
                  },
                  "accountType": {
                    "type": "string",
                    "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)"
                  }
                }
              }
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date on which the change took place."
          },
          "items": {
            "type": "array",
            "description": "The list of items changed.",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "The name of the field changed."
                },
                "fieldtype": {
                  "type": "string",
                  "description": "The type of the field changed."
                },
                "fieldId": {
                  "type": "string",
                  "description": "The ID of the field changed."
                },
                "from": {
                  "type": "string",
                  "description": "The details of the original value."
                },
                "fromString": {
                  "type": "string",
                  "description": "The details of the original value as a string."
                },
                "to": {
                  "type": "string",
                  "description": "The details of the new value."
                },
                "toString": {
                  "type": "string",
                  "description": "The details of the new value as a string."
                }
              }
            }
          },
          "historyMetadata": {
            "type": "object",
            "description": "The history metadata associated with the changed.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of the history record."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the history record."
                  },
                  "activityDescription": {
                    "type": "string",
                    "description": "The activity described in the history record."
                  },
                  "activityDescriptionKey": {
                    "type": "string",
                    "description": "The key of the activity described in the history record."
                  },
                  "emailDescription": {
                    "type": "string",
                    "description": "The description of the email address associated the history record."
                  },
                  "emailDescriptionKey": {
                    "type": "string",
                    "description": "The description key of the email address associated the history record."
                  },
                  "actor": {
                    "type": "object",
                    "description": "Details of the user whose action created the history record.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the user or system associated with a history record."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the user or system associated with a history record."
                          },
                          "displayNameKey": {
                            "type": "string",
                            "description": "The key of the display name of the user or system associated with a history record."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the user or system associated with a history record."
                          },
                          "avatarUrl": {
                            "type": "string",
                            "description": "The URL to an avatar for the user or system associated with a history record."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the user or system associated with a history record."
                          }
                        },
                        "description": "Details of user or system associated with a issue history metadata item."
                      }
                    ]
                  },
                  "generator": {
                    "type": "object",
                    "description": "Details of the system that generated the history record.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the user or system associated with a history record."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the user or system associated with a history record."
                          },
                          "displayNameKey": {
                            "type": "string",
                            "description": "The key of the display name of the user or system associated with a history record."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the user or system associated with a history record."
                          },
                          "avatarUrl": {
                            "type": "string",
                            "description": "The URL to an avatar for the user or system associated with a history record."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the user or system associated with a history record."
                          }
                        },
                        "description": "Details of user or system associated with a issue history metadata item."
                      }
                    ]
                  },
                  "cause": {
                    "type": "object",
                    "description": "Details of the cause that triggered the creation the history record.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the user or system associated with a history record."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the user or system associated with a history record."
                          },
                          "displayNameKey": {
                            "type": "string",
                            "description": "The key of the display name of the user or system associated with a history record."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the user or system associated with a history record."
                          },
                          "avatarUrl": {
                            "type": "string",
                            "description": "The URL to an avatar for the user or system associated with a history record."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the user or system associated with a history record."
                          }
                        },
                        "description": "Details of user or system associated with a issue history metadata item."
                      }
                    ]
                  },
                  "extraData": {
                    "type": "object",
                    "description": "Additional arbitrary information about the history record.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "description": "Details of issue history metadata."
              }
            ]
          }
        }
      },
      "ChangeItemBean": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The name of the field changed."
          },
          "fieldtype": {
            "type": "string",
            "description": "The type of the field changed."
          },
          "fieldId": {
            "type": "string",
            "description": "The ID of the field changed."
          },
          "from": {
            "type": "string",
            "description": "The details of the original value."
          },
          "fromString": {
            "type": "string",
            "description": "The details of the original value as a string."
          },
          "to": {
            "type": "string",
            "description": "The details of the new value."
          },
          "toString": {
            "type": "string",
            "description": "The details of the new value as a string."
          }
        }
      },
      "ChangelogBean": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "integer",
            "format": "int32",
            "description": "The index of the first item returned on the page."
          },
          "maxResults": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of results that could be on the page."
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "The number of results on the page."
          },
          "histories": {
            "type": "array",
            "description": "The list of changelogs.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the changelog."
                },
                "author": {
                  "type": "object",
                  "description": "The user who made the change.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "The URL of the user."
                        },
                        "name": {
                          "type": "string",
                          "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                        },
                        "key": {
                          "type": "string",
                          "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                        },
                        "accountId": {
                          "type": "string",
                          "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null."
                        },
                        "avatarUrls": {
                          "type": "object",
                          "description": "The avatars of the user.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "16x16": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The URL of the item's 16x16 pixel avatar.",
                                  "readOnly": true
                                },
                                "24x24": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The URL of the item's 24x24 pixel avatar.",
                                  "readOnly": true
                                },
                                "32x32": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The URL of the item's 32x32 pixel avatar.",
                                  "readOnly": true
                                },
                                "48x48": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The URL of the item's 48x48 pixel avatar.",
                                  "readOnly": true
                                }
                              },
                              "description": "Details about the avatars for an item."
                            }
                          ]
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value."
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Whether the user is active."
                        },
                        "timeZone": {
                          "type": "string",
                          "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
                        },
                        "accountType": {
                          "type": "string",
                          "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)"
                        }
                      }
                    }
                  ]
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date on which the change took place."
                },
                "items": {
                  "type": "array",
                  "description": "The list of items changed.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The name of the field changed."
                      },
                      "fieldtype": {
                        "type": "string",
                        "description": "The type of the field changed."
                      },
                      "fieldId": {
                        "type": "string",
                        "description": "The ID of the field changed."
                      },
                      "from": {
                        "type": "string",
                        "description": "The details of the original value."
                      },
                      "fromString": {
                        "type": "string",
                        "description": "The details of the original value as a string."
                      },
                      "to": {
                        "type": "string",
                        "description": "The details of the new value."
                      },
                      "toString": {
                        "type": "string",
                        "description": "The details of the new value as a string."
                      }
                    }
                  }
                },
                "historyMetadata": {
                  "type": "object",
                  "description": "The history metadata associated with the changed.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of the history record."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the history record."
                        },
                        "activityDescription": {
                          "type": "string",
                          "description": "The activity described in the history record."
                        },
                        "activityDescriptionKey": {
                          "type": "string",
                          "description": "The key of the activity described in the history record."
                        },
                        "emailDescription": {
                          "type": "string",
                          "description": "The description of the email address associated the history record."
                        },
                        "emailDescriptionKey": {
                          "type": "string",
                          "description": "The description key of the email address associated the history record."
                        },
                        "actor": {
                          "type": "object",
                          "description": "Details of the user whose action created the history record.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the user or system associated with a history record."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The display name of the user or system associated with a history record."
                                },
                                "displayNameKey": {
                                  "type": "string",
                                  "description": "The key of the display name of the user or system associated with a history record."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the user or system associated with a history record."
                                },
                                "avatarUrl": {
                                  "type": "string",
                                  "description": "The URL to an avatar for the user or system associated with a history record."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the user or system associated with a history record."
                                }
                              },
                              "description": "Details of user or system associated with a issue history metadata item."
                            }
                          ]
                        },
                        "generator": {
                          "type": "object",
                          "description": "Details of the system that generated the history record.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the user or system associated with a history record."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The display name of the user or system associated with a history record."
                                },
                                "displayNameKey": {
                                  "type": "string",
                                  "description": "The key of the display name of the user or system associated with a history record."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the user or system associated with a history record."
                                },
                                "avatarUrl": {
                                  "type": "string",
                                  "description": "The URL to an avatar for the user or system associated with a history record."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the user or system associated with a history record."
                                }
                              },
                              "description": "Details of user or system associated with a issue history metadata item."
                            }
                          ]
                        },
                        "cause": {
                          "type": "object",
                          "description": "Details of the cause that triggered the creation the history record.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the user or system associated with a history record."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The display name of the user or system associated with a history record."
                                },
                                "displayNameKey": {
                                  "type": "string",
                                  "description": "The key of the display name of the user or system associated with a history record."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the user or system associated with a history record."
                                },
                                "avatarUrl": {
                                  "type": "string",
                                  "description": "The URL to an avatar for the user or system associated with a history record."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the user or system associated with a history record."
                                }
                              },
                              "description": "Details of user or system associated with a issue history metadata item."
                            }
                          ]
                        },
                        "extraData": {
                          "type": "object",
                          "description": "Additional arbitrary information about the history record.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Details of issue history metadata."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "EditMetaBean": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "description": "A list of editable field details.",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "required": {
                  "type": "boolean",
                  "description": "Whether the field is required."
                },
                "schema": {
                  "type": "object",
                  "description": "The data type of the field.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The data type of the field."
                        },
                        "items": {
                          "type": "string",
                          "description": "When the data type is an array, the name of the field items within the array."
                        },
                        "system": {
                          "type": "string",
                          "description": "If the field is a system field, the name of the field."
                        },
                        "custom": {
                          "type": "string",
                          "description": "If the field is a custom field, the URI of the field."
                        },
                        "customId": {
                          "type": "integer",
                          "format": "int64",
                          "description": "If the field is a custom field, the custom ID of the field."
                        },
                        "configuration": {
                          "type": "object",
                          "description": "If the field is a custom field, the configuration of the field.",
                          "additionalProperties": {}
                        }
                      }
                    }
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "The name of the field."
                },
                "key": {
                  "type": "string",
                  "description": "The key of the field."
                },
                "autoCompleteUrl": {
                  "type": "string",
                  "description": "The URL that can be used to automatically complete the field."
                },
                "hasDefaultValue": {
                  "type": "boolean",
                  "description": "Whether the field has a default value."
                },
                "operations": {
                  "type": "array",
                  "description": "The list of operations that can be performed on the field.",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedValues": {
                  "type": "array",
                  "description": "The list of values allowed in the field.",
                  "items": {}
                },
                "defaultValue": {
                  "description": "The default value of the field."
                }
              },
              "xml": {
                "name": "availableField"
              }
            }
          }
        }
      },
      "FieldMetaBean": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Whether the field is required."
          },
          "schema": {
            "type": "object",
            "description": "The data type of the field.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The data type of the field."
                  },
                  "items": {
                    "type": "string",
                    "description": "When the data type is an array, the name of the field items within the array."
                  },
                  "system": {
                    "type": "string",
                    "description": "If the field is a system field, the name of the field."
                  },
                  "custom": {
                    "type": "string",
                    "description": "If the field is a custom field, the URI of the field."
                  },
                  "customId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "If the field is a custom field, the custom ID of the field."
                  },
                  "configuration": {
                    "type": "object",
                    "description": "If the field is a custom field, the configuration of the field.",
                    "additionalProperties": {}
                  }
                }
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the field."
          },
          "key": {
            "type": "string",
            "description": "The key of the field."
          },
          "autoCompleteUrl": {
            "type": "string",
            "description": "The URL that can be used to automatically complete the field."
          },
          "hasDefaultValue": {
            "type": "boolean",
            "description": "Whether the field has a default value."
          },
          "operations": {
            "type": "array",
            "description": "The list of operations that can be performed on the field.",
            "items": {
              "type": "string"
            }
          },
          "allowedValues": {
            "type": "array",
            "description": "The list of values allowed in the field.",
            "items": {}
          },
          "defaultValue": {
            "description": "The default value of the field."
          }
        },
        "xml": {
          "name": "availableField"
        }
      },
      "HistoryMetadata": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the history record."
          },
          "description": {
            "type": "string",
            "description": "The description of the history record."
          },
          "activityDescription": {
            "type": "string",
            "description": "The activity described in the history record."
          },
          "activityDescriptionKey": {
            "type": "string",
            "description": "The key of the activity described in the history record."
          },
          "emailDescription": {
            "type": "string",
            "description": "The description of the email address associated the history record."
          },
          "emailDescriptionKey": {
            "type": "string",
            "description": "The description key of the email address associated the history record."
          },
          "actor": {
            "type": "object",
            "description": "Details of the user whose action created the history record.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the user or system associated with a history record."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user or system associated with a history record."
                  },
                  "displayNameKey": {
                    "type": "string",
                    "description": "The key of the display name of the user or system associated with a history record."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the user or system associated with a history record."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "The URL to an avatar for the user or system associated with a history record."
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL of the user or system associated with a history record."
                  }
                },
                "description": "Details of user or system associated with a issue history metadata item."
              }
            ]
          },
          "generator": {
            "type": "object",
            "description": "Details of the system that generated the history record.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the user or system associated with a history record."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user or system associated with a history record."
                  },
                  "displayNameKey": {
                    "type": "string",
                    "description": "The key of the display name of the user or system associated with a history record."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the user or system associated with a history record."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "The URL to an avatar for the user or system associated with a history record."
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL of the user or system associated with a history record."
                  }
                },
                "description": "Details of user or system associated with a issue history metadata item."
              }
            ]
          },
          "cause": {
            "type": "object",
            "description": "Details of the cause that triggered the creation the history record.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the user or system associated with a history record."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user or system associated with a history record."
                  },
                  "displayNameKey": {
                    "type": "string",
                    "description": "The key of the display name of the user or system associated with a history record."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the user or system associated with a history record."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "The URL to an avatar for the user or system associated with a history record."
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL of the user or system associated with a history record."
                  }
                },
                "description": "Details of user or system associated with a issue history metadata item."
              }
            ]
          },
          "extraData": {
            "type": "object",
            "description": "Additional arbitrary information about the history record.",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "description": "Details of issue history metadata."
      },
      "HistoryMetadataParticipant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the user or system associated with a history record."
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the user or system associated with a history record."
          },
          "displayNameKey": {
            "type": "string",
            "description": "The key of the display name of the user or system associated with a history record."
          },
          "type": {
            "type": "string",
            "description": "The type of the user or system associated with a history record."
          },
          "avatarUrl": {
            "type": "string",
            "description": "The URL to an avatar for the user or system associated with a history record."
          },
          "url": {
            "type": "string",
            "description": "The URL of the user or system associated with a history record."
          }
        },
        "description": "Details of user or system associated with a issue history metadata item."
      },
      "IssueBean": {
        "type": "object",
        "properties": {
          "expand": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "description": "Expand options that include additional issue details in the response."
          },
          "id": {
            "type": "string",
            "description": "The ID of the issue."
          },
          "self": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the issue details."
          },
          "key": {
            "type": "string",
            "description": "The key of the issue."
          },
          "renderedFields": {
            "type": "object",
            "description": "The rendered value of each field present on the issue.",
            "additionalProperties": {}
          },
          "properties": {
            "type": "object",
            "description": "Details of the issue properties identified in the request.",
            "additionalProperties": {}
          },
          "names": {
            "type": "object",
            "description": "The ID and name of each field present on the issue.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "schema": {
            "type": "object",
            "description": "The schema describing each field present on the issue.",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The data type of the field."
                },
                "items": {
                  "type": "string",
                  "description": "When the data type is an array, the name of the field items within the array."
                },
                "system": {
                  "type": "string",
                  "description": "If the field is a system field, the name of the field."
                },
                "custom": {
                  "type": "string",
                  "description": "If the field is a custom field, the URI of the field."
                },
                "customId": {
                  "type": "integer",
                  "format": "int64",
                  "description": "If the field is a custom field, the custom ID of the field."
                },
                "configuration": {
                  "type": "object",
                  "description": "If the field is a custom field, the configuration of the field.",
                  "additionalProperties": {}
                }
              }
            }
          },
          "transitions": {
            "type": "array",
            "description": "The transitions that can be performed on the issue.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the issue transition. Required when specifying a transition to undertake."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the issue transition."
                },
                "to": {
                  "type": "object",
                  "description": "Details of the issue status after the transition.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "The URL of the status."
                        },
                        "statusColor": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the status."
                        },
                        "iconUrl": {
                          "type": "string",
                          "description": "The URL of the icon used to represent the status."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the status."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the status."
                        },
                        "statusCategory": {
                          "type": "object",
                          "description": "The category assigned to the status.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "string",
                                  "description": "The URL of the status category."
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The ID of the status category."
                                },
                                "key": {
                                  "type": "string",
                                  "description": "The key of the status category."
                                },
                                "colorName": {
                                  "type": "string",
                                  "description": "The name of the color used to represent the status category."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the status category."
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "hasScreen": {
                  "type": "boolean",
                  "description": "Whether there is a screen associated with the issue transition."
                },
                "isGlobal": {
                  "type": "boolean",
                  "description": "Whether the issue transition is global, that is, the transition is applied to issues regardless of their status."
                },
                "isInitial": {
                  "type": "boolean",
                  "description": "Whether this is the initial issue transition for the workflow."
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Whether the transition is available to be performed."
                },
                "isConditional": {
                  "type": "boolean",
                  "description": "Whether the issue has to meet criteria before the issue transition is applied."
                },
                "fields": {
                  "type": "object",
                  "description": "Details of the fields associated with the issue transition screen. Use this information to populate <code>fields</code> and <code>update</code> in a transition request.",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "required": {
                        "type": "boolean",
                        "description": "Whether the field is required."
                      },
                      "schema": {
                        "type": "object",
                        "description": "The data type of the field.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The data type of the field."
                              },
                              "items": {
                                "type": "string",
                                "description": "When the data type is an array, the name of the field items within the array."
                              },
                              "system": {
                                "type": "string",
                                "description": "If the field is a system field, the name of the field."
                              },
                              "custom": {
                                "type": "string",
                                "description": "If the field is a custom field, the URI of the field."
                              },
                              "customId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If the field is a custom field, the custom ID of the field."
                              },
                              "configuration": {
                                "type": "object",
                                "description": "If the field is a custom field, the configuration of the field.",
                                "additionalProperties": {}
                              }
                            }
                          }
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the field."
                      },
                      "key": {
                        "type": "string",
                        "description": "The key of the field."
                      },
                      "autoCompleteUrl": {
                        "type": "string",
                        "description": "The URL that can be used to automatically complete the field."
                      },
                      "hasDefaultValue": {
                        "type": "boolean",
                        "description": "Whether the field has a default value."
                      },
                      "operations": {
                        "type": "array",
                        "description": "The list of operations that can be performed on the field.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allowedValues": {
                        "type": "array",
                        "description": "The list of values allowed in the field.",
                        "items": {}
                      },
                      "defaultValue": {
                        "description": "The default value of the field."
                      }
                    },
                    "xml": {
                      "name": "availableField"
                    }
                  }
                },
                "expand": {
                  "type": "string",
                  "description": "Expand options that include additional transition details in the response."
                },
                "looped": {
                  "type": "boolean"
                }
              }
            }
          },
          "operations": {
            "type": "object",
            "description": "The operations that can be performed on the issue.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpsbarBean"
              }
            ]
          },
          "editmeta": {
            "type": "object",
            "description": "The metadata for the fields on the issue that can be amended.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "object",
                    "description": "A list of editable field details.",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "required": {
                          "type": "boolean",
                          "description": "Whether the field is required."
                        },
                        "schema": {
                          "type": "object",
                          "description": "The data type of the field.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The data type of the field."
                                },
                                "items": {
                                  "type": "string",
                                  "description": "When the data type is an array, the name of the field items within the array."
                                },
                                "system": {
                                  "type": "string",
                                  "description": "If the field is a system field, the name of the field."
                                },
                                "custom": {
                                  "type": "string",
                                  "description": "If the field is a custom field, the URI of the field."
                                },
                                "customId": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "If the field is a custom field, the custom ID of the field."
                                },
                                "configuration": {
                                  "type": "object",
                                  "description": "If the field is a custom field, the configuration of the field.",
                                  "additionalProperties": {}
                                }
                              }
                            }
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the field."
                        },
                        "key": {
                          "type": "string",
                          "description": "The key of the field."
                        },
                        "autoCompleteUrl": {
                          "type": "string",
                          "description": "The URL that can be used to automatically complete the field."
                        },
                        "hasDefaultValue": {
                          "type": "boolean",
                          "description": "Whether the field has a default value."
                        },
                        "operations": {
                          "type": "array",
                          "description": "The list of operations that can be performed on the field.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedValues": {
                          "type": "array",
                          "description": "The list of values allowed in the field.",
                          "items": {}
                        },
                        "defaultValue": {
                          "description": "The default value of the field."
                        }
                      },
                      "xml": {
                        "name": "availableField"
                      }
                    }
                  }
                }
              }
            ]
          },
          "changelog": {
            "type": "object",
            "description": " Details of changelogs associated with the issue.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "startAt": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The index of the first item returned on the page."
                  },
                  "maxResults": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of results that could be on the page."
                  },
                  "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results on the page."
                  },
                  "histories": {
                    "type": "array",
                    "description": "The list of changelogs.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the changelog."
                        },
                        "author": {
                          "type": "object",
                          "description": "The user who made the change.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "string",
                                  "description": "The URL of the user."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                                },
                                "key": {
                                  "type": "string",
                                  "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
                                },
                                "emailAddress": {
                                  "type": "string",
                                  "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null."
                                },
                                "avatarUrls": {
                                  "type": "object",
                                  "description": "The avatars of the user.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "16x16": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the item's 16x16 pixel avatar.",
                                          "readOnly": true
                                        },
                                        "24x24": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the item's 24x24 pixel avatar.",
                                          "readOnly": true
                                        },
                                        "32x32": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the item's 32x32 pixel avatar.",
                                          "readOnly": true
                                        },
                                        "48x48": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URL of the item's 48x48 pixel avatar.",
                                          "readOnly": true
                                        }
                                      },
                                      "description": "Details about the avatars for an item."
                                    }
                                  ]
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value."
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Whether the user is active."
                                },
                                "timeZone": {
                                  "type": "string",
                                  "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
                                },
                                "accountType": {
                                  "type": "string",
                                  "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)"
                                }
                              }
                            }
                          ]
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date on which the change took place."
                        },
                        "items": {
                          "type": "array",
                          "description": "The list of items changed.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "description": "The name of the field changed."
                              },
                              "fieldtype": {
                                "type": "string",
                                "description": "The type of the field changed."
                              },
                              "fieldId": {
                                "type": "string",
                                "description": "The ID of the field changed."
                              },
                              "from": {
                                "type": "string",
                                "description": "The details of the original value."
                              },
                              "fromString": {
                                "type": "string",
                                "description": "The details of the original value as a string."
                              },
                              "to": {
                                "type": "string",
                                "description": "The details of the new value."
                              },
                              "toString": {
                                "type": "string",
                                "description": "The details of the new value as a string."
                              }
                            }
                          }
                        },
                        "historyMetadata": {
                          "type": "object",
                          "description": "The history metadata associated with the changed.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of the history record."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the history record."
                                },
                                "activityDescription": {
                                  "type": "string",
                                  "description": "The activity described in the history record."
                                },
                                "activityDescriptionKey": {
                                  "type": "string",
                                  "description": "The key of the activity described in the history record."
                                },
                                "emailDescription": {
                                  "type": "string",
                                  "description": "The description of the email address associated the history record."
                                },
                                "emailDescriptionKey": {
                                  "type": "string",
                                  "description": "The description key of the email address associated the history record."
                                },
                                "actor": {
                                  "type": "object",
                                  "description": "Details of the user whose action created the history record.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the user or system associated with a history record."
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The display name of the user or system associated with a history record."
                                        },
                                        "displayNameKey": {
                                          "type": "string",
                                          "description": "The key of the display name of the user or system associated with a history record."
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the user or system associated with a history record."
                                        },
                                        "avatarUrl": {
                                          "type": "string",
                                          "description": "The URL to an avatar for the user or system associated with a history record."
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "The URL of the user or system associated with a history record."
                                        }
                                      },
                                      "description": "Details of user or system associated with a issue history metadata item."
                                    }
                                  ]
                                },
                                "generator": {
                                  "type": "object",
                                  "description": "Details of the system that generated the history record.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the user or system associated with a history record."
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The display name of the user or system associated with a history record."
                                        },
                                        "displayNameKey": {
                                          "type": "string",
                                          "description": "The key of the display name of the user or system associated with a history record."
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the user or system associated with a history record."
                                        },
                                        "avatarUrl": {
                                          "type": "string",
                                          "description": "The URL to an avatar for the user or system associated with a history record."
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "The URL of the user or system associated with a history record."
                                        }
                                      },
                                      "description": "Details of user or system associated with a issue history metadata item."
                                    }
                                  ]
                                },
                                "cause": {
                                  "type": "object",
                                  "description": "Details of the cause that triggered the creation the history record.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the user or system associated with a history record."
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The display name of the user or system associated with a history record."
                                        },
                                        "displayNameKey": {
                                          "type": "string",
                                          "description": "The key of the display name of the user or system associated with a history record."
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the user or system associated with a history record."
                                        },
                                        "avatarUrl": {
                                          "type": "string",
                                          "description": "The URL to an avatar for the user or system associated with a history record."
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "The URL of the user or system associated with a history record."
                                        }
                                      },
                                      "description": "Details of user or system associated with a issue history metadata item."
                                    }
                                  ]
                                },
                                "extraData": {
                                  "type": "object",
                                  "description": "Additional arbitrary information about the history record.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "description": "Details of issue history metadata."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "versionedRepresentations": {
            "type": "object",
            "description": "The versions of each field on the issue.",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "xml": {
          "name": "issue"
        }
      },
      "IssueTransitionBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the issue transition. Required when specifying a transition to undertake."
          },
          "name": {
            "type": "string",
            "description": "The name of the issue transition."
          },
          "to": {
            "type": "object",
            "description": "Details of the issue status after the transition.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the status."
                  },
                  "statusColor": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the status."
                  },
                  "iconUrl": {
                    "type": "string",
                    "description": "The URL of the icon used to represent the status."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the status."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the status."
                  },
                  "statusCategory": {
                    "type": "object",
                    "description": "The category assigned to the status.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "The URL of the status category."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the status category."
                          },
                          "key": {
                            "type": "string",
                            "description": "The key of the status category."
                          },
                          "colorName": {
                            "type": "string",
                            "description": "The name of the color used to represent the status category."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the status category."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "hasScreen": {
            "type": "boolean",
            "description": "Whether there is a screen associated with the issue transition."
          },
          "isGlobal": {
            "type": "boolean",
            "description": "Whether the issue transition is global, that is, the transition is applied to issues regardless of their status."
          },
          "isInitial": {
            "type": "boolean",
            "description": "Whether this is the initial issue transition for the workflow."
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Whether the transition is available to be performed."
          },
          "isConditional": {
            "type": "boolean",
            "description": "Whether the issue has to meet criteria before the issue transition is applied."
          },
          "fields": {
            "type": "object",
            "description": "Details of the fields associated with the issue transition screen. Use this information to populate <code>fields</code> and <code>update</code> in a transition request.",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "required": {
                  "type": "boolean",
                  "description": "Whether the field is required."
                },
                "schema": {
                  "type": "object",
                  "description": "The data type of the field.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The data type of the field."
                        },
                        "items": {
                          "type": "string",
                          "description": "When the data type is an array, the name of the field items within the array."
                        },
                        "system": {
                          "type": "string",
                          "description": "If the field is a system field, the name of the field."
                        },
                        "custom": {
                          "type": "string",
                          "description": "If the field is a custom field, the URI of the field."
                        },
                        "customId": {
                          "type": "integer",
                          "format": "int64",
                          "description": "If the field is a custom field, the custom ID of the field."
                        },
                        "configuration": {
                          "type": "object",
                          "description": "If the field is a custom field, the configuration of the field.",
                          "additionalProperties": {}
                        }
                      }
                    }
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "The name of the field."
                },
                "key": {
                  "type": "string",
                  "description": "The key of the field."
                },
                "autoCompleteUrl": {
                  "type": "string",
                  "description": "The URL that can be used to automatically complete the field."
                },
                "hasDefaultValue": {
                  "type": "boolean",
                  "description": "Whether the field has a default value."
                },
                "operations": {
                  "type": "array",
                  "description": "The list of operations that can be performed on the field.",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedValues": {
                  "type": "array",
                  "description": "The list of values allowed in the field.",
                  "items": {}
                },
                "defaultValue": {
                  "description": "The default value of the field."
                }
              },
              "xml": {
                "name": "availableField"
              }
            }
          },
          "expand": {
            "type": "string",
            "description": "Expand options that include additional transition details in the response."
          },
          "looped": {
            "type": "boolean"
          }
        }
      },
      "JsonTypeBean": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The data type of the field."
          },
          "items": {
            "type": "string",
            "description": "When the data type is an array, the name of the field items within the array."
          },
          "system": {
            "type": "string",
            "description": "If the field is a system field, the name of the field."
          },
          "custom": {
            "type": "string",
            "description": "If the field is a custom field, the URI of the field."
          },
          "customId": {
            "type": "integer",
            "format": "int64",
            "description": "If the field is a custom field, the custom ID of the field."
          },
          "configuration": {
            "type": "object",
            "description": "If the field is a custom field, the configuration of the field.",
            "additionalProperties": {}
          }
        }
      },
      "LinkGroupBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "styleClass": {
            "type": "string"
          },
          "header": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "styleClass": {
                "type": "string"
              },
              "iconClass": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "weight": {
                "type": "integer",
                "format": "int32"
              }
            },
            "xml": {
              "name": "link"
            }
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "styleClass": {
                  "type": "string"
                },
                "iconClass": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "weight": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "xml": {
                "name": "link"
              }
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkGroupBean"
            }
          }
        }
      },
      "OpsbarBean": {
        "type": "object",
        "properties": {
          "linkGroups": {
            "type": "array",
            "description": "Details of the link groups defining issue operations.",
            "items": {
              "$ref": "#/components/schemas/LinkGroupBean"
            }
          }
        }
      },
      "SimpleLinkBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "styleClass": {
            "type": "string"
          },
          "iconClass": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xml": {
          "name": "link"
        }
      },
      "StatusCategoryJsonBean": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "The URL of the status category."
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the status category."
          },
          "key": {
            "type": "string",
            "description": "The key of the status category."
          },
          "colorName": {
            "type": "string",
            "description": "The name of the color used to represent the status category."
          },
          "name": {
            "type": "string",
            "description": "The name of the status category."
          }
        }
      },
      "StatusJsonBean": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "The URL of the status."
          },
          "statusColor": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "The description of the status."
          },
          "iconUrl": {
            "type": "string",
            "description": "The URL of the icon used to represent the status."
          },
          "name": {
            "type": "string",
            "description": "The name of the status."
          },
          "id": {
            "type": "string",
            "description": "The ID of the status."
          },
          "statusCategory": {
            "type": "object",
            "description": "The category assigned to the status.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "The URL of the status category."
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the status category."
                  },
                  "key": {
                    "type": "string",
                    "description": "The key of the status category."
                  },
                  "colorName": {
                    "type": "string",
                    "description": "The name of the color used to represent the status category."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the status category."
                  }
                }
              }
            ]
          }
        }
      },
      "UserJsonBean": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "The URL of the user."
          },
          "name": {
            "type": "string",
            "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
          },
          "key": {
            "type": "string",
            "description": "This property is no longer available and will be removed from the documentation soon. See the <a href=\"https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\">deprecation notice</a> for details."
          },
          "accountId": {
            "type": "string",
            "description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, <em>5b10ac8d82e05b22cc7d4ef5</em>."
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address of the user. Depending on the user’s privacy settings, this may be returned as null."
          },
          "avatarUrls": {
            "type": "object",
            "description": "The avatars of the user.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "16x16": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the item's 16x16 pixel avatar.",
                    "readOnly": true
                  },
                  "24x24": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the item's 24x24 pixel avatar.",
                    "readOnly": true
                  },
                  "32x32": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the item's 32x32 pixel avatar.",
                    "readOnly": true
                  },
                  "48x48": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the item's 48x48 pixel avatar.",
                    "readOnly": true
                  }
                },
                "description": "Details about the avatars for an item."
              }
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the user. Depending on the user’s privacy settings, this may return an alternative value."
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active."
          },
          "timeZone": {
            "type": "string",
            "description": "The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
          },
          "accountType": {
            "type": "string",
            "description": "The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)"
          }
        }
      },
      "PartialSuccessBean": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "issueId": {
                  "type": "integer",
                  "format": "int64"
                },
                "issueKey": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Entry": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "integer",
            "format": "int64"
          },
          "issueKey": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BoardConfigBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "self": {
            "type": "string",
            "format": "uri"
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "projectKeyOrId": {
                "type": "string"
              }
            }
          },
          "filter": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "subQuery": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string"
              }
            }
          },
          "columnConfig": {
            "type": "object",
            "properties": {
              "columns": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "statuses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "self": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    },
                    "min": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "max": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "constraintType": {
                "type": "string"
              }
            }
          },
          "estimation": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "field": {
                "type": "object",
                "properties": {
                  "fieldId": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "ranking": {
            "type": "object",
            "properties": {
              "rankCustomFieldId": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "ColumnBean": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "min": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ColumnConfigBean": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "statuses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                },
                "min": {
                  "type": "integer",
                  "format": "int32"
                },
                "max": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "constraintType": {
            "type": "string"
          }
        }
      },
      "EstimationConfigBean": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "field": {
            "type": "object",
            "properties": {
              "fieldId": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              }
            }
          }
        }
      },
      "EstimationFieldBean": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "LocationBean": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "projectKeyOrId": {
            "type": "string"
          }
        }
      },
      "RankingConfigBean": {
        "type": "object",
        "properties": {
          "rankCustomFieldId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RelationBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "self": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "SubqueryBean": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          }
        }
      },
      "BoardCreateBean": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "filterId": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "projectKeyOrId": {
                "type": "string"
              }
            }
          }
        }
      },
      "ReportsResponseBean": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ReportBean": {
        "type": "object"
      },
      "PageBeanQuickFilterBean": {
        "type": "object",
        "properties": {
          "maxResults": {
            "type": "integer",
            "format": "int32"
          },
          "startAt": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "isLast": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "boardId": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                },
                "jql": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "QuickFilterBean": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "boardId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "jql": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}